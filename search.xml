<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>PR视频字幕批量生成程序(用讯飞听见识别音频)</title>
    <url>/2017/11/23/auto-caption-procedure/</url>
    <content><![CDATA[<p> 用过视频剪辑软件的小伙伴们可能都会为添加视频字幕所烦恼，尤其是当一个视频包含了大量语音而且只有你一个人在配字幕的时候,那就变得很蛋疼；尽管到最后你完成了这么庞大的工作量，但是你都会一度怀疑自己的人生。我曾经为一个十来分钟的视频配字幕都配到我想吐。</p>
<span id="more"></span>

<p> 然后我最近看B站发现一个挺有意思的事情,就是利用讯飞语音识别服务可以识别语音并且自动生成文字，这就省掉了不少人力去听的功夫。众所周知科大讯飞的语音识别功能是蛮强的，看过老罗手机发布会视频的就能知道。知道了这个功能后，我就想到要做一个PR字幕自动生成工具,下面将讲解我是怎么一步步实现的。</p>
<p>  <img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/interesting/auto_caption/1.jpg"></p>
<p>首先打开<a href="http://www.iflyrec.com/">讯飞听见</a>，遗憾的是，讯飞的这个语音识别功能是要收费的，看下价格，一种是机器快转（19.8元/小时），另一种是人机精转（80元/小时），看到这里，你是否心想：妖，都要收费的，我一个农村来的怎么负担得起。别急，我也是这样想的，继续往下看。点击上图的立即下单 </p>
<p><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/interesting/auto_caption/2.jpg"></p>
<p>进入到这个页面，我们可以发现讯飞提供了一个体验的功能，就是你可以上传一段录音来体验一下他们家的这个语音识别功能，当然它是有限制的，你最多可以同时上传50条语音，每条语音不超过500M且不超过1分钟时长。所以说，这个功能对后期才配音的人员就比较友好。当然找个工具分割一下语音也是可以的，有空我再看看能不能写段代码实现语音分割。这里我上传了两条语音来试一下 </p>
<p><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/interesting/auto_caption/3.jpg"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/interesting/auto_caption/4.jpg"></p>
<p>从上图可以看到它识别的准确度还是蛮高的。但如果你想要复制识别出来的文本是不行的，它已经做了限制了复制的功能。这里写了个js插件，可以一次性获取识别出的文本。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/interesting/auto_caption/5.jpg"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/interesting/auto_caption/6.jpg"></p>
<p>在浏览器添加插件后刷新页面 ,可以发现红色箭头处多了个按钮，点击“获取数据”按钮就可以获得文本并显示在左边箭头所指的文本框里。右下角可以自由拉大缩小文本框</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/interesting/auto_caption/7.jpg"></p>
<p>全选复制上图箭头所指文本框的内容，然后新建一个txt文件或者json文件，用记事本打开粘贴到里面,然后点击菜单文件的另存为,将编码ANSI改为UTF-8,保存。注意一定要更改编码，不然后面生成的字幕文件会出现乱码。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/interesting/auto_caption/8.jpg"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/interesting/auto_caption/9.jpg"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/interesting/auto_caption/10.jpg"></p>
<p>字幕文本保存好后，接下来就要生成一个字幕模板，这里使用的Premiere CC pro 2017软件。打开PR,先根据自己的喜好制作一个字幕样式当作字幕模板。接着选中字幕模板-&gt;文件-&gt;导出-&gt;标题,就可以生成一个字幕模板 </p>
<p><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/interesting/auto_caption/11.jpg"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/interesting/auto_caption/12.jpg"></p>
<p>本来想分析一下整个序列的，但是不知什么原因PR导出Fianl cut pro xml总是提示有转换有问题，只好作罢。如果可以获得正确的序列的xml,就可以增改里面的代码，按时间线调整素材的顺序，再导入PR就可以自动排序好视频音频字幕的顺序 。(理论上是这样，但在我看到整个序列的xml之后，我有点怀疑我的想法，因为我感觉我在看天书。)</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/interesting/auto_caption/13.jpg"></p>
<p>这里我右击打开字幕文件，找到存放字幕文本的标签TRString,这样更改里面的文本就相当于换了一个字幕文件？如果你这样做PR是不能正确识别的。还有个地方需要注意的就是更改TRString下文本的同时也要注意这个文本的长度是多少，因为CharacterAttributes这个标签下的属RunCount就是记录文本字符的长度的。但就找到并了解它们就花了我大半天，晕~~。知道了这两个标签的作用后，就可以通过程序来修改它了。 </p>
<p><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/interesting/auto_caption/14.jpg"></p>
<p>OK,一切准备就绪，就是准备好了json格式的文本和字幕模板后，我们就可以通过java程序来整合他们并生成字幕了。这里我写了个java工具，可以完成这一平时操作起来非常耗时又费劲的工作。<br><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/interesting/auto_caption/15.jpg"></p>
<p>用法也很简单，就是选择字幕模板，字幕文件和保存路径就可以批量生成字幕了，字幕文件将保存在一个名为Titles的目录里,这样方便整个目录拷贝到PR中。值得注意的是，目前仅支持PR CC版本的字幕文件。还有就是要运行它前提是要有<a href="http://jingyan.baidu.com/article/e75aca85b29c3b142edac6a8.html">java运行环境</a>。其它版本的PR，如cs,非常有空或者有兴致的时候再改下。</p>
<p> <img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/interesting/auto_caption/16.jpg"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/interesting/auto_caption/17.jpg"> </p>
<p><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/interesting/auto_caption/18.jpg"></p>
<p>可以看到生成的字幕文件导入后能够正确识别,样式也和原来的模板保持一致；时间线也是按顺序来的,只要在前面导入语音识别时顺序没搞乱的话。事实上一般你在配音的时候无论用的是手机还是录音笔，都是会按照一定的顺序生成文件名的，所以一般已经不会搞乱，我的建议是都把录音都放在一个单独的文件夹里。</p>
<p>至此就完成了字幕的批量生成，只需用到两个工具，一个是js插件，用来获取讯飞识别出来的文本,一个是 java工具,一步到位生成字幕到指定目录。<br>如果想直接用这两个工具的话,戳这里:<a href="http://pan.baidu.com/s/1slBIYCl"  target="_brank">密码：9o5n</a></p>
<p>如果想分析源码的话,戳这里:<a href="http://pan.baidu.com/s/1slwPYjj" target="_brank">密码：hsgl</a></p>
]]></content>
      <categories>
        <category>Interesting</category>
      </categories>
      <tags>
        <tag>Clip</tag>
        <tag>Caption</tag>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>Java常见设计模式</title>
    <url>/2019/03/19/common-design-patterns/</url>
    <content><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>设计模式的概念最早来源于建筑大师 Alexander 的《建筑的永恒方法一书》，书中的观点实际上也适用于软件设计领域。Alexander 是这样描述模式的：<br><strong>模式是一条有三个部分组成的通用规则：它表示了一个特定环境、一类问题和一个解决方案之间的关系。每一个模式描述了一个不断重复发生的问题，以及该问题解决方案的核心设计。</strong></p>
<span id="more"></span>

<p>软件设计模式通常被分成三类：</p>
<ol>
<li>创建型：创建对象时，不再直接实例化对象，而是根据特定场景，由程序来确定创建对象的方式，从而保证更高的性能、更好的架构优势。创建型模式主要有简单工厂模式、工厂方法、抽象工厂模式、单例模式、生成器模式和原型模式。</li>
<li>结构型：用于帮助将多个对象组织成更大的结构。结构型模式主要有适配器模式、桥接模式、组合器模式、装饰器模式、门面模式、享元模式和代理模式。</li>
<li>行为型：用于帮助系统间各对象的通信，以及如何控制复杂系统中的流程。行为型模式主要有命令模式、解释器模式、迭代器模式、中介者模式、备忘录模式、观察者模式、状态模式、策略模式、模板模式和访问模式。</li>
</ol>
<h3 id="设计模式"><a href="#设计模式" class="headerlink" title="设计模式"></a>设计模式</h3><h4 id="单例模式"><a href="#单例模式" class="headerlink" title="单例模式"></a>单例模式</h4><p>如何一个类始终只能创建一个实例，则这个类被称为单例类，这种模式就被称为单例模式。有时候访问系统的某些组件时只需访问其一个实例，而不需重复创建实例，如对spring 框架而言，推荐将一些公共的业务逻辑组件、DAO组件、数据源组件配置成单例的行为方式，因为这些组件无须保存任何用户状态，设为单例的行为方式，所有客户端都可以共享这些组件。</p>
<p>单例模式需保证类只能产生一个实例，因此需要隐藏类的构造器，同时设置一个公共静态方法用于访问该实例对象。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* <span class="doctag">@author</span> Kevin Lau</span></span><br><span class="line"><span class="comment">* <span class="doctag">@version</span> 创建时间：Mar 19, 2019 10:07:07 PM</span></span><br><span class="line"><span class="comment">* <span class="doctag">@Description</span> 单例模式:1.减少重复创建实例带来的系统开销 2.便于跟踪单个实例生命周期、状态</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Singleton</span> &#123;</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> Singleton instance;</span><br><span class="line">	<span class="keyword">private</span> <span class="title function_">Singleton</span><span class="params">()</span> &#123;&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> Singleton <span class="title function_">getInstance</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="keyword">if</span> (instance == <span class="literal">null</span>) &#123;</span><br><span class="line">			instance = <span class="keyword">new</span> <span class="title class_">Singleton</span>();</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> instance;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">		<span class="type">Singleton</span> <span class="variable">instance1</span> <span class="operator">=</span> Singleton.getInstance();</span><br><span class="line">		<span class="type">Singleton</span> <span class="variable">instance2</span> <span class="operator">=</span> Singleton.getInstance();</span><br><span class="line">		<span class="comment">// 查看两个对象是否相等</span></span><br><span class="line">		System.out.println(instance1 == instance2);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="简单工厂"><a href="#简单工厂" class="headerlink" title="简单工厂"></a>简单工厂</h4><p>日常开发中，常常会遇到应用中各实例之间存在复杂的调用关系，即依赖关系，如 A 实例需要调用 B 实例，则称 A 实例依赖于 B 实例。在 A 对象需要调用 B 对象的方法时，最普通的做法是使用 new 关键字来创建 B对象，再用 B 对象来调用其方法。从语法的角度，这不会出现任何问题，但该做法的弊端在于：A 类方法内直接调用了 B 类的类名，这种方式便是硬编码耦合，当系统需要重构时，如果需要用 C 替换 B，那么就需要修改 A 方法，如果有成百上千个类都以类似 A 的方式耦合了 B，那么要修改的地方也有成百上千个，这是非常可怕的。</p>
<p>如果换一个角度来思考这个问题， A 不关心 B 的构造过程是怎么的，它只需要用到 B 的方法而已。考虑让 B 实现一个接口 IB，而 A 只需要 IB 接口耦合， A 不需直接通过 new 的方式来获得 B 实例，而是通过一个工厂类 IBFactory 来负责创建 B实例；A 只需通过工厂的方法即可获得B实例。如果系统重构时需要用 C 替换B，则 C 也实现 IB 接口，并且工厂原来创建 B 实例的方法改为创建 C 实例就可以了。</p>
<p>观看以下一个例子， 某位主人想撸猫, 他不关心猫是怎样产生的，只想在撸猫过程中听到猫叫和看到猫吃东西， 则通过动物工厂拿到了猫的实例对象，然后调用猫的行为方法，在这个过程中，猫实现了动物接口的基本行为，主人只需与猫的特殊抽象：动物接口耦合，并通过工厂返回动物接口的猫实例，就能与猫互动了。假若有一天，他觉得猫太高冷了不想撸猫想撸狗了，则同样将狗这个对象实现动物接口的基本方法，然后修改工厂方法改为生产狗就行了，不需要修改这位主人的主体行为方法。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* <span class="doctag">@author</span> Kevin Lau</span></span><br><span class="line"><span class="comment">* <span class="doctag">@version</span> 创建时间：Mar 19, 2019 10:54:33 PM</span></span><br><span class="line"><span class="comment">* <span class="doctag">@Description</span> 接口动物的行为</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">Animal</span> &#123;</span><br><span class="line">	<span class="keyword">void</span> <span class="title function_">speak</span><span class="params">()</span>;</span><br><span class="line">	<span class="keyword">void</span> <span class="title function_">eat</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* <span class="doctag">@author</span> Kevin Lau</span></span><br><span class="line"><span class="comment">* <span class="doctag">@version</span> 创建时间：Mar 19, 2019 10:48:34 PM</span></span><br><span class="line"><span class="comment">* <span class="doctag">@Description</span> 猫的行为</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Cat</span> <span class="keyword">implements</span> <span class="title class_">Animal</span>&#123;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">speak</span><span class="params">()</span> &#123;</span><br><span class="line">		System.out.println(<span class="string">&quot;喵喵喵~~&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">eat</span><span class="params">()</span> &#123;</span><br><span class="line">		System.out.println(<span class="string">&quot;我要吃鱼。&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/**</span><br><span class="line">* @author Kevin Lau</span><br><span class="line">* @version 创建时间：Mar 19, 2019 10:51:06 PM</span><br><span class="line">* @Description 狗的行为</span><br><span class="line">*/</span><br><span class="line">public class Dog implements Animal&#123;</span><br><span class="line"></span><br><span class="line">	public void speak() &#123;</span><br><span class="line">		System.out.println(&quot;旺旺旺~~&quot;);</span><br><span class="line">	&#125; </span><br><span class="line">	public void eat() &#123;</span><br><span class="line">		System.out.println(&quot;我要啃骨头。&quot;);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* <span class="doctag">@author</span> Kevin Lau</span></span><br><span class="line"><span class="comment">* <span class="doctag">@version</span> 创建时间：Mar 19, 2019 10:55:25 PM</span></span><br><span class="line"><span class="comment">* <span class="doctag">@Description</span> 动物梦工厂</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AnimalFactory</span> &#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> Animal <span class="title function_">getAnimal</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Cat</span>();</span><br><span class="line">		<span class="comment">//return new Dog();</span></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* <span class="doctag">@author</span> Kevin Lau</span></span><br><span class="line"><span class="comment">* <span class="doctag">@version</span> 创建时间：Mar 19, 2019 10:53:09 PM</span></span><br><span class="line"><span class="comment">* <span class="doctag">@Description</span> 人的行为</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Master</span> &#123;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">playWithAnimal</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="comment">// 传统做法</span></span><br><span class="line">		<span class="comment">// Cat cat = new Cat();</span></span><br><span class="line">		<span class="comment">// Dog dog = new Dog();</span></span><br><span class="line">		<span class="type">AnimalFactory</span> <span class="variable">factory</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AnimalFactory</span>();</span><br><span class="line">		<span class="type">Animal</span> <span class="variable">animal</span> <span class="operator">=</span> factory.getAnimal();</span><br><span class="line">		animal.speak();</span><br><span class="line">		animal.eat();</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">		playWithAnimal();</span><br><span class="line">	&#125;	</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="工厂方法"><a href="#工厂方法" class="headerlink" title="工厂方法"></a>工厂方法</h4><p>在简单工厂模式中，系统使用工厂类来生产实例，由该工厂类来决定生产哪个类的实例，若要返回不同实例则需修改逻辑判断，如果不想在工厂类中进行逻辑判断，可以为不同产品类提供不同的工厂，由不同的工厂类来生产对应的实例。</p>
<p>以上面为例子，将动物工厂抽象成接口，同时提供生产猫和生产狗的两个工厂实现类</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* <span class="doctag">@author</span> Kevin Lau</span></span><br><span class="line"><span class="comment">* <span class="doctag">@version</span> 创建时间：Mar 19, 2019 10:55:25 PM</span></span><br><span class="line"><span class="comment">* <span class="doctag">@Description</span> 动物梦工厂</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">AnimalFactory</span> &#123;</span><br><span class="line">	 Animal <span class="title function_">getAnimal</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* <span class="doctag">@author</span> Kevin Lau</span></span><br><span class="line"><span class="comment">* <span class="doctag">@version</span> 创建时间：Mar 20, 2019 9:27:38 PM</span></span><br><span class="line"><span class="comment">* <span class="doctag">@Description</span> 猫工厂</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CatFactory</span> <span class="keyword">implements</span> <span class="title class_">AnimalFactory</span>&#123;</span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="keyword">public</span> Animal <span class="title function_">getAnimal</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Cat</span>();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* <span class="doctag">@author</span> Kevin Lau</span></span><br><span class="line"><span class="comment">* <span class="doctag">@version</span> 创建时间：Mar 20, 2019 9:25:13 PM</span></span><br><span class="line"><span class="comment">* <span class="doctag">@Description</span> 狗工厂</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DogFactory</span> <span class="keyword">implements</span> <span class="title class_">AnimalFactory</span>&#123;</span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="keyword">public</span> Animal <span class="title function_">getAnimal</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Dog</span>();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* <span class="doctag">@author</span> Kevin Lau</span></span><br><span class="line"><span class="comment">* <span class="doctag">@version</span> 创建时间：Mar 19, 2019 10:53:09 PM</span></span><br><span class="line"><span class="comment">* <span class="doctag">@Description</span> 人的行为</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Master</span> &#123;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">playWithAnimal</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="comment">// 撸猫</span></span><br><span class="line">		<span class="type">CatFactory</span> <span class="variable">catFactory</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CatFactory</span>();</span><br><span class="line">		<span class="type">Animal</span> <span class="variable">cat</span> <span class="operator">=</span> catFactory.getAnimal();</span><br><span class="line">		cat.speak();</span><br><span class="line">		cat.eat();</span><br><span class="line">		</span><br><span class="line">		<span class="comment">// 撸狗</span></span><br><span class="line">		<span class="type">DogFactory</span> <span class="variable">dogFactory</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DogFactory</span>();</span><br><span class="line">		<span class="type">Animal</span> <span class="variable">dog</span> <span class="operator">=</span> dogFactory.getAnimal();</span><br><span class="line">		dog.speak();</span><br><span class="line">		dog.eat();</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">		playWithAnimal();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="抽象工厂"><a href="#抽象工厂" class="headerlink" title="抽象工厂"></a>抽象工厂</h4><p>从上面工厂方法的例子可看出，如果客户端需要调用多个不同的 Animal 实例时，程序必须要显式地创建不同的 AnimalFactory 实例，虽然客户端代码避免了与被调用对象的耦合，却需要与不同的工厂类进行耦合，这依然是个问题。</p>
<p>为了解决客户端与不同工厂类耦合的问题，考虑新增一个工厂类，但这个工厂类不是生产 Animal 实例，而是生产 AnimalFactory 实例，也就是说这个工厂类不再生产具体的被调用对象，而是生产工厂对象，这种设计模式也被称为抽象工厂模式。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* <span class="doctag">@author</span> Kevin Lau</span></span><br><span class="line"><span class="comment">* <span class="doctag">@version</span> 创建时间：Mar 20, 2019 9:51:04 PM</span></span><br><span class="line"><span class="comment">* <span class="doctag">@Description</span> 抽象工厂</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AnimalFactoryFactory</span> &#123;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> AnimalFactory <span class="title function_">getAnimalFactory</span><span class="params">(String type)</span> &#123;</span><br><span class="line">		<span class="keyword">if</span> (<span class="string">&quot;cat&quot;</span>.equalsIgnoreCase(type)) &#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">CatFactory</span>();</span><br><span class="line">		&#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">&quot;dog&quot;</span>.equalsIgnoreCase(type)) &#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">DogFactory</span>();</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>


<h4 id="代理模式"><a href="#代理模式" class="headerlink" title="代理模式"></a>代理模式</h4><p>代理模式是指当客户端需要调用某个对象时，客户端实际上不关心是否调用真正的对象，它只需要一个能够提供一个功能的对象即可，这样就可以使用真实对象的代理来达到使用该功能的目的。</p>
<p>总而言之，只要客户端不能或不想直接访问被调用对象，都可以通过设置代理对象来访问被代理对象的功能，出现这种情况的原因有很多，比如当需要创建一个系统开销比较大的对象或者被调用对象在远程主机上，又或者被调用对象需要增强功能时都可以设置代理。</p>
<p>观察下面一个例子，首先创建了一个图片接口，提供了一个对应的大图片实现类，其中从该实现类的构建方法可知实例化该对象时会有3秒的停顿，其实是为了模拟真实情况下大图片加载所带来的一定时间的花销。如果采用代理模式，直接实例化 BigImage，则系统会产生 3s 延迟，为了避免这种延迟，采用代理模式，新建了一个代理类，ImageProxy，同样实现了 Image 接口，内部有一个Image接口成员，用来指向被代理对象，从 show()方法可看出，当需要使用 show 功能时才会实例化被代理对象，因此系统初始化时实例化代理类不会产生额外的花销。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* <span class="doctag">@author</span> Kevin Lau</span></span><br><span class="line"><span class="comment">* <span class="doctag">@version</span> 创建时间：Mar 20, 2019 10:21:32 PM</span></span><br><span class="line"><span class="comment">* <span class="doctag">@description</span> 图片接口</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">Image</span> &#123;</span><br><span class="line">	<span class="keyword">void</span> <span class="title function_">show</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* <span class="doctag">@author</span> Kevin Lau</span></span><br><span class="line"><span class="comment">* <span class="doctag">@version</span> 创建时间：Mar 20, 2019 10:22:02 PM</span></span><br><span class="line"><span class="comment">* <span class="doctag">@Description</span> 大图片</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BigImage</span> <span class="keyword">implements</span> <span class="title class_">Image</span> &#123;</span><br><span class="line">	<span class="keyword">public</span>  <span class="title function_">BigImage</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			<span class="comment">// 暂停3秒，模拟系统花销</span></span><br><span class="line">			Thread.sleep(<span class="number">3000</span>);</span><br><span class="line">			System.out.println(<span class="string">&quot;图片装载成功&quot;</span>);</span><br><span class="line">		&#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">show</span><span class="params">()</span> &#123;</span><br><span class="line">		System.out.println(<span class="string">&quot;绘制大图片&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* <span class="doctag">@author</span> Kevin Lau</span></span><br><span class="line"><span class="comment">* <span class="doctag">@version</span> 创建时间：Mar 20, 2019 10:24:45 PM</span></span><br><span class="line"><span class="comment">* <span class="doctag">@description</span> 图片代理</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ImageProxy</span> <span class="keyword">implements</span> <span class="title class_">Image</span> &#123;</span><br><span class="line">	<span class="keyword">private</span> Image image;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">public</span> <span class="title function_">ImageProxy</span><span class="params">(Image image)</span> &#123;</span><br><span class="line">		<span class="built_in">this</span>.image = image;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">show</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="comment">// 只有真正需要用到 show 方法时才会创建被代理对象</span></span><br><span class="line">		<span class="keyword">if</span> (image == <span class="literal">null</span>) &#123;</span><br><span class="line">			image = <span class="keyword">new</span> <span class="title class_">BigImage</span>();</span><br><span class="line">		&#125;</span><br><span class="line">		image.show();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* <span class="doctag">@author</span> Kevin Lau</span></span><br><span class="line"><span class="comment">* <span class="doctag">@version</span> 创建时间：Mar 20, 2019 10:43:03 PM</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ProxyTest</span> &#123;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">		<span class="type">long</span> <span class="variable">start</span> <span class="operator">=</span> System.currentTimeMillis();</span><br><span class="line">		<span class="type">Image</span> <span class="variable">image</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ImageProxy</span>(<span class="literal">null</span>);</span><br><span class="line">		System.out.println(<span class="string">&quot;系统得到 Image 对象的时间开销: &quot;</span> + (System.currentTimeMillis() - start));</span><br><span class="line">		<span class="comment">// 只有真正调用show方法时才会创建被代理对象</span></span><br><span class="line">		image.show();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>上面运行输出：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">系统得到 Image 对象的时间开销:0</span><br><span class="line">图片装载成功</span><br><span class="line">绘制大图片</span><br></pre></td></tr></table></figure>
<p>从结果可知，代理类其实是延迟了被代理对象的实例化，也就是延迟了系统开销，系统开销并不会减少，既然如此，使用代理类的好处是？可以从两个方面来回答该问题：</p>
<p>1.将被代理对象 BigImage 推迟到真正需要时才实例化可以保证前面程序的流畅性，减少 BigImage 在内存中的存活时间，从宏观上来看的确是节省了系统的内存开销。</p>
<p>2.在某些情况下，系统可能永远不会真正调用到 ImageProxy 的 show 方法，意味着系统无需创建 BigImage 对象，从而在一定程序性上避免了系统内1  ··  </p>
<p>存开销。比如在使用对象映射框架 Hibernate 时，Hibernate 的延迟加载就是采用这种这种设计模式，当 A 实体和 B 实体存在依赖关系时，Hibernate 默认启用延迟加载，当系统加载 A 实体时，A 关联的 B 实体并未被加载出来，A 关联的都是 B实体的代理对象，当 A 真正需要访问 B 时，系统才会去数据库抓取 B 实体对应的记录。可见， Hibernate 的延迟加载充分体现了代理模式的优势, 如果不使用代理模式，系统加载 A 时，同时也加载 A 关联的所有实体，这是多么大的一笔开销。 </p>
<p>除了上面处于系统性能考虑使用到代理模式之外，还有一种场景需要用到代理模式，便是需要增强目标对象功能的时候，当目标对象的功能不满足需求时，可以通过代理对象为被代理对象增强功能。借助 Java 提供的 Proxy 和 Invocationhandler，可以实现在运行时生成动态代理的对象，该动态代理对象就可以充当目标对象使用，同时也可增强目标对象的功能。</p>
<p>JDK 只能创建指定接口的动态代理，因此首先创建一个接口：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* <span class="doctag">@author</span> Kevin Lau</span></span><br><span class="line"><span class="comment">* <span class="doctag">@version</span> 创建时间：Mar 21, 2019 12:11:59 AM</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">Man</span> &#123;</span><br><span class="line">	<span class="keyword">void</span> <span class="title function_">desc</span><span class="params">()</span>;</span><br><span class="line">	<span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>创建 Gunman 类实现 Man 接口</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* <span class="doctag">@author</span> Kevin Lau</span></span><br><span class="line"><span class="comment">* <span class="doctag">@version</span> 创建时间：Mar 21, 2019 12:12:48 AM</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">GunMan</span> <span class="keyword">implements</span> <span class="title class_">Man</span>&#123;</span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">desc</span><span class="params">()</span> &#123;</span><br><span class="line">		System.out.println(<span class="string">&quot;我是男人&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">		System.out.println(<span class="string">&quot;我奔跑迅速&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>假设客户端需要增强 Gunman 类的功能，比如添加事务控制，在目标方法执行之前开始事务，在目标方法执行之后结束事务。为了实现该功能，可以为目标对象创建一个代理对象，该代理对像实现了目标对象的接口，拥有目标对象的方法，并且增加了事务控制功能。</p>
<p>首先创建一个事务控制类，包括两个方法分别代表开始和结束事务。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* <span class="doctag">@author</span> Kevin Lau</span></span><br><span class="line"><span class="comment">* <span class="doctag">@version</span> 创建时间：Mar 21, 2019 12:15:35 AM</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TxUtil</span> &#123;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">beginTx</span><span class="params">()</span> &#123;</span><br><span class="line">		System.out.println(<span class="string">&quot;=== 模拟事务开始 ===&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">endTx</span><span class="params">()</span> &#123;</span><br><span class="line">		System.out.println(<span class="string">&quot;=== 模拟事务结束 ===&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>创建 InvocationHandler 接口的实现类，该接口的方法 invoke 方法将会作为代理对象的方法实现。通过这种方式，使得代理对象的方法既回调了被代理对象的方法，也为被代理对象的方法增加了事务功能。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* <span class="doctag">@author</span> Kevin Lau</span></span><br><span class="line"><span class="comment">* <span class="doctag">@version</span> 创建时间：Mar 21, 2019 12:17:04 AM</span></span><br><span class="line"><span class="comment">* <span class="doctag">@Description</span> 动态处理器</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyInvokationHandler</span> <span class="keyword">implements</span> <span class="title class_">InvocationHandler</span>&#123;</span><br><span class="line">	<span class="comment">// 被代理对象</span></span><br><span class="line">	<span class="keyword">private</span> Object target;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setTarget</span><span class="params">(Object target)</span> &#123;</span><br><span class="line">		<span class="built_in">this</span>.target = target;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="comment">// 当执行动态代理对象方法时，会被替换成执行以下方法</span></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="keyword">public</span> Object <span class="title function_">invoke</span><span class="params">(Object proxy, Method method, Object[] args)</span> <span class="keyword">throws</span> Throwable &#123;</span><br><span class="line">		<span class="type">TxUtil</span> <span class="variable">tx</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TxUtil</span>();</span><br><span class="line">		<span class="comment">// 模拟事务开始</span></span><br><span class="line">		tx.beginTx();</span><br><span class="line">		<span class="comment">// 以 target 作为主调来执行 method 方法</span></span><br><span class="line">		<span class="type">Object</span> <span class="variable">result</span> <span class="operator">=</span> method.invoke(target, args);</span><br><span class="line">		<span class="comment">// 模拟事务结束</span></span><br><span class="line">		tx.endTx();</span><br><span class="line">		<span class="keyword">return</span> result;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>下面的动态代理工厂类将为指定的被代理对象生成动态代理实例，这个动态代理对象与被代理对象实现了相同的接口，当程序调用动态代理对象的公共方法时，实际上将会变成执行 MyInvokationHandler 的 invoke() 方法。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* <span class="doctag">@author</span> Kevin Lau</span></span><br><span class="line"><span class="comment">* <span class="doctag">@version</span> 创建时间：Mar 21, 2019 12:24:16 AM</span></span><br><span class="line"><span class="comment">* <span class="doctag">@Description</span> 动态代理工厂</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyProxyFactory</span> &#123;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title function_">getProxy</span><span class="params">(Object target)</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">		<span class="type">MyInvokationHandler</span> <span class="variable">handler</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyInvokationHandler</span>();</span><br><span class="line">		handler.setTarget(target);</span><br><span class="line">		<span class="keyword">return</span> Proxy.newProxyInstance(target.getClass().getClassLoader(), target.getClass().getInterfaces(), handler);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>测试类</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* <span class="doctag">@author</span> Kevin Lau</span></span><br><span class="line"><span class="comment">* <span class="doctag">@version</span> 创建时间：Mar 21, 2019 12:28:21 AM</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">		<span class="type">Man</span> <span class="variable">target</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">GunMan</span>();</span><br><span class="line">		<span class="comment">// 指定 target 来创建动态代理对象</span></span><br><span class="line">		<span class="type">Man</span> <span class="variable">manProxy</span> <span class="operator">=</span> (Man)MyProxyFactory.getProxy(target);</span><br><span class="line">		manProxy.desc();</span><br><span class="line">		manProxy.run();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>执行main方法，输出：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">=== 模拟事务开始 ===</span><br><span class="line">我是男人</span><br><span class="line">=== 模拟事务结束 ===</span><br><span class="line">=== 模拟事务开始 ===</span><br><span class="line">我奔跑迅速</span><br><span class="line">=== 模拟事务结束 ===</span><br></pre></td></tr></table></figure>


<h4 id="策略模式"><a href="#策略模式" class="headerlink" title="策略模式"></a>策略模式</h4><p>策略模式用来封装系列算法，这些算法通常被封装在一个被称为 Context 的类中，客户端程序可以自由选择其中一种算法，或者让 Context 为客户端选择一个最佳的算法，使用策略模式的目的是为了支持算法的自由切换。</p>
<p>考虑一种场景，比如网上书店会偶尔进行优惠购书的促销活动，那么网站需要考虑各种打折促销的活动。为了实现这些需求，程序传统做法使用如下方式来实现：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* <span class="doctag">@author</span> Kevin Lau</span></span><br><span class="line"><span class="comment">* <span class="doctag">@version</span> 创建时间：Mar 21, 2019 11:05:33 PM</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Discount</span> &#123;</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> <span class="type">int</span> <span class="variable">VIP_DISCOUNT</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> <span class="type">int</span> <span class="variable">OLD_DISCOUNT</span> <span class="operator">=</span> <span class="number">2</span>;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">private</span> <span class="type">int</span> discountType;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getDiscountType</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> discountType;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setDiscountType</span><span class="params">(<span class="type">int</span> disCountType)</span> &#123;</span><br><span class="line">		<span class="built_in">this</span>.discountType = disCountType;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">public</span> <span class="type">double</span> <span class="title function_">discount</span><span class="params">(<span class="type">double</span> price)</span> &#123;</span><br><span class="line">		<span class="comment">// 针对不同情况采取不同的算法</span></span><br><span class="line">		<span class="keyword">switch</span> (getDiscountType()) &#123;</span><br><span class="line">			<span class="keyword">case</span> VIP_DISCOUNT:</span><br><span class="line">				<span class="keyword">return</span> vipDiscount(price);</span><br><span class="line">			<span class="keyword">case</span> OLD_DISCOUNT:</span><br><span class="line">				<span class="keyword">return</span> oldDiscount(price);</span><br><span class="line">			<span class="keyword">default</span>:</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">1.0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">public</span> <span class="type">double</span> <span class="title function_">vipDiscount</span><span class="params">(<span class="type">double</span> price)</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> price * <span class="number">0.5</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">public</span> <span class="type">double</span> <span class="title function_">oldDiscount</span><span class="params">(<span class="type">double</span> price)</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> price * <span class="number">0.7</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这段程序没有什么问题，但如果继续添加不同种类的折扣，则要至少要修改程序3个地方，首先要添加一个表示折扣种类的常量，然后在 switch 中新增一个case，最后还要添加一个计算新折扣的方法。根据 Java 设计对扩展开放对修改关闭的原则，这段程序显然不符合我们的要求。这种情况下，可以考虑使用策略模式来实现打折促销的功能。</p>
<p>创建一个折扣策略接口</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* <span class="doctag">@author</span> Kevin Lau</span></span><br><span class="line"><span class="comment">* <span class="doctag">@version</span> 创建时间：Mar 21, 2019 11:07:35 PM</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">DiscountStrategy</span> &#123;</span><br><span class="line">	<span class="comment">// 定义一个用于计算打折价的方法</span></span><br><span class="line">	<span class="type">double</span> <span class="title function_">getDiscount</span><span class="params">(<span class="type">double</span> originPrice)</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>创建两个策略类</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* <span class="doctag">@author</span> Kevin Lau</span></span><br><span class="line"><span class="comment">* <span class="doctag">@version</span> 创建时间：Mar 21, 2019 11:09:47 PM</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OldDiscount</span> <span class="keyword">implements</span> <span class="title class_">DiscountStrategy</span>&#123;</span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getDiscount</span><span class="params">(<span class="type">double</span> originPrice)</span> &#123;</span><br><span class="line">		System.out.println(<span class="string">&quot;使用旧书折扣...&quot;</span>);</span><br><span class="line">		<span class="keyword">return</span> originPrice * <span class="number">0.7</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* <span class="doctag">@author</span> Kevin Lau</span></span><br><span class="line"><span class="comment">* <span class="doctag">@version</span> 创建时间：Mar 21, 2019 11:08:18 PM</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">VipDiscount</span> <span class="keyword">implements</span> <span class="title class_">DiscountStrategy</span>&#123;</span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getDiscount</span><span class="params">(<span class="type">double</span> originPrice)</span> &#123;</span><br><span class="line">		System.out.println(<span class="string">&quot;使用 VIP 折扣&quot;</span>);</span><br><span class="line">		<span class="keyword">return</span> originPrice * <span class="number">0.5</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>DiscountContext 类，为用户推荐折扣策略，也允许用户自行选择折扣策略。该 Context 类扮演了决策者的角色，它决定调用那个折扣策略来处理图书打折。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* <span class="doctag">@author</span> Kevin Lau</span></span><br><span class="line"><span class="comment">* <span class="doctag">@version</span> 创建时间：Mar 21, 2019 11:10:51 PM</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DiscountContext</span> &#123;</span><br><span class="line">	<span class="comment">// 组合一个 DiscountStrategy 对象</span></span><br><span class="line">	<span class="keyword">private</span> DiscountStrategy strategy;</span><br><span class="line">	<span class="comment">// 构造器，传入一个 DiscountStrategy 对象</span></span><br><span class="line">	<span class="keyword">public</span> <span class="title function_">DiscountContext</span><span class="params">(DiscountStrategy strategy)</span> &#123;</span><br><span class="line">		<span class="built_in">this</span>.strategy = strategy;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="comment">// 根据实际所使用的 DiscountStrategy 对象得到折扣价</span></span><br><span class="line">	<span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getDiscountPrice</span><span class="params">(<span class="type">double</span> price)</span> &#123;</span><br><span class="line">		<span class="comment">// 如果 strategy 为 null，则自动选择 oldDiscount 方法 </span></span><br><span class="line">		<span class="keyword">if</span> (strategy == <span class="literal">null</span>) &#123;</span><br><span class="line">			strategy = <span class="keyword">new</span> <span class="title class_">OldDiscount</span>();</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> <span class="built_in">this</span>.strategy.getDiscount(price);</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="comment">// 提供切换算法的方法</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">changeDiscount</span><span class="params">(DiscountStrategy strategy)</span> &#123;</span><br><span class="line">		<span class="built_in">this</span>.strategy = strategy;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>


<p>测试类</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* <span class="doctag">@author</span> Kevin Lau</span></span><br><span class="line"><span class="comment">* <span class="doctag">@version</span> 创建时间：Mar 21, 2019 11:16:17 PM</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StrategyTest</span> &#123;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">		<span class="type">DiscountContext</span> <span class="variable">dContext</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DiscountContext</span>(<span class="literal">null</span>);</span><br><span class="line">		<span class="type">double</span> <span class="variable">price1</span> <span class="operator">=</span> <span class="number">100</span>;</span><br><span class="line">		System.out.println(<span class="string">&quot;100 元书默认打折后的价格是：&quot;</span> + dContext.getDiscountPrice(price1));</span><br><span class="line">		dContext.changeDiscount(<span class="keyword">new</span> <span class="title class_">VipDiscount</span>());</span><br><span class="line">		<span class="type">double</span> <span class="variable">price2</span> <span class="operator">=</span> <span class="number">100</span>;</span><br><span class="line">		System.out.println(<span class="string">&quot;100 元书VIP打折后的价格是：&quot;</span> + dContext.getDiscountPrice(price2));</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>重新考虑前面的需求，当业务需要新增一种打折类型，系统只需要新定义一个 DiscountStrategy实现类，实现接口的 getDiscount() 方法，用于实现新的折扣算法。当客户端需要改变折扣策略时，使用 DiscountContext 的 changeDiscount() 方法切换为新定义的折扣策略即可。</p>
<h4 id="观察者模式"><a href="#观察者模式" class="headerlink" title="观察者模式"></a>观察者模式</h4><p>观察者模式是指在对象之间定义了一对多的依赖关系，当一个对象的状态发生改变时，依赖它的对象(观察者对象)就能收到系统的通知，从而使得观察者对象能够自动更新。</p>
<p>就相当于订阅者模式，发布者发布消息，订阅者订阅了发布者后就能收到通知或提示，比如你在社交平台上关注了某个人，当他/她更新了动态后，你就能收到系统通知。</p>
<p>观察下面例子来了解观察者模式：</p>
<p>首先创建一个观察者接口</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* <span class="doctag">@author</span> Kevin Lau</span></span><br><span class="line"><span class="comment">* <span class="doctag">@version</span> 创建时间：Mar 26, 2019 10:02:21 PM</span></span><br><span class="line"><span class="comment">* <span class="doctag">@Description</span> 观察者接口，每个观察者都要实现该接口</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">Observer</span> &#123;</span><br><span class="line">	<span class="keyword">void</span> <span class="title function_">update</span><span class="params">(Observable observer, Object arg)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>被观察者抽象基类，被观察者需要继承该抽象基类，类中提供了注册、删除观察者和通知观察者的方法。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* <span class="doctag">@author</span> Kevin Lau</span></span><br><span class="line"><span class="comment">* <span class="doctag">@version</span> 创建时间：Mar 26, 2019 10:07:00 PM</span></span><br><span class="line"><span class="comment">* <span class="doctag">@Description</span> 被观察者抽象基类</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title class_">Observable</span> &#123;</span><br><span class="line">	<span class="comment">// List 集合用来保存该对象上所有绑定的事件监听器</span></span><br><span class="line">	List&lt;Observer&gt; observers = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;Observer&gt;();</span><br><span class="line">	</span><br><span class="line">	<span class="comment">// 从该主题上注册观察者/订阅者</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">registObserver</span><span class="params">(Observer observer)</span> &#123;</span><br><span class="line">		observers.add(observer);</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="comment">// 从该主题中删除观察者/订阅者</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">removeObserver</span><span class="params">(Observer observer)</span> &#123;</span><br><span class="line">		observers.remove(observer);</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="comment">// 通知该主题上订阅的所有观察者</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">notifyObservers</span><span class="params">(Object value)</span> &#123;</span><br><span class="line">		<span class="keyword">for</span>(Observer observer : observers) &#123;</span><br><span class="line">			<span class="comment">// 显示调用每个观察者的 update 方法</span></span><br><span class="line">			observer.update(<span class="built_in">this</span>, value);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>下面创建了一个具体的被观察类：产品类，有两个属性名称和价格，当其属性改变时，调用抽象基类的通知方法。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* <span class="doctag">@author</span> Kevin Lau</span></span><br><span class="line"><span class="comment">* <span class="doctag">@version</span> 创建时间：Mar 26, 2019 10:16:10 PM</span></span><br><span class="line"><span class="comment">* <span class="doctag">@Description</span> 被观察者，产品</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Product</span> <span class="keyword">extends</span> <span class="title class_">Observable</span>&#123;</span><br><span class="line">	<span class="keyword">private</span> String name;</span><br><span class="line">	<span class="keyword">private</span> <span class="type">double</span> price;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">public</span> <span class="title function_">Product</span><span class="params">()</span> &#123;&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">public</span> <span class="title function_">Product</span><span class="params">(String name, <span class="type">double</span> price)</span> &#123;</span><br><span class="line">		<span class="built_in">this</span>.name = name;</span><br><span class="line">		<span class="built_in">this</span>.price = price;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> name;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">		<span class="built_in">this</span>.name = name;</span><br><span class="line">		notifyObservers(name);</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getPrice</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> price;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setPrice</span><span class="params">(<span class="type">double</span> price)</span> &#123;</span><br><span class="line">		<span class="built_in">this</span>.price = price;</span><br><span class="line">		notifyObservers(price);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>具体的观察者，名称观察者，当产品名称发生改变，将收到通知并打印名称消息。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* <span class="doctag">@author</span> Kevin Lau</span></span><br><span class="line"><span class="comment">* <span class="doctag">@version</span> 创建时间：Mar 26, 2019 10:21:42 PM</span></span><br><span class="line"><span class="comment">* <span class="doctag">@Description</span>  名称观察者</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">NameObserver</span> <span class="keyword">implements</span> <span class="title class_">Observer</span>&#123;</span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">update</span><span class="params">(Observable observer, Object arg)</span> &#123;</span><br><span class="line">		<span class="keyword">if</span> (arg <span class="keyword">instanceof</span> String) &#123;</span><br><span class="line">			<span class="type">String</span> <span class="variable">name</span>  <span class="operator">=</span> (String)arg;</span><br><span class="line">			System.out.println(<span class="string">&quot;被观察者&quot;</span>+ observer + <span class="string">&quot;产品名称更改为：&quot;</span> + name);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>具体的观察者，价格观察者，具体的观察者，当产品价格发生改变，将收到通知并打印价格消息。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* <span class="doctag">@author</span> Kevin Lau</span></span><br><span class="line"><span class="comment">* <span class="doctag">@version</span> 创建时间：Mar 26, 2019 10:25:41 PM</span></span><br><span class="line"><span class="comment">* <span class="doctag">@Description</span> 价格观察者</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PriceObserver</span> <span class="keyword">implements</span> <span class="title class_">Observer</span>&#123;</span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">update</span><span class="params">(Observable observer, Object arg)</span> &#123;</span><br><span class="line">		<span class="keyword">if</span> (arg <span class="keyword">instanceof</span> Double) &#123;</span><br><span class="line">			System.out.println(<span class="string">&quot;被观察者&quot;</span>+ observer + <span class="string">&quot;产品价格改变为：&quot;</span> + arg);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>测试类</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* <span class="doctag">@author</span> Kevin Lau</span></span><br><span class="line"><span class="comment">* <span class="doctag">@version</span> 创建时间：Mar 26, 2019 10:30:25 PM</span></span><br><span class="line"><span class="comment">* <span class="doctag">@Description</span> 测试类</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">		<span class="comment">// 被观察者</span></span><br><span class="line">		<span class="type">Product</span> <span class="variable">product</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Product</span>(<span class="string">&quot;手机&quot;</span>, <span class="number">1999</span>);</span><br><span class="line">		<span class="comment">// 观察者</span></span><br><span class="line">		<span class="type">NameObserver</span> <span class="variable">nameObserver</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">NameObserver</span>();</span><br><span class="line">		<span class="type">PriceObserver</span> <span class="variable">priceObserver</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PriceObserver</span>();</span><br><span class="line">		<span class="comment">// 向被观察者注册两个观察者对象</span></span><br><span class="line">		product.registObserver(nameObserver);</span><br><span class="line">		product.registObserver(priceObserver);</span><br><span class="line">		</span><br><span class="line">		product.setName(<span class="string">&quot;电脑&quot;</span>);</span><br><span class="line">		product.setPrice(<span class="number">4999</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>参考链接：</p>
<ul>
<li><a href="https://item.jd.com/12327466.html">轻量级Java EE企业应用实战</a></li>
<li><a href="https://www.cnblogs.com/luohanguo/p/7825656.html">罗汉果</a></li>
</ul>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>Cordova开发篇</title>
    <url>/2019/01/29/cordova-dev-learn/</url>
    <content><![CDATA[<h3 id="Android-平台"><a href="#Android-平台" class="headerlink" title="Android 平台"></a>Android 平台</h3><p>支持的Android API级别和过去几个cordova-android版本的Android版本：</p>
<table>
<thead>
<tr>
<th>cordova-android 版本</th>
<th>支持的 API 级别</th>
<th>实际安卓版本</th>
</tr>
</thead>
<tbody><tr>
<td>7.X.X</td>
<td>19 - 27</td>
<td>4.4 - 8.1</td>
</tr>
<tr>
<td>6.X.X</td>
<td>16 - 26</td>
<td>4.1 - 8.0.0</td>
</tr>
<tr>
<td>5.X.X</td>
<td>14 - 23</td>
<td>4.0 - 6.0.1</td>
</tr>
<tr>
<td>4.1.X</td>
<td>14 - 22</td>
<td>4.0 - 5.1</td>
</tr>
<tr>
<td>4.0.X</td>
<td>10 - 22</td>
<td>2.3.3 - 5.1</td>
</tr>
<tr>
<td>3.7.X</td>
<td>10 - 21</td>
<td>2.3.3 - 5.0.2</td>
</tr>
</tbody></table>
<span id="more"></span>
<p>需要注意的是，此处列出的版本适用于Cordova的Android软件包，cordova-android，而不适用于Cordova CLI。 要确定Cordova项目中安装的Cordova Android软件包的版本，请在包含项目的目录中运行命令cordova platform ls。</p>
<p>通常情况下，当某个Android版本在谷歌的发布平台上的支持率低于5%时，Cordova 就不再支持该Android版本。</p>
<h4 id="需求安装"><a href="#需求安装" class="headerlink" title="需求安装"></a>需求安装</h4><ol>
<li>Java Development Kit(JDK)</li>
</ol>
<p>下载安装 Java 开发工具包 <a href="https://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html">JDK8</a>。</p>
<ol start="2">
<li>Gradle</li>
</ol>
<p>从Cordova-Android 6.4.0 起, 要构建 Android应用就必须安装<a href="https://gradle.org/">Gradle</a>。</p>
<ol start="3">
<li>Android SDK</li>
</ol>
<p>安装 <a href="https://developer.android.com/studio/index.html">Android Studio</a>, 具体安装说明请查看 Android 开发网站。</p>
<ol start="4">
<li>添加 SDK 包</li>
</ol>
<p>在安装完 Android SDK后，您还必须安装您希望开发的任何API级别的包,建议您安装您的cordova-android 所支持的最高 API 版本。</p>
<p>具体：打开 Android SDK 管理器，并且确保安装以下内容：</p>
<ul>
<li>您要开发的 Android SDK 版本</li>
<li>Android SDK 管理工具，版本在 19.1.0 以上。</li>
<li>Android支持库(可在“Extras”下找到)</li>
</ul>
<h4 id="环境变量设置"><a href="#环境变量设置" class="headerlink" title="环境变量设置"></a>环境变量设置</h4><ol>
<li>将 $JAVA_HOME 环境变量设置为JDK安装的位置</li>
<li>将 $ANDROID_HOME 环境变量设置为 Android SDK 安装的位置</li>
<li>同时也将 Android SDK 安装目录中的 tools， tools/bin 和 platfrom-tools 添加到环境变量。</li>
</ol>
<p>如果您是 OS X 或 Linux 系统，可以编辑 ~/.bash_profile 文件进行环境变量设置，如：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> ANDROID_HOME=/Development/android-sdk/</span><br></pre></td></tr></table></figure>
<p>更新系统 PATH：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$&#123;PATH&#125;</span>:/Development/android-sdk/platform-tools:/Development/android-sdk/tools</span><br></pre></td></tr></table></figure>
<p>使添加的环境变量生效：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">source</span> ~/.bash_profile</span><br></pre></td></tr></table></figure>
<p>如果您是windows 系统，网上有很多设置设置安卓环境变量的教程，这里不再说明。</p>
<h4 id="项目配置"><a href="#项目配置" class="headerlink" title="项目配置"></a>项目配置</h4><h5 id="模拟器配置："><a href="#模拟器配置：" class="headerlink" title="模拟器配置："></a>模拟器配置：</h5><p>如果您希望你的Cordova App 运行在安卓模拟器上，您首先需要创建一个安卓虚拟机(AVD), 通常可以在 Android Studio 上快速创建和配置。AVD 创建完后，便可以通过 Cordova 命令运行App在模拟器上：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ cordova run --emulator</span><br></pre></td></tr></table></figure>

<h5 id="Gradle-配置："><a href="#Gradle-配置：" class="headerlink" title="Gradle 配置："></a>Gradle 配置：</h5><p>对于<a href="mailto:&#99;&#111;&#x72;&#100;&#x6f;&#118;&#97;&#x2d;&#x61;&#110;&#100;&#x72;&#x6f;&#105;&#x64;&#x40;&#52;&#x2e;&#x30;&#x2e;&#48;">&#99;&#111;&#x72;&#100;&#x6f;&#118;&#97;&#x2d;&#x61;&#110;&#100;&#x72;&#x6f;&#105;&#x64;&#x40;&#52;&#x2e;&#x30;&#x2e;&#48;</a> 以上，Cordova的安卓项目是使用Gradle构建的。 有关使用Ant构建的说明，请参阅文档的旧版本，注意，从Android SDK Tools 25.3.0开始，就已经不推荐使用Ant版本。</p>
<p>Gradle属性配置：</p>
<p>可以通过设置 Cordova 公开的一些属性来配置 Gradle，以下是关于这些属性的说明：</p>
<table>
<thead>
<tr>
<th>属性</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>cdvBuildMultipleApks</td>
<td>配置这个属性，将生成多个 APK 文件，分别对应支持 X86、ARM 等平台，如果您的项目使用大型本地库，这个很重要，可以大大增加生成的APK 大小。如果不设置，则会生成一个可在多平台架构上使用的APK。</td>
</tr>
<tr>
<td>cdvVersionCode</td>
<td>会覆盖 AndroidManifest.xml 中的版本号</td>
</tr>
<tr>
<td>cdvReleaseSigningPropertiesFile</td>
<td>配置发行应用的签名文件，默认：release-signing.properties</td>
</tr>
<tr>
<td>cdvDebugSigningPropertiesFile</td>
<td>构建调试应用的签名文件，默认：debug-signing.properties, 在需要与其他开发人员共享签名密钥时非常有用</td>
</tr>
<tr>
<td>cdvMinSdkVersion</td>
<td>覆盖 AndroidManifest.xml 中的 minSdkVersion, 在根据 SDK 版本创建多个 APK时有用。</td>
</tr>
<tr>
<td>cdvBuildToolsVersion</td>
<td>覆盖自动检测到的 android.buildToolsVersion 值</td>
</tr>
<tr>
<td>cdvCompileSdkVersion</td>
<td>覆盖自动检测到的 android.compileSdkVersion  值</td>
</tr>
</tbody></table>
<p>你可以通过以下 4 种方式来设置这些属性：</p>
<ol>
<li>通过设置环境变量：</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">export</span> ORG_GRADLE_PROJECT_cdvMinSdkVersion=20</span><br><span class="line">$ cordova build android</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>在 Cordova build 或 run 命令中使用 –gradleArg 参数：</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ cordova run android -- --gradleArg=-PcdvMinSdkVersion=20</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>在 <your-project>/platforms/android 目录下创建一个文件：gradle.properties，输入类似以下内容：</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># In &lt;your-project&gt;/platforms/android/gradle.properties</span></span><br><span class="line">cdvMinSdkVersion=20</span><br></pre></td></tr></table></figure>

<ol start="4">
<li>使用 build-extras.gradle 文件对 build.gradle 进行扩展，类似如下所示设置属性：</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">// In &lt;your-project&gt;/platforms/android/build-extras.gradle</span><br><span class="line">ext.cdvMinSdkVersion = 20</span><br></pre></td></tr></table></figure>

<p>后面两种方式都是通过在您的安卓平台目录下添加一个额外的文件来进行属性配置，通常，不建议您编辑此文件夹的内容，因为这些更改很容易丢失或覆盖。 相反，应使用before_build hook 将这两个文件从另一个位置复制到该文件夹中作为构建命令的一部分。</p>
<h5 id="扩展-build-gradle-文件"><a href="#扩展-build-gradle-文件" class="headerlink" title="扩展 build.gradle 文件"></a>扩展 build.gradle 文件</h5><p>如果您需要自定义 build.gradle 文件，您应该创建一个名为build-extras.gradle的兄弟文件。此文件必须放在android平台目录（<your-project> / platforms / android）中，因此建议您通过附加到before_build挂钩的脚本将其复制。</p>
<p>一个例子如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">// Example build-extras.gradle</span><br><span class="line">// This file is included at the beginning of `build.gradle`</span><br><span class="line">ext.cdvDebugSigningPropertiesFile = <span class="string">&#x27;../../android-debug-keys.properties&#x27;</span></span><br><span class="line"></span><br><span class="line">// When <span class="built_in">set</span>, this <span class="keyword">function</span> allows code to run at the end of `build.gradle`</span><br><span class="line">ext.postBuildExtras = &#123;</span><br><span class="line">    android.buildTypes.debug.applicationIdSuffix = <span class="string">&#x27;.debug&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>请注意，插件还可以通过以下方式包含build-extras.gradle文件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;framework src=<span class="string">&quot;some.gradle&quot;</span> custom=<span class="string">&quot;true&quot;</span> <span class="built_in">type</span>=<span class="string">&quot;gradleReference&quot;</span> /&gt;</span><br></pre></td></tr></table></figure>

<h5 id="设置版本号"><a href="#设置版本号" class="headerlink" title="设置版本号"></a>设置版本号</h5><p>要更改应用程序生成的apk的版本代码，请在应用程序的config.xml文件的widget元素中设置android-versionCode属性。 如果未设置android-versionCode，则将使用version属性确定版本代码。 例如，如果版本是MAJOR.MINOR.PATCH：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">versionCode = MAJOR * 10000 + MINOR * 100 + PATCH</span><br></pre></td></tr></table></figure>

<p>如果您的应用程序已启用cdvBuildMultipleApks Gradle属性（请参阅设置Gradle属性），则应用程序的版本代码也将乘以10，以便代码的最后一位数字可用于指示apk构建的体系结构。 无论版本代码是从android-versionCode属性获取还是使用 version 生成，都会发生这种乘法。 请注意，添加到项目中的某些插件（包括cordova-plugin-crosswalk-webview）可能会自动设置此Gradle属性。</p>
<p>请注意：更新android-versionCode属性时，从构建的apks获取的版本号来增加是不明智的。 相反，您应该根据config.xml文件的android-versionCode属性中的值来增加。 这是因为cdvBuildMultipleApks属性导致版本号在构建的apks中乘以10，因此使用该值将导致您的下一个版本代码是原始版本号的100倍，等等。</p>
<h4 id="签署应用程序"><a href="#签署应用程序" class="headerlink" title="签署应用程序"></a>签署应用程序</h4><h5 id="使用标志"><a href="#使用标志" class="headerlink" title="使用标志"></a>使用标志</h5><p>要签署应用程序，您需要用到以下参数：</p>
<table>
<thead>
<tr>
<th>参数</th>
<th>标志</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>Keystore</td>
<td>–keystore</td>
<td>二进制文件的路径，可以容纳一组密钥</td>
</tr>
<tr>
<td>Keystore Password</td>
<td>–storePassword</td>
<td>密钥库的密码</td>
</tr>
<tr>
<td>Alias</td>
<td>–alias</td>
<td>id指定用于签名的私钥</td>
</tr>
<tr>
<td>Password</td>
<td>–password</td>
<td>指定私钥的密码</td>
</tr>
<tr>
<td>Type of the Keystore</td>
<td>–keystoreType</td>
<td>默认值：基于文件扩展名自动检测</td>
</tr>
<tr>
<td>无论是pkcs12还是jks默认值：基于文件扩展名自动检测</td>
<td></td>
<td></td>
</tr>
<tr>
<td>无论是pkcs12还是jks</td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
</tbody></table>
<p>可以使用上面的命令行参数为Cordova CLI构建或运行命令指定这些参数。</p>
<p>注意：您应该使用双 “-“ 表示这些是特定于平台的参数，例如：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cordova run android --release -- --keystore=../my-release-key.keystore --storePassword=password --<span class="built_in">alias</span>=alias_name --password=password</span><br></pre></td></tr></table></figure>

<h5 id="使用-build-json"><a href="#使用-build-json" class="headerlink" title="使用 build.json"></a>使用 build.json</h5><p>或者，您可以使用相同命令的–buildConfig参数在构建配置文件（build.json）中指定它们。 以下是构建配置文件的示例：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;android&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;debug&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;keystore&quot;</span><span class="punctuation">:</span> <span class="string">&quot;../android.keystore&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;storePassword&quot;</span><span class="punctuation">:</span> <span class="string">&quot;android&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;alias&quot;</span><span class="punctuation">:</span> <span class="string">&quot;mykey1&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;password&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;password&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;keystoreType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;release&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;keystore&quot;</span><span class="punctuation">:</span> <span class="string">&quot;../android.keystore&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;storePassword&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;alias&quot;</span><span class="punctuation">:</span> <span class="string">&quot;mykey2&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;password&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;password&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;keystoreType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
<p>对于发布签名，可以排除密码，构建系统将发出询问密码的提示。</p>
<p>还支持在build.json中混合和匹配命令行参数和参数。 命令行参数中的值将优先。 这对于在命令行上指定密码很有用。</p>
<h5 id="使用-Gradle"><a href="#使用-Gradle" class="headerlink" title="使用 Gradle"></a>使用 Gradle</h5><p>您还可以通过包含.properties文件并使用cdvReleaseSigningPropertiesFile和cdvDebugSigningPropertiesFile Gradle属性指向它来指定签名属性（请参阅设置Gradle属性）。 该文件应如下所示：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">storeFile=relative/path/to/keystore.p12</span><br><span class="line">storePassword=SECRET1</span><br><span class="line">storeType=pkcs12</span><br><span class="line">keyAlias=DebugSigningKey</span><br><span class="line">keyPassword=SECRET2</span><br></pre></td></tr></table></figure>
<p>storePassword和keyPassword是可选的，如果省略则会提示输入。</p>
<h4 id="调试"><a href="#调试" class="headerlink" title="调试"></a>调试</h4><p>有关Android SDK随附的调试工具的详细信息，请参阅Android的开发人员文档以进行调试。 此外，Android的用于调试Web应用程序的开发人员文档提供了有关调试Webview中运行的应用程序部分的简介。</p>
<h5 id="Android-Studio中打开一个项目"><a href="#Android-Studio中打开一个项目" class="headerlink" title="Android Studio中打开一个项目"></a>Android Studio中打开一个项目</h5><p>Cordova-Android 项目可以在 Android Studio中打开。 如果您希望使用Android Studio内置的Android调试/分析工具，或者您正在开发Android插件，这将非常有用。 请注意，在Android studio中打开项目时，建议您不要在IDE中编辑代码。 这将编辑项目的平台文件夹（而不是www）中的代码，并且可能会覆盖更改。您应该编辑www文件夹并通过运行cordova build复制您的更改。</p>
<p>希望在IDE中编辑其本机代码的插件开发人员在通过cordova插件添加将其插件添加到项目时应使用–link标志。 这将链接文件，以便对平台文件夹中的插件文件的更改反映在插件的源文件夹中（反之亦然）。</p>
<p>要在Android Studio中打开Cordova-Android 项目：</p>
<ol>
<li>启动 Android Studio</li>
<li>选择导入一个项目<br><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/frontend/cordova/develop/1.jpg"></li>
<li>选择 Android 平台目录，(<your-project>/platforms/android).<br><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/frontend/cordova/develop/2.jpg"></li>
<li>对于Gradle Sync问题，您只需回答“是”即可。</li>
</ol>
<p>完成导入后，您应该能够直接从Android Studio构建和运行应用程序。 有关详细信息，请参阅Android Studio概述以及从Android Studio构建和运行。<br><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/frontend/cordova/develop/3.jpg"></p>
<h4 id="以平台为中心的工作流程"><a href="#以平台为中心的工作流程" class="headerlink" title="以平台为中心的工作流程"></a>以平台为中心的工作流程</h4><p>cordova-android包含许多脚本，允许在没有完整Cordova CLI的情况下使用该平台。 在某些情况下，此开发路径可为您提供比跨平台cordova CLI更多的开发选项。 例如，在将自定义Cordova WebView与本机组件一起部署时，需要使用shell工具。 在使用此开发路径之前，您仍必须按照上面的“要求和支持”中的说明配置Android SDK环境。</p>
<p>有关下面讨论的每个脚本，请参阅 <a href="https://cordova.apache.org/docs/en/latest/reference/cordova-cli/index.html">Cordova CLI</a>。 每个脚本都有一个与相应CLI命令匹配的名称。 例如，cordova-android / bin / create相当于cordova创建。</p>
<p>首先，从npm或Github下载cordova-android软件包。</p>
<p>要使用此包创建项目，请在bin文件夹中运行create script：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ cordova-android/bin/create</span><br></pre></td></tr></table></figure>
<p>创建的项目将在其中包含一个名为cordova的文件夹，其中包含项目特定Cordova命令的脚本（例如，运行，构建等）。 此外，该项目将采用与普通Cordova项目不同的结构。 值得注意的是，/ www被移至/ assets / www。</p>
<h4 id="声明周期"><a href="#声明周期" class="headerlink" title="声明周期"></a>声明周期</h4><h5 id="Cordova-与-Android"><a href="#Cordova-与-Android" class="headerlink" title="Cordova 与 Android"></a>Cordova 与 Android</h5><p>原生Android应用程序通常包含用户与之交互的一系列活动。 可以将活动视为构成应用程序的各个屏幕; 应用程序中的不同任务通常会有自己的活动。 每个活动都有自己的生命周期，在活动进入和离开用户设备的前台时进行维护。</p>
<p>相比之下，Android平台上的Cordova应用程序在嵌入在单个Android活动中的Webview中执行。 此活动的生命周期通过触发的文档事件向您的应用程序公开。 这些事件不能保证与Android的生命周期一致，但它们可以提供保存和恢复状态的指南。 这些事件大致映射到Android回调，如下所示：</p>
<table>
<thead>
<tr>
<th>Cordova 事件</th>
<th>对应的 Andrid 事件</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>deviceready</td>
<td>onCreate()</td>
<td>应用程序正在启动（不是从后台）</td>
</tr>
<tr>
<td>pause</td>
<td>onPause()</td>
<td>应用程序进入后台运行</td>
</tr>
<tr>
<td>resume</td>
<td>onResume()</td>
<td>应用程序返回到前台</td>
</tr>
</tbody></table>
<p>大多数其他Cordova平台都有类似的生命周期概念，并且当用户的设备上发生类似的操作时，应触发这些相同的事件。 然而，Android带来了一些独特的挑战，由于原生活动生命周期，这些挑战有时会出现。</p>
<h5 id="为什么-Android-与众不同？"><a href="#为什么-Android-与众不同？" class="headerlink" title="为什么 Android 与众不同？"></a>为什么 Android 与众不同？</h5><p>在Android中，操作系统可以选择在后台终止活动，以便在设备内存不足时释放资源。 不幸的是，当您的应用程序活动被终止时，您的应用程序所在的Webview也将被销毁。 在这种情况下，您的应用程序维护的任何状态都将丢失。 当用户导航回您的应用程序时，操作系统将重新创建活动和Web视图，但不会为您的Cordova应用程序自动恢复状态。 因此，您的应用程序必须了解触发的生命周期事件并维护适当的状态，以确保应用程序中的用户上下文在离开应用程序时不会丢失。</p>
<h5 id="什么时候会发生？"><a href="#什么时候会发生？" class="headerlink" title="什么时候会发生？"></a>什么时候会发生？</h5><p>您的应用程序在离开用户视线时很容易被操作系统破坏， 有两种主要情况可能发生。 第一个也是最明显的情况是用户按下主页按钮或切换到另一个应用程序。</p>
<p>但是，某些插件可以引起第二种（更微妙的）情况。 如上所述，Cordova应用程序通常仅限于包含Webview的单个活动。 但是，有些情况下插件可以启动其他活动，并暂时将Cordova活动推送到后台。 通常会启动这些其他活动，以便使用设备上安装的本机应用程序执行特定任务。 例如，Cordova相机插件会启动设备上原生安装的任何相机活动以拍摄照片。 以这种方式重新使用已安装的相机应用程序会使您的应用程序在用户尝试拍照时更像本机应用程序。 不幸的是，当本机Activity将您的应用推送到后台时，操作系统有可能会将其杀死。</p>
<p>为了更清楚地理解第二种情况，让我们来看一个使用相机插件的例子。 想象一下，您有一个需要用户拍摄个人资料照片的应用程序。 一切按计划进行时，应用程序中的事件流将如下所示：</p>
<ol>
<li>用户正在与您的应用进行交互，需要拍照</li>
<li>相机插件启动本地相机活动<ul>
<li><em>Cordova活动被推送到后台(触发暂停事件)</em></li>
</ul>
</li>
<li>用户拍了一张照片</li>
<li>相机活动结束</li>
<li>Cordova活动被移到前台（恢复事件被触发）</li>
<li>用户返回到他们中断的应用程序</li>
</ol>
<p>但是，如果设备内存不足，则可能会中断此事件流。 如果活动被操作系统杀死，则上述事件序列将显示如下： </p>
<ol>
<li>用户正在使用您的应用程序并且需要拍一张照片</li>
<li>相机插件启动本地相机活动<ul>
<li><em>操作系统破坏Cordova活动（暂停事件被触发</em>）</li>
</ul>
</li>
<li>用户拍了一张照片</li>
<li>相机活动完成<ul>
<li><em>操作系统重新创建Cordova活动（deviceready 和resume 事件被触发）</em> </li>
</ul>
</li>
<li>用户对于他们突然回到您应用的登录屏幕的原因感到困惑</li>
</ol>
<p>在这种情况下，操作系统在后台杀死了应用程序，并且应用程序没有将其状态维持为生命周期的一部分。 当用户返回到应用程序时，Webview被重新创建，并且应用程序似乎已从头开始重新启动（因此用户感到困惑）。 这一系列事件等同于按下主页按钮或用户切换应用程序时发生的事件。 防止上述情况出现的关键是订阅事件并将状态正确地保持为活动生命周期的一部分。</p>
<h5 id="遵循生命周期"><a href="#遵循生命周期" class="headerlink" title="遵循生命周期"></a>遵循生命周期</h5><p>在上面的示例中，触发的javascript事件(斜体显示部分)。 这些事件是您保存和恢复应用程序状态的机会。 您应该在应用程序的 bindEvents 函数中注册回调，该函数通过保存状态来响应生命周期事件。 您保存的信息以及保存方式由您自行决定，但您应确保保存足够的信息，以便用户可以在用户返回应用程序时将其恢复到原来的位置。</p>
<p>在上面的示例中还有一个附加因素仅适用于第二个讨论的情况（即插件启动外部活动时）。 当用户完成拍照时，不仅应用程序的状态丢失，而且用户拍摄的照片也是如此。 通常，该照片将通过在相机插件中注册的回调传送到您的应用程序。 然而，当Webview被破坏时，回调永远丢失了。 幸运的是，cordova-android 5.1.0及更高版本提供了一种在应用程序恢复时获取该插件调用结果的方法。</p>
<h5 id="获取插件回调结果-cordova-android-5-1-0"><a href="#获取插件回调结果-cordova-android-5-1-0" class="headerlink" title="获取插件回调结果(cordova-android 5.1.0+)"></a>获取插件回调结果(cordova-android 5.1.0+)</h5><p>当操作系统破坏通过插件推送到后台的Cordova活动时，任何挂起的回调也会丢失。 这意味着如果您将回调传递给启动新活动的插件（例如相机插件），则在重新创建应用程序时不会触发该回调。 但是，从cordova-android 5.1.0开始，resume 事件的有效负载将包含插件请求中的任何挂起的插件结果，这些结果来自于在活动被销毁之前启动外部活动的插件请求。</p>
<p>resume事件的有效负载遵循以下格式：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    action<span class="punctuation">:</span> <span class="string">&quot;resume&quot;</span><span class="punctuation">,</span></span><br><span class="line">    pendingResult<span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        pluginServiceName<span class="punctuation">:</span> string<span class="punctuation">,</span></span><br><span class="line">        pluginStatus<span class="punctuation">:</span> string<span class="punctuation">,</span></span><br><span class="line">        result<span class="punctuation">:</span> any</span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
<p>该有效载荷的字段定义如下：</p>
<ul>
<li>pluginServiceName：返回结果的插件的名称（例如“Camera”）。 这可以在插件的plugin.xml文件的<name>标记中找到</li>
<li>pluginStatus：插件调用的状态（见下文）</li>
<li>result：无论插件调用的结果是什么</li>
</ul>
<p>pendingResult字段中pluginStatus的可能值包括以下内容：</p>
<ul>
<li>“OK” - 插件调用成功</li>
<li>“No Result” - 插件调用结束，没有结果</li>
<li>“Error” - 插件调用导致一些常见错误</li>
<li>其他杂项错误<ul>
<li>“找不到类”</li>
<li>“非法访问”</li>
<li>“实例化错误”</li>
<li>“格式错误的网址”</li>
<li>“IO错误”</li>
<li>“无效的动作”</li>
<li>“JSON错误”</li>
</ul>
</li>
</ul>
<p>请注意，由插件决定结果字段中包含的内容以及返回的pluginStatus的含义。 查看您正在使用的插件的相关API，这些字段应该包含的内容以及如何使用它们的值。</p>
<h5 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h5><p>下面是一个简短的示例应用程序，它使用resume和pause事件来管理状态。 它使用Apache相机插件作为如何从resume事件有效负载检索插件调用结果的示例。 处理resume的event.pendingResult对象的代码部分需要cordova-android 5.1.0+</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// This state represents the state of our application and will be saved and</span></span><br><span class="line"><span class="comment">// restored by onResume() and onPause()</span></span><br><span class="line"><span class="keyword">var</span> appState = &#123;</span><br><span class="line">    <span class="attr">takingPicture</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">imageUri</span>: <span class="string">&quot;&quot;</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> <span class="variable constant_">APP_STORAGE_KEY</span> = <span class="string">&quot;exampleAppState&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> app = &#123;</span><br><span class="line">    <span class="attr">initialize</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">bindEvents</span>();</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">bindEvents</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="comment">// Here we register our callbacks for the lifecycle events we care about</span></span><br><span class="line">        <span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;deviceready&#x27;</span>, <span class="variable language_">this</span>.<span class="property">onDeviceReady</span>, <span class="literal">false</span>);</span><br><span class="line">        <span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;pause&#x27;</span>, <span class="variable language_">this</span>.<span class="property">onPause</span>, <span class="literal">false</span>);</span><br><span class="line">        <span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;resume&#x27;</span>, <span class="variable language_">this</span>.<span class="property">onResume</span>, <span class="literal">false</span>);</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">onDeviceReady</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;take-picture-button&quot;</span>).<span class="title function_">addEventListener</span>(<span class="string">&quot;click&quot;</span>, <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="comment">// Because the camera plugin method launches an external Activity,</span></span><br><span class="line">            <span class="comment">// there is a chance that our application will be killed before the</span></span><br><span class="line">            <span class="comment">// success or failure callbacks are called. See onPause() and</span></span><br><span class="line">            <span class="comment">// onResume() where we save and restore our state to handle this case</span></span><br><span class="line">            appState.<span class="property">takingPicture</span> = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">            navigator.<span class="property">camera</span>.<span class="title function_">getPicture</span>(cameraSuccessCallback, cameraFailureCallback,</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="attr">sourceType</span>: <span class="title class_">Camera</span>.<span class="property">PictureSourceType</span>.<span class="property">CAMERA</span>,</span><br><span class="line">                    <span class="attr">destinationType</span>: <span class="title class_">Camera</span>.<span class="property">DestinationType</span>.<span class="property">FILE_URI</span>,</span><br><span class="line">                    <span class="attr">targetWidth</span>: <span class="number">250</span>,</span><br><span class="line">                    <span class="attr">targetHeight</span>: <span class="number">250</span></span><br><span class="line">                &#125;</span><br><span class="line">            );</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">onPause</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="comment">// Here, we check to see if we are in the middle of taking a picture. If</span></span><br><span class="line">        <span class="comment">// so, we want to save our state so that we can properly retrieve the</span></span><br><span class="line">        <span class="comment">// plugin result in onResume(). We also save if we have already fetched</span></span><br><span class="line">        <span class="comment">// an image URI</span></span><br><span class="line">        <span class="keyword">if</span>(appState.<span class="property">takingPicture</span> || appState.<span class="property">imageUri</span>) &#123;</span><br><span class="line">            <span class="variable language_">window</span>.<span class="property">localStorage</span>.<span class="title function_">setItem</span>(<span class="variable constant_">APP_STORAGE_KEY</span>, <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(appState));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">onResume</span>: <span class="keyword">function</span>(<span class="params">event</span>) &#123;</span><br><span class="line">        <span class="comment">// Here we check for stored state and restore it if necessary. In your</span></span><br><span class="line">        <span class="comment">// application, it&#x27;s up to you to keep track of where any pending plugin</span></span><br><span class="line">        <span class="comment">// results are coming from (i.e. what part of your code made the call)</span></span><br><span class="line">        <span class="comment">// and what arguments you provided to the plugin if relevant</span></span><br><span class="line">        <span class="keyword">var</span> storedState = <span class="variable language_">window</span>.<span class="property">localStorage</span>.<span class="title function_">getItem</span>(<span class="variable constant_">APP_STORAGE_KEY</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(storedState) &#123;</span><br><span class="line">            appState = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(storedState);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Check to see if we need to restore an image we took</span></span><br><span class="line">        <span class="keyword">if</span>(!appState.<span class="property">takingPicture</span> &amp;&amp; appState.<span class="property">imageUri</span>) &#123;</span><br><span class="line">            <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;get-picture-result&quot;</span>).<span class="property">src</span> = appState.<span class="property">imageUri</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// Now we can check if there is a plugin result in the event object.</span></span><br><span class="line">        <span class="comment">// This requires cordova-android 5.1.0+</span></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(appState.<span class="property">takingPicture</span> &amp;&amp; event.<span class="property">pendingResult</span>) &#123;</span><br><span class="line">            <span class="comment">// Figure out whether or not the plugin call was successful and call</span></span><br><span class="line">            <span class="comment">// the relevant callback. For the camera plugin, &quot;OK&quot; means a</span></span><br><span class="line">            <span class="comment">// successful result and all other statuses mean error</span></span><br><span class="line">            <span class="keyword">if</span>(event.<span class="property">pendingResult</span>.<span class="property">pluginStatus</span> === <span class="string">&quot;OK&quot;</span>) &#123;</span><br><span class="line">                <span class="comment">// The camera plugin places the same result in the resume object</span></span><br><span class="line">                <span class="comment">// as it passes to the success callback passed to getPicture(),</span></span><br><span class="line">                <span class="comment">// thus we can pass it to the same callback. Other plugins may</span></span><br><span class="line">                <span class="comment">// return something else. Consult the documentation for</span></span><br><span class="line">                <span class="comment">// whatever plugin you are using to learn how to interpret the</span></span><br><span class="line">                <span class="comment">// result field</span></span><br><span class="line">                <span class="title function_">cameraSuccessCallback</span>(event.<span class="property">pendingResult</span>.<span class="property">result</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="title function_">cameraFailureCallback</span>(event.<span class="property">pendingResult</span>.<span class="property">result</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Here are the callbacks we pass to getPicture()</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">cameraSuccessCallback</span>(<span class="params">imageUri</span>) &#123;</span><br><span class="line">    appState.<span class="property">takingPicture</span> = <span class="literal">false</span>;</span><br><span class="line">    appState.<span class="property">imageUri</span> = imageUri;</span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;get-picture-result&quot;</span>).<span class="property">src</span> = imageUri;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">cameraFailureCallback</span>(<span class="params">error</span>) &#123;</span><br><span class="line">    appState.<span class="property">takingPicture</span> = <span class="literal">false</span>;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(error);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">initialize</span>();</span><br></pre></td></tr></table></figure>
<p>对应的 html：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Security-Policy&quot;</span> <span class="attr">content</span>=<span class="string">&quot;default-src &#x27;self&#x27; data: gap: https://ssl.gstatic.com &#x27;unsafe-eval&#x27;; style-src &#x27;self&#x27; &#x27;unsafe-inline&#x27;; media-src *&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;format-detection&quot;</span> <span class="attr">content</span>=<span class="string">&quot;telephone=no&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;msapplication-tap-highlight&quot;</span> <span class="attr">content</span>=<span class="string">&quot;no&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;user-scalable=no, initial-scale=1, maximum-scale=1, minimum-scale=1, width=device-width&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">href</span>=<span class="string">&quot;css/index.css&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>Cordova Android Lifecycle Example<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">id</span>=<span class="string">&quot;get-picture-result&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Button</span> <span class="attr">id</span>=<span class="string">&quot;take-picture-button&quot;</span>&gt;</span>Take Picture<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;cordova.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/index.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h5 id="测试-Activity-活动-的生命周期"><a href="#测试-Activity-活动-的生命周期" class="headerlink" title="测试 Activity(活动)的生命周期"></a>测试 Activity(活动)的生命周期</h5><p>Android提供了一个开发人员设置，用于测试低内存上的Activity销毁。 在设备或仿真器的“开发人员选项”菜单中启用“不要保留活动”设置，以模拟低内存情况。 您应始终在启用此设置的情况下进行一些测试，以确保您的应用程序正确维护状态。</p>
<h3 id="IOS-平台"><a href="#IOS-平台" class="headerlink" title="IOS 平台"></a>IOS 平台</h3><h4 id="要求与支持"><a href="#要求与支持" class="headerlink" title="要求与支持"></a>要求与支持</h4><p>构建iOS应用程序所需的Apple®工具需在基于Intel的Mac上的OS X操作系统上运行。 Xcode®7.0（最低要求版本）需要在OS X版本10.10.4（Yosemite）或更高版本上运行，并包含iOS 9 SDK（软件开发工具包）。 要将应用程序提交到Apple App Store，需要最新版本的Apple工具。</p>
<p>您可以使用随iOS SDK和Xcode一起安装的iOS模拟器测试许多Cordova功能，但在提交到App Store之前，您需要一个实际的设备来完全测试应用程序的所有设备功能。 该设备必须至少安装iOS 8，从Cordova 4.0.0开始支持最低iOS版本。 支持的设备包括iPhone 4S，iPhone 5，iPhone 5C，iPhone 5S，iPhone 6，iPhone 6 Plus，iPhone 6S，iPhone 6S Plus，iPhone SE，iPad 2，iPad 3，iPad 4，iPad Air，iPad Air 2，iPad Pro ，iPad Mini，iPad Mini 2，iPad Mini 3，iPod Touch 5th gen和iPod Touch 6th或更高版本。</p>
<h4 id="要求安装"><a href="#要求安装" class="headerlink" title="要求安装"></a>要求安装</h4><h5 id="Xcode"><a href="#Xcode" class="headerlink" title="Xcode"></a>Xcode</h5><p>有两种方式可以安装 Xcode:</p>
<ul>
<li>在<a href="https://itunes.apple.com/us/app/xcode/id497799835?mt=12">App Store</a>中下载，可通过在App Store应用程序中搜索“Xcode”获得。</li>
<li>在<a href="https://idmsa.apple.com/IDMSWebAuth/signin?appIdKey=891bd3417a7776362562d2197f89480a8547b108fd934911bcbea0110d07f757&path=/download/more/&rv=1">Apple 开发平台</a>中下载，需要注册为Apple 开发人员。</li>
</ul>
<p>安装Xcode后，需要启用多个命令行工具才能运行Cordova。 在终端执行命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ xcode-select --install</span><br></pre></td></tr></table></figure>
<h5 id="部署工具"><a href="#部署工具" class="headerlink" title="部署工具"></a>部署工具</h5><p>ios-deploy工具允许您从命令行在iOS设备上启动iOS应用程序。在终端执行命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ npm install -g ios-deploy</span><br></pre></td></tr></table></figure>
<h4 id="项目配置-1"><a href="#项目配置-1" class="headerlink" title="项目配置"></a>项目配置</h4><p>安装完上面的东西后，您现在就可以创建和构建一个 Cordova 项目了，更多细节，请参考另一篇博文《Cordova快速入门篇》。</p>
<h5 id="部署应用到模拟器"><a href="#部署应用到模拟器" class="headerlink" title="部署应用到模拟器"></a>部署应用到模拟器</h5><p>要在iOS模拟器中预览应用程序：</p>
<ol>
<li>从Xcode或命令行打开工作区文件（platforms / ios / HelloWorld.xcworkspace）：<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ open ./platforms/ios/HelloWorld.xcworkspace/</span><br></pre></td></tr></table></figure></li>
<li>确保在左侧面板中选择了HelloWorld项目（1）。<br><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/frontend/cordova/develop/4.jpg"></li>
</ol>
<ul>
<li>从工具栏的 <strong>Scheme</strong> 菜单中选择目标设备，例如（2）中突出显示的iPhone 7 Plus Simulator</li>
<li>按 <strong>Scheme</strong> 菜单左侧相同工具栏中的 <strong>Run</strong> 按钮（3）。 它将在模拟器中构建，部署和运行应用程序。 将打开一个单独的模拟器应用程序以显示该应用：</li>
</ul>
<p>一次只能运行一个模拟器，因此如果要在不同的模拟器中测试应用程序，则需要退出模拟器应用程序并在Xcode中运行不同的目标。</p>
<p>Xcode捆绑了最新版iPhone和iPad的模拟器。 可以从Xcode→首选项…→组件 面板中获得旧版本。</p>
<h5 id="部署应用到设备"><a href="#部署应用到设备" class="headerlink" title="部署应用到设备"></a>部署应用到设备</h5><p>有关部署到设备的各种要求的详细信息，请参阅Apple的 <a href="https://help.apple.com/xcode/mac/current/#/dev8b4250b57">App 部署流程</a> 。 简而言之，在部署之前需要执行以下操作：</p>
<ol>
<li><p>在 <a href="https://idmsa.apple.com/IDMSWebAuth/signin?appIdKey=891bd3417a7776362562d2197f89480a8547b108fd934911bcbea0110d07f757&path=/account/&rv=1">ios 配置面板</a>  中创建配置文件。 您可以使用 Apple 的 <em>开发配置助手</em>    来创建和安装 Xcode 所需的配置文件和证书。</p>
</li>
<li><p>验证构建设置中<em>代码签名部分</em>中的<em>代码签名标识</em>设置是否设置为您的配置文件名称。</p>
</li>
</ol>
<p>部署应用到设备：</p>
<ol>
<li>使用 USB 接口将您的设备连接到 Mac。</li>
<li>在 Xcode 的左侧面板的项目列表中选择您要运行的项目</li>
<li>在 Xcode 的 Scheme 菜单左侧的下拉列表中选择您的设备。</li>
<li>按下 <strong>Run</strong> 按钮，将会执行构建，部署并运行应用程序到您的设备上。</li>
</ol>
<h4 id="App-签名"><a href="#App-签名" class="headerlink" title="App 签名"></a>App 签名</h4><p>首先，请查看 Apple 开发人员网站的 <a href="https://developer.apple.com/support/code-signing/">代码签名支持</a> 和 <a href="https://help.apple.com/xcode/mac/current/#/dev8b4250b57">应用部署流程</a></p>
<h5 id="使用标识符"><a href="#使用标识符" class="headerlink" title="使用标识符"></a>使用标识符</h5><p>要对 App 进行签名，您需要了解以下参数：</p>
<table>
<thead>
<tr>
<th>参数名</th>
<th>标识符</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>代码签名身份</td>
<td>–codeSignIdentity2</td>
<td>用于签名的代码签名身份。 它可以使用Xcode创建并添加到您的钥匙串中。 从Xcode 8开始，您应该使用–codeSignIdentity =“iPhone Developer”进行调试和发布。</td>
</tr>
<tr>
<td>开发团队</td>
<td>–developmentTeam</td>
<td>用于代码签名的开发团队（团队ID）。 您可以使用此设置和简化的代码签名身份（即只是“iPhone开发人员”）来签署您的应用程序，无需提供配置文件。</td>
</tr>
<tr>
<td>打包类型</td>
<td>–packageType</td>
<td>这会决定 Xcode 构建什么类型的 App。 有效选项包括开发（默认），企业，ad-hoc和应用商店。</td>
</tr>
<tr>
<td>配置文件</td>
<td>–provisioningProfile</td>
<td>（可选）用于手动签名的配置文件的GUID。 它会在 Mac 上复制：〜/ Library / MobileDevice / Provisioning \ Profiles /。 在文本编辑器中打开它，如果使用手动签名，您可以找到需要在此处指定的GUID。</td>
</tr>
<tr>
<td>代码签名资源规则</td>
<td>–codesignResourceRules</td>
<td>(可选)用来配置哪些文件会作为代码签名的捆绑，查看 <a href="https://developer.apple.com/library/archive/technotes/tn2206/_index.html#//apple_ref/doc/uid/DTS40007919-CH1-TNTAG206">OS X 代码签名</a> 了解更多信息。</td>
</tr>
<tr>
<td>自动配置</td>
<td>–automaticProvisioning</td>
<td>（可选）启用以允许Xcode自动管理配置文件。 有效选项为false（默认值）和true。</td>
</tr>
</tbody></table>
<h5 id="使用-build-json-1"><a href="#使用-build-json-1" class="headerlink" title="使用 build.json"></a>使用 build.json</h5><p>或者，您可以使用相同命令的–buildConfig参数在构建配置文件（build.json）中指定它们。 以下是构建配置文件的示例：</p>
<p>对于自动签名，配置配置文件由Xcode自动管理（推荐）：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;ios&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;debug&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;codeSignIdentity&quot;</span><span class="punctuation">:</span> <span class="string">&quot;iPhone Developer&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;developmentTeam&quot;</span><span class="punctuation">:</span> <span class="string">&quot;FG35JLLMXX4A&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;packageType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;development&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;automaticProvisioning&quot;</span><span class="punctuation">:</span> <span class="keyword">true</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;buildFlag&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">&quot;EMBEDDED_CONTENT_CONTAINS_SWIFT = YES&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;ALWAYS_EMBED_SWIFT_STANDARD_LIBRARIES=NO&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;LD_RUNPATH_SEARCH_PATHS = \&quot;@executable_path/Frameworks\&quot;&quot;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;release&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;codeSignIdentity&quot;</span><span class="punctuation">:</span> <span class="string">&quot;iPhone Developer&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;developmentTeam&quot;</span><span class="punctuation">:</span> <span class="string">&quot;FG35JLLMXX4A&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;packageType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;app-store&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;automaticProvisioning&quot;</span><span class="punctuation">:</span> <span class="keyword">true</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;buildFlag&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">&quot;EMBEDDED_CONTENT_CONTAINS_SWIFT = YES&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;ALWAYS_EMBED_SWIFT_STANDARD_LIBRARIES=NO&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;LD_RUNPATH_SEARCH_PATHS = \&quot;@executable_path/Frameworks\&quot;&quot;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
<p>对于手动签名，要根据 UUID 指定配置文件：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;ios&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;debug&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;codeSignIdentity&quot;</span><span class="punctuation">:</span> <span class="string">&quot;iPhone Development&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;provisioningProfile&quot;</span><span class="punctuation">:</span> <span class="string">&quot;926c2bd6-8de9-4c2f-8407-1016d2d12954&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;developmentTeam&quot;</span><span class="punctuation">:</span> <span class="string">&quot;FG35JLLMXX4A&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;packageType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;development&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;release&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;codeSignIdentity&quot;</span><span class="punctuation">:</span> <span class="string">&quot;iPhone Distribution&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;provisioningProfile&quot;</span><span class="punctuation">:</span> <span class="string">&quot;70f699ad-faf1-4adE-8fea-9d84738fb306&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;developmentTeam&quot;</span><span class="punctuation">:</span> <span class="string">&quot;FG35JLLMXX4A&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;packageType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;app-store&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
<h4 id="Xcode-构建标志符"><a href="#Xcode-构建标志符" class="headerlink" title="Xcode 构建标志符"></a>Xcode 构建标志符</h4><p>如果您有自定义情况需要将其他构建标志传递给Xcode  - 您将使用一个或多个 –buildFlag 选项将这些标志传递给 xcodebuild。 如果您使用 xcodebuild 内置标志，它将显示警告。 您还可以在上面的build.json中指定buildFlag选项（buildFlag键的值是字符串或字符串数组）。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cordova build --device --buildFlag=<span class="string">&quot;MYSETTING=myvalue&quot;</span> --buildFlag=<span class="string">&quot;MY_OTHER_SETTING=othervalue&quot;</span></span><br><span class="line">cordova run --device --buildFlag=<span class="string">&quot;DEVELOPMENT_TEAM=FG35JLLMXX4A&quot;</span> --buildFlag=<span class="string">&quot;-scheme TestSchemeFlag&quot;</span></span><br></pre></td></tr></table></figure>
<h4 id="调试-1"><a href="#调试-1" class="headerlink" title="调试"></a>调试</h4><p>有关Xcode附带的调试工具的详细信息，请查看这篇<a href="https://developer.apple.com/support/debugging/">Apple 开发调试部分</a>。</p>
<p>用于iOS项目的Cordova可以在Xcode中打开。如果您希望使用内置调试/分析工具的Xcode，或者您正在开发iOS插件，这将非常有用。请注意，在Xcode中打开项目时，建议您不要在IDE中编辑代码。这将编辑项目的平台文件夹（而不是www）中的代码，并且可能会覆盖更改。而是编辑www文件夹并通过运行cordova build复制您的更改。</p>
<p>希望在IDE中编辑其原生代码的插件开发人员在通过cordova插件添加将其插件添加到项目时应使用–link标志。这将链接文件，以便对平台文件夹中的插件文件的更改反映在插件的源文件夹中（反之亦然）。</p>
<p>将ios平台添加到项目并使用cordova构建后，您可以在Xcode中打开它。双击打开$ {PROJECT_NAME} / platforms / ios / $ {PROJECT_NAME} .xcworkspace文件或从终端打开Xcode：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ open -a Xcode platforms/ios</span><br></pre></td></tr></table></figure>
<p>界面如下所示：<br><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/frontend/cordova/develop/5.jpg"></p>
<h4 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h4><p>有关升级cordova-ios版本的说明，请参阅此<a href="https://cordova.apache.org/docs/en/latest/guide/platforms/ios/upgrade.html">文章</a>。
 </p>
]]></content>
      <categories>
        <category>mobile</category>
      </categories>
      <tags>
        <tag>Cordova</tag>
      </tags>
  </entry>
  <entry>
    <title>Cordova快速入门</title>
    <url>/2019/01/22/cordova-quick-learn/</url>
    <content><![CDATA[<h3 id="背景介绍"><a href="#背景介绍" class="headerlink" title="背景介绍"></a>背景介绍</h3><h4 id="数说移动端的几种开发模式"><a href="#数说移动端的几种开发模式" class="headerlink" title="数说移动端的几种开发模式"></a>数说移动端的几种开发模式</h4><ul>
<li>Native App: 采用原生代码进行，优点就是体验好，缺点是需要为不同的系统平台独立开发一套应用，开发成本较高。</li>
<li>Web app: 一般是指 SAP(SinglePageApplication) 模式开发出的网站，体验较差。</li>
<li> React Native App: 是 Facebook 开源的一套App开发解决方案，让你只使用 JavaScript 也能够编写原生移动应用，它在设计原理上和 React 一致，通过声明式的组件机制来搭建丰富多彩的用户界面，能够实现大部分的跨平台，体验较好。</li>
<li>Hybrid App: 混合开发模式，由Native 通过 JSBridge(一种)等方法提供统一的API，然后用前端语言(HTML、JS、CSS) 来写实际的界面和逻辑，再调用API，最终应用的页面是在 webview中示，从而达到跨平台效果，常见的是用Phonegap或Cordova中间件组合其他移动UI框架进行开发。</li>
<li>值得注意的是，RN App 和 Hybrid App 还是有本质区别的，RN App 是用JavaScript告诉原生语言做什么，所以最终在平台上运行的都是原生语言，包括UI等，也是原生的组件，而 Hybrid App中显示的大多是 webview，webview 里套常见的移动UI框架。Hybird App的原理图如下W：</li>
</ul>
<span id="more"></span>

<p><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/frontend/cordova/quick_start/1.jpg"></p>
<h4 id="Cordova的前世今生"><a href="#Cordova的前世今生" class="headerlink" title="Cordova的前世今生"></a>Cordova的前世今生</h4><p>Cordova前身是 Phonegap，最先由 Nitobi 软件公司在2008年推出，旨在弥补 web 和 ios 之间的不足，使得 web 和 iphone SDK 之间的交互更容易，后来陆续加入了更多的平台。</p>
<p>2011年，Adobe公司收购 Nitobi 后，将phonegap 项目的核心代码捐赠给了 Apache软件基金会(ASF), 使其保持透明和持续的发展，Apchae将其命名为 Cordova，而Adobe PhoneGap则发展出了一些服务型工具，如 Phonegap destop App、 Phonegap developer App、Phonegap build、Phonegap CLI等。</p>
<p>很多人可能会问：那 Cordova 和 Phonegap 的区别到底是什么，其实Cordova相当于驱动 Phonegap 的核心引擎，就好比如 WebKit 是现在大多数浏览器的引擎一样，因此 Adobe PhoneGap可理解为是Apache Cordova 的应用发行版。</p>
<p>Cordova的架构原理图如下，可知 Cordova 是混合App开发的一个中间件。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/frontend/cordova/quick_start/2.jpg"></p>
<h3 id="Cordova安装"><a href="#Cordova安装" class="headerlink" title="Cordova安装"></a>Cordova安装</h3><p>安装 Cordova 前，需要准备两样东西。</p>
<ol>
<li>下载安装 Node.js，这样就可以使用 Node.js 的 npm 软件管理包。</li>
<li>安装 Git，因为当涉及到一些 git 仓库时会使用 git 来下载相关的资源。</li>
</ol>
<p>Mac Os 或 Linux平台：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo npm install -g cordova</span><br></pre></td></tr></table></figure>
<p>Windows：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">C:\&gt;npm install -g cordova</span><br></pre></td></tr></table></figure>
<p>-g 参数是指告诉 npm 要全局安装 Cordova，不然会被安装在当前目录的子目录 node_modules 下。</p>
<h3 id="Cordova使用"><a href="#Cordova使用" class="headerlink" title="Cordova使用"></a>Cordova使用</h3><h4 id="创建一个-App-项目"><a href="#创建一个-App-项目" class="headerlink" title="创建一个 App 项目"></a>创建一个 App 项目</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cordova create hello[Required] com.example.hello[Optional] HelloWorld[Optional]</span><br></pre></td></tr></table></figure>
<p>hello 是指项目文件夹名，com.example.hello 是应用程序的 ID 名，可在 config.xml 中更改。 HelloWorld，是 App 的名称，也可在 config.xml 中更改<br>这样就会创建最基本的App目录结构，默认会生成基于的web的应用主页，即为项目目录下的 www/index.html</p>
<h4 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h4><p>Cordova 默认创建的 App 目录如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">myapp/</span><br><span class="line">|-- config.xml</span><br><span class="line">|-- hooks/</span><br><span class="line">|-- merges/</span><br><span class="line">| | |-- android/</span><br><span class="line">| | |-- windows/</span><br><span class="line">| | |-- ios/</span><br><span class="line">|-- www/</span><br><span class="line">|-- platforms/</span><br><span class="line">| |-- android/</span><br><span class="line">| |-- windows/</span><br><span class="line">| |-- ios/</span><br><span class="line">|-- plugins/</span><br><span class="line">  |--cordova-plugin-camera/</span><br></pre></td></tr></table></figure>
<ul>
<li>config.xml: 在这你可以自定义 App 项目的信息</li>
<li>www/: 包括项目的web代码，如 html, css 和 js 文件，你将在这开发你 App 的主要代码，另外在 plaform 目录下的ios 目录或 android 目录下，也会有一个 www 目录，是基于 project/www 目录编译覆盖的。</li>
<li>platform/: 包括你添加的平台的源码和脚本，注意一般不要该目录下的代码，否则可能造成在相关平台运行不了。</li>
<li>plugins/: 插件目录，所有添加的插件都会被解压并复制到该目录下。</li>
<li>hooks/：可以包含用于自定义 Cordova-CLI 命令的脚本， 您添加到这些目录的任何脚本都将在与目录名对应的命令之前和之后执行。 用于集成您自己的构建系统或与版本控制系统。</li>
<li>merges/: 包含一些与特定平台相关联的 web 资源(HTML, CSS 和 JavaScript 文件),放在merges /下的文件将覆盖相关平台的www /文件夹中的匹配文件。 一个简单的例子，假设一个项目结构：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">merges/</span><br><span class="line">|-- ios/</span><br><span class="line">| -- app.js</span><br><span class="line">|-- android/</span><br><span class="line">| -- android.js</span><br><span class="line">www/</span><br><span class="line">-- app.js</span><br></pre></td></tr></table></figure>
<p>在构建Android和iOS项目之后，Android应用程序将同时包含app.js和android.js，而iOS应用程序则只包含app.js，它是将 merges/ios/app.js，覆盖位于www/内的通用的app.js。</p>
<h4 id="添加平台"><a href="#添加平台" class="headerlink" title="添加平台"></a>添加平台</h4><p>首先进入项目目录:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> hello</span><br></pre></td></tr></table></figure>
<p>添加开发平台，会在 config.xml 和 package.json 中有记录:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ cordova platform add ios</span><br><span class="line">$ cordova platform add android</span><br></pre></td></tr></table></figure>
<p>执行上面两条命令后会在 platform 目录下生成 ios 和 android 两个子目录，用来存放编译后的代码和一些app的内容。</p>
<p>查看项目已添加的平台：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ cordova platform <span class="built_in">ls</span></span><br></pre></td></tr></table></figure>
<p>当在 www 目录下开发完毕后，用以下命令构建项目到各个平台：</p>
<h4 id="构建前准备"><a href="#构建前准备" class="headerlink" title="构建前准备"></a>构建前准备</h4><p>要构建和运行应用程序，您需要为您想要开发的每个平台安装对应的SDK。 或者，如果您使用浏览器进行开发，则可以使用不需要任何平台SDK的浏览器平台。</p>
<p>查看您是否满足必须条件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ cordova requirements</span><br><span class="line">Requirements check results <span class="keyword">for</span> android:</span><br><span class="line">Java JDK: installed .</span><br><span class="line">Android SDK: installed</span><br><span class="line">Android target: installed android-19,android-21,android-22,android-23,Google Inc.:Google APIs:19,Google Inc.:Google APIs (x86 System Image):19,Google Inc.:Google APIs:23</span><br><span class="line">Gradle: installed</span><br><span class="line"></span><br><span class="line">Requirements check results <span class="keyword">for</span> ios:</span><br><span class="line">Apple OS X: not installed</span><br><span class="line">Cordova tooling <span class="keyword">for</span> iOS requires Apple OS X</span><br><span class="line">Error: Some of requirements check failed</span><br></pre></td></tr></table></figure>


<h4 id="应用构建与运行"><a href="#应用构建与运行" class="headerlink" title="应用构建与运行"></a>应用构建与运行</h4><h5 id="构建应用"><a href="#构建应用" class="headerlink" title="构建应用"></a>构建应用</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cordova build [&lt;platform&gt; [...]]</span><br><span class="line">    [--debug|--release]</span><br><span class="line">    [--device|--emulator]</span><br><span class="line">    [--buildConfig=&lt;configfile&gt;]</span><br><span class="line">    [--browserify]</span><br><span class="line">    [-- &lt;platformOpts&gt;]</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th>参数</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><platform>[…]</td>
<td>要构建的平台名，没指定则为所有平台进行编译构建</td>
</tr>
<tr>
<td>–debug</td>
<td>构建调试模式</td>
</tr>
<tr>
<td>–release</td>
<td>构建发布模式</td>
</tr>
<tr>
<td>–device</td>
<td>构建到设备</td>
</tr>
<tr>
<td>–emulator</td>
<td>构建到模拟器</td>
</tr>
<tr>
<td>–buildConfig=<configFile></td>
<td>使用特定的配置文件来编译构建，如指定签名等。</td>
</tr>
<tr>
<td>–browserity</td>
<td>在构建时编译JS插件而不是运行时</td>
</tr>
<tr>
<td><platformOpts></td>
<td>提供特定的选项</td>
</tr>
</tbody></table>
<h5 id="运行应用"><a href="#运行应用" class="headerlink" title="运行应用"></a>运行应用</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cordova run [&lt;platform&gt; [...]]</span><br><span class="line">    [--list | --debug | --release]</span><br><span class="line">    [--noprepare] [--nobuild]</span><br><span class="line">    [--device|--emulator|--target=&lt;targetName&gt;]</span><br><span class="line">    [--buildConfig=&lt;configfile&gt;]</span><br><span class="line">    [--browserify]</span><br><span class="line">    [-- &lt;platformOpts&gt;]</span><br></pre></td></tr></table></figure>


<table>
<thead>
<tr>
<th>参数</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><platform>[…]</td>
<td>要运行的平台名，没指定则所有平台都运行</td>
</tr>
<tr>
<td>–list</td>
<td>列出可用的运行目标，包括模拟器和设备，除非特定指定</td>
</tr>
<tr>
<td>–debug</td>
<td>默认选型，运行调试模式</td>
</tr>
<tr>
<td>–release</td>
<td>运行发布模式</td>
</tr>
<tr>
<td>–noprepare</td>
<td>跳过准备阶段，适用于Cordova v6.2及其之后版本。</td>
</tr>
<tr>
<td>–nobuild</td>
<td>跳过重新构建阶段</td>
</tr>
<tr>
<td>–device</td>
<td>在设备上运行</td>
</tr>
<tr>
<td>–emulator</td>
<td>在模拟器上运行</td>
</tr>
<tr>
<td>–target</td>
<td>指定运行目标</td>
</tr>
<tr>
<td>–buildConfig=<configFile></td>
<td>使用特定的配置文件来编译构建，如指定签名等。</td>
</tr>
<tr>
<td>–browserity</td>
<td>在构建时编译JS插件而不是在运行时</td>
</tr>
<tr>
<td><platformOpts></td>
<td>提供特定的选项</td>
</tr>
</tbody></table>
<h4 id="添加插件"><a href="#添加插件" class="headerlink" title="添加插件"></a>添加插件</h4><p>可以在 <a href="https://cordova.apache.org/plugins/">Cordova插件资源</a> 页面中查询需要的插件，也可以使用命令行搜索相关插件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ cordova plugin search camera</span><br></pre></td></tr></table></figure>

<p>添加某个插件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ cordova plugin add cordova-plugin-camera</span><br><span class="line">Fetching plugin <span class="string">&quot;cordova-plugin-camera@~2.1.0&quot;</span> via npm</span><br><span class="line">Installing <span class="string">&quot;cordova-plugin-camera&quot;</span> <span class="keyword">for</span> android</span><br><span class="line">Installing <span class="string">&quot;cordova-plugin-camera&quot;</span> <span class="keyword">for</span> ios</span><br></pre></td></tr></table></figure>
<p>插件也可以通过目录或 Git 仓库的形式添加</p>
<p>注意：（CLI为每个平台添加适当的插件代码。 如果您希望使用概述中讨论的低级shell工具或平台SDK进行开发，则需要运行Plugman实用程序以为每个平台单独添加插件。 （有关更多信息，请参阅使用Plugman管理插件。）</p>
<p>查看已安装的插件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ cordova plugin <span class="built_in">ls</span></span><br><span class="line">cordova-plugin-camera 2.1.0 <span class="string">&quot;Camera&quot;</span></span><br><span class="line">cordova-plugin-whitelist 1.2.1 <span class="string">&quot;Whitelist&quot;</span></span><br></pre></td></tr></table></figure>

<h4 id="使用合并功能"><a href="#使用合并功能" class="headerlink" title="使用合并功能"></a>使用合并功能</h4><p>虽然Cordova允许您能够轻松地为许多不同平台部署应用程序，但实际上您时常需要添加一些自定义项。在这种情况下，您当然不希望修改不同平台下的www目录中的源文件，因为它们经常被顶级www目录的资源替换。</p>
<p>因此，Cordova 在顶级目录下提供了一个位置(merge目录)可以指定在哪个平台部署资源。merge目录中的平台子目录都对应着 www源码目录机构，允许您根据需要覆盖或添加文件。例如，你可能会使用合并功能为 Android 设备设置默认的字体大小：</p>
<ul>
<li>在 www/index.html 文件中，添加一条指向额外的CSS样式文件的链接：overrides.css</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;<span class="built_in">link</span> rel=<span class="string">&quot;stylesheet&quot;</span> <span class="built_in">type</span>=<span class="string">&quot;text/css&quot;</span> href=<span class="string">&quot;css/overrides.css&quot;</span> /&gt;</span><br></pre></td></tr></table></figure>
<ul>
<li>（可选）创建一个空的www / css / overrides.css文件，该文件适用于所有非Android版本，防止丢失文件错误。</li>
<li>在merges / android中创建一个css子目录，然后添加一个相应的overrides.css文件。 指定覆盖www / css / index.css中指定的12磅默认字体大小的CSS，例如：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">body &#123; font-size:14px; &#125;</span><br></pre></td></tr></table></figure>
<p>当你重新构建项目后，只有 android 平台会应用自定义字体大小的样式，而其他平台保持不变。</p>
<h4 id="更新-Cordova-和您的项目"><a href="#更新-Cordova-和您的项目" class="headerlink" title="更新 Cordova 和您的项目"></a>更新 Cordova 和您的项目</h4><p>升级 Cordova 版本:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo npm update -g cordova</span><br></pre></td></tr></table></figure>
<p>安装指定的 Cordova 版本：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo npm install -g cordova@3.1.0-0.2.0</span><br></pre></td></tr></table></figure>
<p>查看 Cordova 版本：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cordova -v</span><br></pre></td></tr></table></figure>
<p>查看最新 Cordova 最新版本相关信息：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ npm info cordova version</span><br></pre></td></tr></table></figure>

<p>更新指定的平台：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ cordova platform update android --save</span><br><span class="line">$ cordova platform update ios --save</span><br><span class="line">...etc.</span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>mobile</category>
      </categories>
      <tags>
        <tag>Cordova</tag>
      </tags>
  </entry>
  <entry>
    <title>Spring Boot2 实战系列之使用HTTPS</title>
    <url>/2020/03/28/springboot-https-sample/</url>
    <content><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>各位小伙伴有没有发现，现在的网站基本都用上了 HTTP，因为 HTTP的通信是明文的，容易被不怀好意的人监听通信，窥探用户的隐私，这简直就是裸奔。而 HTTPS 使用 SSL 证书在加密通信前进行身份验证，协商加密算法以及交换密钥，可以满足基本的安全需求，即防窃取，防篡改，防钓鱼。</p>
<p>https 通信的流程如下:</p>
<span id="more"></span>
<p><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/backend/spring_boot/https_sample/1.jpg"></p>
<p>可见数字证书非常重要，正规是使用权威的CA机构颁发的SSL证书的，可以在阿里云购买 CA 授权颁发的证书。一般个人用的话购买免费 DV SSL就行了，有效期一年。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/backend/spring_boot/https_sample/2.jpg"></p>
<p>但下面为了方便演示，用 jdk 自带工具 keytool 生成一个自签名的数字证书。</p>
<h3 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h3><h4 id="生成证书"><a href="#生成证书" class="headerlink" title="生成证书"></a>生成证书</h4><p>选择一个目录，打开命令行窗口，输入如下命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">keytool -genkey -<span class="built_in">alias</span> yekong -storetype PKCS12 -keyalg RSA -keysize 2048 -keystore yekong.p12 -validity 3650</span><br></pre></td></tr></table></figure>
<p>参数说明:</p>
<ul>
<li>genkey: 生成SSL证书</li>
<li>alias: 证书别名</li>
<li>storetype: 秘钥仓库类型</li>
<li>keyalg: 生成证书算法</li>
<li>keysize: 证书大小</li>
<li>keystore: 生成证书保存路径，也是证书名称</li>
<li>validity: 证书有效期<br><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/backend/spring_boot/https_sample/3.jpg"></li>
</ul>
<p>然后会在该目录下生成证书。</p>
<h4 id="IDEA新建一个项目"><a href="#IDEA新建一个项目" class="headerlink" title="IDEA新建一个项目"></a>IDEA新建一个项目</h4><p>项目结构如下，将前面生成的证书放到 src/main/resources 下。<br><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/backend/spring_boot/https_sample/4.jpg"></p>
<p>pom 依赖如下:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">	<span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2.5.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>top.yekongle<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springboot-https-sample<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">name</span>&gt;</span>springboot-https-sample<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">description</span>&gt;</span>Https sample for Spring Boot<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-thymeleaf<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.junit.vintage<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit-vintage-engine<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="代码编写"><a href="#代码编写" class="headerlink" title="代码编写"></a>代码编写</h3><p><strong>application.properties</strong><br>全局配置如下</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ssl 配置</span></span><br><span class="line"><span class="comment"># 使用 443 端口，用于 https 服务</span></span><br><span class="line">server.port=443</span><br><span class="line"><span class="comment"># 指定类路径下的证书</span></span><br><span class="line">server.ssl.key-store=classpath:yekong.p12</span><br><span class="line"><span class="comment"># 证书密码</span></span><br><span class="line">server.ssl.key-store-password=yekong</span><br><span class="line"><span class="comment"># 证书算法</span></span><br><span class="line">server.ssl.key-store-type=PKCS12</span><br><span class="line"><span class="comment"># 证书别名</span></span><br><span class="line">server.ssl.key-alias=yekong</span><br><span class="line"></span><br><span class="line"><span class="comment"># thymeleaf 模板引擎配置</span></span><br><span class="line"><span class="comment"># 指定模板文件路径</span></span><br><span class="line">spring.thymeleaf.prefix=classpath:/templates/</span><br><span class="line"><span class="comment"># 文件后缀为 html</span></span><br><span class="line">spring.thymeleaf.suffix=.html</span><br><span class="line">spring.thymeleaf.mode=HTML5</span><br><span class="line">spring.thymeleaf.encoding=UTF-8</span><br></pre></td></tr></table></figure>

<p><strong>login.html</strong><br>创建一个 login 页面作为返回演示</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Home<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.central</span>&#123;</span></span><br><span class="line"><span class="language-css"> <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css"> <span class="attribute">height</span>: auto;</span></span><br><span class="line"><span class="language-css"> <span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="language-css"> <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;central&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Spring Boot https sample<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>ServerConfig.java</strong><br>配置tomcat，当访问http时可以跳转到https</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> top.yekongle.https.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.catalina.Context;</span><br><span class="line"><span class="keyword">import</span> org.apache.catalina.connector.Connector;</span><br><span class="line"><span class="keyword">import</span> org.apache.tomcat.util.descriptor.web.SecurityCollection;</span><br><span class="line"><span class="keyword">import</span> org.apache.tomcat.util.descriptor.web.SecurityConstraint;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;pre&gt;</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 自定义内置Tomcat, 使访问 http 时可以自动跳转到 https</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: Yekongle</span></span><br><span class="line"><span class="comment"> * &lt;/pre&gt;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ServerConfig</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> TomcatServletWebServerFactory <span class="title function_">servletContainer</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">TomcatServletWebServerFactory</span> <span class="variable">tomcat</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TomcatServletWebServerFactory</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">postProcessContext</span><span class="params">(Context context)</span> &#123;</span><br><span class="line">                <span class="type">SecurityConstraint</span> <span class="variable">securityConstraint</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SecurityConstraint</span>();</span><br><span class="line">                securityConstraint.setUserConstraint(<span class="string">&quot;CONFIDENTIAL&quot;</span>);</span><br><span class="line">                <span class="type">SecurityCollection</span> <span class="variable">collection</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SecurityCollection</span>();</span><br><span class="line">                collection.addPattern(<span class="string">&quot;/*&quot;</span>);</span><br><span class="line">                securityConstraint.addCollection(collection);</span><br><span class="line">                context.addConstraint(securityConstraint);</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 配置静态资源访问</span></span><br><span class="line">             <span class="comment">/*SecurityConstraint securityConstraint1 = new SecurityConstraint();</span></span><br><span class="line"><span class="comment">                securityConstraint1.setUserConstraint(&quot;NONE&quot;);</span></span><br><span class="line"><span class="comment">                SecurityCollection collection1 = new SecurityCollection();</span></span><br><span class="line"><span class="comment">                collection.addPattern(&quot;/static/&quot;);</span></span><br><span class="line"><span class="comment">                securityConstraint.addCollection(collection1);</span></span><br><span class="line"><span class="comment">                context.addConstraint(securityConstraint1);*/</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        tomcat.addAdditionalTomcatConnectors(initiateHttpConnector());</span><br><span class="line">        <span class="keyword">return</span> tomcat;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Connector <span class="title function_">initiateHttpConnector</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">Connector</span> <span class="variable">connector</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Connector</span>(<span class="string">&quot;org.apache.coyote.http11.Http11NioProtocol&quot;</span>);</span><br><span class="line">        connector.setScheme(<span class="string">&quot;http&quot;</span>);</span><br><span class="line">        <span class="comment">// 设置http端口80,访问时不用加端口号</span></span><br><span class="line">        connector.setPort(<span class="number">80</span>);</span><br><span class="line">        connector.setSecure(<span class="literal">false</span>);</span><br><span class="line">        <span class="comment">// 跳转到https端口</span></span><br><span class="line">        connector.setRedirectPort(<span class="number">443</span>);</span><br><span class="line">        <span class="keyword">return</span> connector;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>LoginController.java</strong><br>接收 /login 请求，跳到 login页面</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> top.yekongle.https.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LoginController</span> &#123;</span><br><span class="line">	</span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/login&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">index</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;login&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br></pre></td></tr></table></figure>


<h3 id="测试演示"><a href="#测试演示" class="headerlink" title="测试演示"></a>测试演示</h3><p>启动项目，发现控制台报错<br><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/backend/spring_boot/https_sample/5.jpg"></p>
<p>原来是端口被占用，这种情况时常有之，打开cmd</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 1. 找出哪个进程监听443</span></span><br><span class="line">netstat -ano | find <span class="string">&quot;443&quot;</span></span><br><span class="line">TCP    0.0.0.0:443            0.0.0.0:0              LISTENING       6252</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. 查看该进程具体信息</span></span><br><span class="line">netstat -ano | find <span class="string">&quot;6252&quot;</span></span><br><span class="line">vmware-hostd.exe              6252 Services                   0     27,324 K</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3. ctrl + shit + esc 打开任务管理器关掉这个程序</span></span><br></pre></td></tr></table></figure>



<p>重新启动项目正常，浏览器输入地址如下，可以自动转到https。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1/login</span><br></pre></td></tr></table></figure>

<p><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/backend/spring_boot/https_sample/6.jpg"></p>
<p>项目已上传至 Github: <a href="https://github.com/yekongle/springboot-code-samples/tree/master/springboot-https-sample">https://github.com/yekongle/springboot-code-samples/tree/master/springboot-https-sample</a> , 希望对小伙伴们有帮助哦。</p>
]]></content>
      <categories>
        <category>Spring Boot</category>
      </categories>
      <tags>
        <tag>https</tag>
        <tag>SpringBoot</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo更换电脑如何同步博客配置解决办法</title>
    <url>/2020/03/28/hexo-online/</url>
    <content><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>关于使用 Hexo 搭建个人博客可参考本人另一篇博文: <a href="https://blog.csdn.net/qq_23483671/article/details/78635372">Hexo框架+NextT主题搭建博客教程</a></p>
<p>相信有不少小伙伴使用 Hexo 来搭建自己的个人博客，但问题是如果你电脑突然坏了，或者你想在其他电脑编辑发表你的博客，又要花费时间精力来重新配置你的站点，这样就比较麻烦。这时，我们可以将我们的站点放到 Github 或者其他 Git 托管平台，如此一来，无论你在哪里，都可以随时 clone 下来，简单配置下，就可以继续玩耍。</p>
<span id="more"></span>

<h3 id="实践"><a href="#实践" class="headerlink" title="实践"></a>实践</h3><h4 id="准备新仓库或新分支"><a href="#准备新仓库或新分支" class="headerlink" title="准备新仓库或新分支"></a>准备新仓库或新分支</h4><p>首先，你可以在 Github 创建一个新仓库或者直接在自己的 Gihubpage 仓库创建一条新 branch 来存放你的 hexo 相关配置文件。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 本地创建新分支 hexo 并切换到该分支</span></span><br><span class="line">git checkout -b hexo</span><br><span class="line"><span class="comment"># 推送分支并merge到远程分支hexo, 没有会自动创建</span></span><br><span class="line">git push origin hexo:hexo</span><br></pre></td></tr></table></figure>
<p><strong>或者用 eclipse 管理仓库，创建新分支</strong><br><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/interesting/hexo_online/1.jpg"></p>
<p><strong>推送分支到远程</strong><br><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/interesting/hexo_online/2.jpg"></p>
<h4 id="删掉分支-hexo-下面除了-git-的内容"><a href="#删掉分支-hexo-下面除了-git-的内容" class="headerlink" title="删掉分支 hexo 下面除了 git 的内容"></a>删掉分支 hexo 下面除了 git 的内容</h4><p><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/interesting/hexo_online/3.jpg"></p>
<h4 id="将现有的-hexo-目录拷贝到该分支目录下"><a href="#将现有的-hexo-目录拷贝到该分支目录下" class="headerlink" title="将现有的 hexo 目录拷贝到该分支目录下"></a>将现有的 hexo 目录拷贝到该分支目录下</h4><p>要拷贝的文件或目录有：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">_config.yml</span><br><span class="line">package.json</span><br><span class="line">scaffolds/</span><br><span class="line"><span class="built_in">source</span>/</span><br><span class="line">themes/</span><br><span class="line">.gitignore</span><br></pre></td></tr></table></figure>
<p>.gitignore 里的内容如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">.DS_Store</span><br><span class="line">Thumbs.db</span><br><span class="line">db.json</span><br><span class="line">*.<span class="built_in">log</span></span><br><span class="line">node_modules/</span><br><span class="line">public/</span><br><span class="line">.deploy*/</span><br></pre></td></tr></table></figure>
<p><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/interesting/hexo_online/4.jpg"></p>
<h4 id="推送到远程分支"><a href="#推送到远程分支" class="headerlink" title="推送到远程分支"></a>推送到远程分支</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">&quot;Add hexo&quot;</span></span><br><span class="line">git push</span><br></pre></td></tr></table></figure>

<h4 id="使用-hexo-分支"><a href="#使用-hexo-分支" class="headerlink" title="使用 hexo 分支"></a>使用 hexo 分支</h4><p>当需要在其他电脑编写博客时，就可以 clone 下来</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> -b hexo https://github.com/yourname/xxx.github.io.git </span><br></pre></td></tr></table></figure>
<p>然后在新电脑配置 hexo 环境(需先安装 node.js 环境)</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装 hexo-cli</span></span><br><span class="line">npm install hexo-cli -g</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装依赖</span></span><br><span class="line">npm install</span><br></pre></td></tr></table></figure>
<h4 id="使用回顾"><a href="#使用回顾" class="headerlink" title="使用回顾"></a>使用回顾</h4><p>进入 hexo 分支目录，打开命令行</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 新建文章</span></span><br><span class="line">hexo new <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 新建类别</span></span><br><span class="line">hexo new page <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成静态文件</span></span><br><span class="line">hexo g</span><br><span class="line"></span><br><span class="line"><span class="comment"># 本地运行</span></span><br><span class="line">hexo s</span><br><span class="line"></span><br><span class="line"><span class="comment"># 部署到 github page</span></span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure>
<p>部署完毕后记得将源文件 push 到远程，同步博客内容。</p>
]]></content>
      <categories>
        <category>Interesting</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Spring Boot2 实战系列之多环境Profile</title>
    <url>/2020/03/29/springboot-profile-sample/</url>
    <content><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>在开发软件中，一个值得注意的问题就是当程序从一个环境迁移到另一个环境时，我们的程序是否依然正常运行，因为在开发阶段时，某些环境配置可能与生产环境不同，例如数据库配置，加密算法等。</p>
<p>在 Spring 中，你可以分别为不同的环境设置一个配置类，然后在运行时再根据环境来确定应该创建哪个 bean 和 不创建哪个 bean。在 Spring3.1 中，引入了 bean profile 的概念，可以将它理解为我们在Spring容器中所定义的Bean的逻辑组名称，对应到环境一般就是 dev(开发环境)，uat(用户测试环境), prod(生产环境)，在部署时指定激活哪个 profile 就行了。</p>
<span id="more"></span>
<p>在 SpringBoot 中，可以通过创建 application-{profile}.properties, 然后在application.properties 中来指定激活的 profile, 比如指定active profile 为 prod 后，spring就会加载 application-prod.properties。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">spring.profiles.active=prod</span><br></pre></td></tr></table></figure>
<p>但这样如果每次更换环境时都要更改配置，就比较麻烦，所以可以利用 maven profiles 在构建应用时指定用什么 pofile，springboot 再将这个值替换就行了。</p>
<p>下面利用 server 端口来做一个例子， 分别为每个环境设置一个对应的端口。</p>
<h3 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h3><p>项目结构图如下：<br><img data-src="https://wx3.sinaimg.cn/mw690/005GXpqPgy1gdaw0tn5ptj30cs0d53yw.jpg"></p>
<p>pom 依赖如下：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">	<span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2.5.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>top.yekongle<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springboot-profile-sample<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">name</span>&gt;</span>springboot-profile-sample<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">description</span>&gt;</span>Profile sample for Spring Boot<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.junit.vintage<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit-vintage-engine<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">profiles</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">profile</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">id</span>&gt;</span>dev<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">			<span class="comment">&lt;!--默认激活 dev 环境--&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">activation</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">activeByDefault</span>&gt;</span>true<span class="tag">&lt;/<span class="name">activeByDefault</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">activation</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">active.profile</span>&gt;</span>dev<span class="tag">&lt;/<span class="name">active.profile</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">profile</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">profile</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">id</span>&gt;</span>uat<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">active.profile</span>&gt;</span>uat<span class="tag">&lt;/<span class="name">active.profile</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">profile</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">profile</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">id</span>&gt;</span>prod<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">active.profile</span>&gt;</span>prod<span class="tag">&lt;/<span class="name">active.profile</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">profile</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">profiles</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">finalName</span>&gt;</span>$&#123;project.artifactId&#125;<span class="tag">&lt;/<span class="name">finalName</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/resources<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">filtering</span>&gt;</span>true<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--只包含全局 properties 和指定 profile 的properties--&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">include</span>&gt;</span>application.properties<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">include</span>&gt;</span>application-$&#123;active.profile&#125;.properties<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="代码编写"><a href="#代码编写" class="headerlink" title="代码编写"></a>代码编写</h3><p>编辑 application.properties</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 对应 pom 中的 active.profile 属性，默认是 dev</span></span><br><span class="line">spring.profiles.active=@active.profile@</span><br></pre></td></tr></table></figure>

<p>创建 application-dev.properties</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">server.port=8080</span><br></pre></td></tr></table></figure>

<p>创建 application-uat.properties</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">server.port=8081</span><br></pre></td></tr></table></figure>

<p>创建 application-prod.properties</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">server.port=80</span><br></pre></td></tr></table></figure>

<p>创建 HelloController.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HelloController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">index</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Hello world!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="运行测试"><a href="#运行测试" class="headerlink" title="运行测试"></a>运行测试</h3><p>打开 IDEA 命令行, 分别输入如下命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 使用 dev 环境</span></span><br><span class="line">mvn clean spring-boot:run -P dev</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用 uat 环境</span></span><br><span class="line">mvn clean spring-boot:run -P uat</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用 prod 环境</span></span><br><span class="line">mvn clean spring-boot:run -P prod</span><br></pre></td></tr></table></figure>

<p>打开浏览器</p>
<p>访问 <a href="http://localhost:8080/">http://localhost:8080</a><br><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/backend/spring_boot/profile_sample/1.jpg"></p>
<p>访问 <a href="http://localhost:8081/">http://localhost:8081</a><br><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/backend/spring_boot/profile_sample/2.jpg"></p>
<p>访问 <a href="http://localhost/">http://localhost</a><br><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/backend/spring_boot/profile_sample/3.jpg"></p>
<p>可见为不同环境配置的端口访问成功。</p>
<p>项目已上传至 Github: <a href="https://github.com/yekongle/springboot-code-samples/tree/master/springboot-profile-sample">https://github.com/yekongle/springboot-code-samples/tree/master/springboot-profile-sample</a> , 希望对小伙伴们有帮助哦。</p>
]]></content>
      <categories>
        <category>Spring Boot</category>
      </categories>
      <tags>
        <tag>SpringBoot</tag>
      </tags>
  </entry>
  <entry>
    <title>Spring Boot2 实战系列之属性配置</title>
    <url>/2020/03/28/springboot-properties-sample/</url>
    <content><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>在项目中我们常常需要配置一些基本的属性，比如连接数据库的 URL, Driven, username，password 等，这些配置内容如果放在代码中会变得难以维护, 想象一下，当你的应用配置信息临时需要变更时，你要改动代码然后重新编译打包再部署，如此一来就耗费大量时间，给用户带来不好体验。因此，我们通常将配置信息放在一个配置文件中，一般以 ==.properties== 结尾，因为可以直接通过 Properties 类读取。</p>
<p>在 Spring Boot 中，默认使用一个全局的配置文件 ==application.properties==, 同时也支持 ==application.yml==, 默认放在 ==src/main/resource== 下面, 可以直接将 .properties 改为 .yml, 效果一样。两者区别: <strong>properties 的配置是以 key=value 格式存储内容，而 yaml 则是以数据为中心的语言，配置更加清晰</strong>。如下面两者配置方式对比：</p>
<span id="more"></span>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># application.properties</span></span><br><span class="line">server.port=8090</span><br><span class="line">server.context-path=/hello</span><br><span class="line"></span><br><span class="line"><span class="comment"># applicaton.yml</span></span><br><span class="line">server:</span><br><span class="line">  port: 8090</span><br><span class="line">  contextPath: /hello</span><br></pre></td></tr></table></figure>

<p>日常开发，我个人习惯用 properties 文件来配置，因此下面使用该格式来进行配置。</p>
<h3 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h3><p><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/backend/spring_boot/properties_sample/1.jpg"></p>
<p>项目结构图如下：<br><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/backend/spring_boot/properties_sample/2.jpg"></p>
<p>pom 依赖文件如下：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">	<span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2.5.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>top.yekongle<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springboot-properties-sample<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">name</span>&gt;</span>springboot-properties-sample<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">description</span>&gt;</span>Properties sample for Spring Boot<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-configuration-processor<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.junit.vintage<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit-vintage-engine<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="代码编写"><a href="#代码编写" class="headerlink" title="代码编写"></a>代码编写</h3><p>SpringBoot 项目启动后，会从 src/main/resource/ 下的全局配置 application.properties 或 application.yml 配置文件读取内容并加载到Spring 上下文，有几种方法可以将配置内容注入到属性中:</p>
<ol>
<li>用 @Value 注解注入类属性中。</li>
<li>当你的配置内容较多时，用 @Value 需要注入多次，可以通过 @ConfigurationProperties 将 properties 与 Java 类 及其属性相关联。</li>
<li>当你有一个自定义的配置文件，如 test.properties, springboot 默认不会加载，这时你可以通过 @PropertySource 引入这个配置文件，配合 @Value 和 @ConfigurationProperties 使用。</li>
</ol>
<p>application.properties(springboot 默认加载)</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Book info</span></span><br><span class="line">book.author=yekongle</span><br><span class="line">book.name=SpringBoot</span><br><span class="line"></span><br><span class="line"><span class="comment"># Song info</span></span><br><span class="line">song.author=Taylor Swift</span><br><span class="line">song.name=Fearless</span><br></pre></td></tr></table></figure>

<p>SongConfig.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> top.yekongle.properties.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.context.properties.ConfigurationProperties;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Component</span> 将其注册成 Bean</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ConfigurationProperties</span> 指定属性前缀，绑定到类属性中</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Data</span> 自动生 getter setter 方法</span></span><br><span class="line"><span class="comment"> * */</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@ConfigurationProperties(prefix = &quot;song&quot;)</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SongConfig</span> &#123;</span><br><span class="line">	<span class="keyword">private</span> String author;</span><br><span class="line">	<span class="keyword">private</span> String name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>


<p>test.properties(自定义配置文件，通过 @PropertySource 引入)</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Person info</span></span><br><span class="line">person.name=yekongle</span><br><span class="line">person.age=24</span><br></pre></td></tr></table></figure>

<p>PersonConfig.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> top.yekongle.properties.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.context.properties.ConfigurationProperties;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.PropertySource;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Component</span> 将其注册成 Bean</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@PropertySource</span> 指定类路径下配置文件</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ConfigurationProperties</span> 自动生 getter setter 方法</span></span><br><span class="line"><span class="comment"> * */</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@PropertySource(value = &quot;classpath:test.properties&quot;)</span></span><br><span class="line"><span class="meta">@ConfigurationProperties(prefix = &quot;person&quot;)</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PersonConfig</span> &#123;</span><br><span class="line">	<span class="keyword">private</span> String name;</span><br><span class="line">	<span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>IndexController.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> top.yekongle.properties.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Value;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"><span class="keyword">import</span> top.yekongle.properties.config.PersonConfig;</span><br><span class="line"><span class="keyword">import</span> top.yekongle.properties.config.SongConfig;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">IndexController</span> &#123;</span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;book.author&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String bookAuthor;</span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;book.name&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String bookName;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> SongConfig songConfig;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> PersonConfig personConfig;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 返回用 @Value 注入的配置内容</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">index</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> String.format(<span class="string">&quot;book author[%s], book name[%s]&quot;</span>, bookAuthor, bookName);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 返回用 @ConfigurationProperties 注入的配置内容</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/song&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">song</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> String.format(<span class="string">&quot;song author[%s], song name[%s]&quot;</span>, songConfig.getAuthor(), songConfig.getName());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 返回用 @PropertySource与ConfigurationProperties组合使用注入的配置内容</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/person&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">person</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> String.format(<span class="string">&quot;person name[%s], person age[%d]&quot;</span>, personConfig.getName(), personConfig.getAge());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="测试结果"><a href="#测试结果" class="headerlink" title="测试结果"></a>测试结果</h3><ol>
<li>访问 <a href="http://localhost:8080/">http://localhost:8080/</a><br><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/backend/spring_boot/properties_sample/3.jpg"></li>
</ol>
<ol start="2">
<li><p>访问 <a href="http://localhost:8080/book">http://localhost:8080/book</a><br><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/backend/spring_boot/properties_sample/4.jpg"></p>
</li>
<li><p>访问 <a href="http://localhost:8080/person">http://localhost:8080/person</a><br><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/backend/spring_boot/properties_sample/5.jpg"></p>
</li>
</ol>
<p>项目已上传至 Github: <a href="https://github.com/yekongle/springboot-code-samples/tree/master/springboot-properties-sample">https://github.com/yekongle/springboot-code-samples/tree/master/springboot-properties-sample</a> , 希望对小伙伴们有帮助哦。</p>
]]></content>
      <categories>
        <category>Spring Boot</category>
      </categories>
      <tags>
        <tag>SpringBoot</tag>
      </tags>
  </entry>
  <entry>
    <title>CentOS7 安装 Jenkins</title>
    <url>/2020/04/06/jenkins-centos7-installlation/</url>
    <content><![CDATA[<h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><p>首先前往官网挑选安装包：<a href="https://jenkins.io/zh/download/">https://jenkins.io/zh/download/</a>, 选择图中红框 Red Hat/Fedora/Centos 一栏</p>
<span id="more"></span>
<p><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/devops/jenkins/centos7_installation/1.jpg"></p>
<p>进入安装包列表，我这里选择了 ==jenkins-2.176.3-1.1.noarch.rpm==。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/devops/jenkins/centos7_installation/2.jpg"></p>
<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>注意，安装前先确保已经安装了JDK8 及以上版本。</p>
<p>按照惯例，安装前先更新下软件源:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo yum update -y</span><br></pre></td></tr></table></figure>

<p>将下载的 rpm 包放上 centos 后，执行以下命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 给安装包可执行权限</span></span><br><span class="line"><span class="built_in">chmod</span> +x jenkins-2.176.3-1.1.noarch.rpm</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装 rpm 包</span></span><br><span class="line">sudo rpm -ivh jenkins-2.176.3-1.1.noarch.rpm</span><br></pre></td></tr></table></figure>

<p>Jenkins rpm 包安装完后相关文件默认路径如下：</p>
<ul>
<li>执行文件在 /usr/lib/jenkins/jenkins.war</li>
<li>日志在 /var/log/jenkins/jenkins.log</li>
<li>centos 服务启动脚本在 /etc/init.d/jenkins</li>
<li>配置文件在 /etc/sysconfig/jenkins</li>
<li>默认用户名为 jenkins, 临时密码位于 /var/lib/jenkins/secrets/initialAdminPassword</li>
</ul>
<p>通过 service 方式启动 Jenkins 服务</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 启动 jenkins 服务</span></span><br><span class="line">sudo service jenkins start</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看服务状态</span></span><br><span class="line">sudo service jenkins status</span><br></pre></td></tr></table></figure>

<p>启动后访问 <a href="http://localhost:8080/">http://localhost:8080</a></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/devops/jenkins/centos7_installation/3.jpg"></p>
<p>如果无法访问 Jenkins 页面，则可以尝试关闭防火墙</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 关闭防火墙</span></span><br><span class="line">sudo service firewalld stop</span><br><span class="line"></span><br><span class="line"><span class="comment"># 禁止防火墙开机启动</span></span><br><span class="line">sudo systemctl <span class="built_in">disable</span> firewalld.service</span><br><span class="line"></span><br><span class="line"><span class="comment"># 停止 iptables 服务</span></span><br><span class="line">sudo service iptables stop</span><br><span class="line"></span><br><span class="line"><span class="comment"># 禁止 iptables 开机启动</span></span><br><span class="line">sudo systemctl <span class="built_in">disable</span> iptables.service</span><br></pre></td></tr></table></figure>
<p>输入初次登陆密码解锁 Jenkins，位于 ==/var/lib/jenkins/secrets/initialAdminPassword==</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> /var/lib/jenkins/secrets/initialAdminPassword</span><br></pre></td></tr></table></figure>
<p>解锁成功进入 <strong>Customize Jenkins</strong> 页面内<br><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/devops/jenkins/centos7_installation/4.jpg"></p>
<p>注意，极有可能出现安装插件不成功的情况，如下图，这时先跳过安装插件<br><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/devops/jenkins/centos7_installation/5.jpg"></p>
<p>这时会进入管<strong>理员设置页面</strong>，设置管理员的信息后保存，当下次再登陆时会变成这样，就用这个管理员账号密码登陆<br><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/devops/jenkins/centos7_installation/6.jpg"></p>
<p>登陆后进入Jenkins 主界面<br><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/devops/jenkins/centos7_installation/7.jpg"></p>
<h3 id="端口和JENKINS-HOME-配置"><a href="#端口和JENKINS-HOME-配置" class="headerlink" title="端口和JENKINS_HOME 配置"></a>端口和JENKINS_HOME 配置</h3><p>Jenkins 端口默认是8080，如果需要更换可以修改配置文件 /etc/sysconfig/jenkins</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 首先停止 Jenkins 服务</span></span><br><span class="line">sudo service jenkins stop</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改配置文件, 找到 JENKINS_PORT 修改即可</span></span><br><span class="line">sudo vim /etc/sysconfig/jenkins</span><br><span class="line">JENKINS_PORT=<span class="string">&quot;9090&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启 Jenkins 服务</span></span><br><span class="line">sudo service jenkins start</span><br></pre></td></tr></table></figure>

<p>Jenkins home 默认在 /var/lib/jenkins 下，如果 Jenkins 运行一段时间后如果提示如下，则表明 Jenkins home 空间快要不足了，这时可以更改 Jenkins home 为其他目录<br><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/devops/jenkins/centos7_installation/8.jpg"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 1. 首先将原来 jenkins home 文件复制到新 jenkins home</span></span><br><span class="line">sudo <span class="built_in">cp</span> -r -p /var/lib/jenkins /home/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. 修改配置文件</span></span><br><span class="line">sudo vim /etc/sysconfig/jenkins</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3. 找到 JENKINS_HOME, 更改为其他目录, 保存退出</span></span><br><span class="line">JENKINS_HOME=<span class="string">&quot;/home/jenkins&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 4. 给新的 home 目录赋予用户和用户组权限(如果该目录用户和用户组不是 jenkins)</span></span><br><span class="line">sudo <span class="built_in">chown</span> -R jenkins:jenkins /home/jenkins</span><br><span class="line"></span><br><span class="line"><span class="comment"># 5. 修改/etc/passwd中的jenkins</span></span><br><span class="line">jenkins:x:985:979:Jenkins Automation Server:/home/jenkins:/bin/false</span><br><span class="line"></span><br><span class="line"><span class="comment"># 6. 重启 Jenkins 服务</span></span><br><span class="line">sudo service jenkins start</span><br></pre></td></tr></table></figure>

<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>通过上面的步骤，就可以成功安装 Jenkins, 但是有个遗留问题就是，在国内安装 Jenkins 插件时通常是安装失败的，解决办法可参考另一篇博文：<a href="https://www.jianshu.com/writer#/notebooks/45666238/notes/69464487">Jenkins 插件安装失败解决办法</a></p>
]]></content>
      <categories>
        <category>DevOps</category>
      </categories>
      <tags>
        <tag>Jenkins</tag>
      </tags>
  </entry>
  <entry>
    <title>Jenkins 插件安装失败解决办法</title>
    <url>/2020/04/06/jenkins-plugin-installation/</url>
    <content><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>如果还没有安装 Jenkins 的小伙伴，可参考另一篇博文： <a href="https://www.jianshu.com/writer#/notebooks/45666238/notes/69463836">CentOS7 安装 Jenkins</a></p>
<p>Jenkins 的官方镜像源非常慢，国内基本不可用，经过一番研究整理，有3种安装插件解决办法</p>
<span id="more"></span>

<ol>
<li>在 Jenkins 官网下载想要的插件，再导入到 Jenkins 中。(较为繁琐)</li>
<li>更改 Jenkins 的镜像源。(可用，但安装插件还是不够快)</li>
<li>同第二点类似同样要配置镜像源，不过要先安装中文社区的简体中文插件。(推荐，安装插件较快)</li>
</ol>
<p>下面详细说明这 3 种解决办法</p>
<h3 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h3><h4 id="导入-Jenkins-插件"><a href="#导入-Jenkins-插件" class="headerlink" title="导入 Jenkins 插件"></a>导入 Jenkins 插件</h4><p>首先进入官网插件界面， <a href="https://plugins.jenkins.io/">https://plugins.jenkins.io/</a></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/devops/jenkins/plugins_installation/1.jpg"></p>
<p>输入插件名称搜索，比如搜索 localization, 如果想更换简体中文语言，红框内3个插件是必须的<br><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/devops/jenkins/plugins_installation/2.jpg"></p>
<p>下载插件<br><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/devops/jenkins/plugins_installation/3.jpg"></p>
<p>选择版本，注意，如果想用第三种解决办法，这里要选择 1.0.10 以上<br><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/devops/jenkins/plugins_installation/4.jpg"></p>
<p>下载完进行插件管理页面<br><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/devops/jenkins/plugins_installation/5.jpg"></p>
<p>选择 Advanced(高级)一栏，导入该插件即可<br><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/devops/jenkins/plugins_installation/6.jpg"></p>
<h3 id="Jenkins-更换镜像源"><a href="#Jenkins-更换镜像源" class="headerlink" title="Jenkins 更换镜像源"></a>Jenkins 更换镜像源</h3><p>配置国内镜像源，先到镜像源站点查看可用的镜像源：<a href="http://mirrors.jenkins-ci.org/status.html">http://mirrors.jenkins-ci.org/status.html</a></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/devops/jenkins/plugins_installation/7.jpg"></p>
<p>这里使用清华大学开源软件镜像站的镜像源：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">https://mirrors.tuna.tsinghua.edu.cn/jenkins/updates/update-center.json</span><br></pre></td></tr></table></figure>

<p>在 Jenkins 中配置该镜像源<br><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/devops/jenkins/plugins_installation/8.jpg"></p>
<p>尝试下载 Jenkins 中文社区简体中文插件, 选择 Avaliable(可选插件)一栏，Filter输入框输入：Localization<br><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/devops/jenkins/plugins_installation/9.jpg"></p>
<p>点击左下侧 <strong>Install without restart</strong> 进入安装页面，如果失败了，就再试多几次。<br><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/devops/jenkins/plugins_installation/10.jpg"></p>
<h3 id="使用中文社区镜像源"><a href="#使用中文社区镜像源" class="headerlink" title="使用中文社区镜像源"></a>使用中文社区镜像源</h3><p>这种解决办法是推荐的，可彻底解决插件安装慢问题，不过要先安装中文插件，可以先通过前面两种方法安装该插件，安装完后是这样的<br><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/devops/jenkins/plugins_installation/11.jpg"></p>
<p>切换为中文<br><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/devops/jenkins/plugins_installation/12.jpg"></p>
<p>重要的来了，Jenkins 页面中拉到底部，点击 ==Jenkins 中文社区==<br><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/devops/jenkins/plugins_installation/13.jpg"></p>
<p>出现如下页面，先点击使用，再点击设置地址<br><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/devops/jenkins/plugins_installation/14.jpg"></p>
<p>更换镜像源为：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">https://jenkins-zh.gitee.io/update-center-mirror/tsinghua/update-center.json</span><br></pre></td></tr></table></figure>
<p>点击提交后，点击 check now(立即获取)<br><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/devops/jenkins/plugins_installation/15.jpg"></p>
<p>接下来，面对疾风吧，安装一个 Pipeline 插件，很快就安装完了，没有报失败。<br><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/devops/jenkins/plugins_installation/16.jpg"></p>
]]></content>
      <categories>
        <category>DevOps</category>
      </categories>
      <tags>
        <tag>Jenkins</tag>
      </tags>
  </entry>
  <entry>
    <title>Jenkins 配置邮箱服务器发送构建结果</title>
    <url>/2020/11/24/jenkins-send-email/</url>
    <content><![CDATA[<h3 id="安装-Email-Extension-Template-插件"><a href="#安装-Email-Extension-Template-插件" class="headerlink" title="安装 Email Extension Template 插件"></a>安装 Email Extension Template 插件</h3><p>Jenkins 自带邮件通知，但是它无法提供详细的邮件内容、无法定义发送邮件的格式、无法定义灵活的邮件接收配置，好在 Email Extension Template 插件能够通过灵活的配置，发送我们自定义的邮件模板。</p>
<p>搜索安装下面这两个即可</p>
<span id="more"></span>
<p><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/devops/jenkins/build_result_email/1.jpg"></p>
<h3 id="Jenkins-配置邮箱相关参数"><a href="#Jenkins-配置邮箱相关参数" class="headerlink" title="Jenkins 配置邮箱相关参数"></a>Jenkins 配置邮箱相关参数</h3><p>==进入到 Manage Jenkins-&gt;Configure System 下==</p>
<h4 id="配置管理员邮件地址"><a href="#配置管理员邮件地址" class="headerlink" title="配置管理员邮件地址"></a>配置管理员邮件地址</h4><p><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/devops/jenkins/build_result_email/2.jpg"></p>
<h4 id="配置-Extended-E-mail-Notification"><a href="#配置-Extended-E-mail-Notification" class="headerlink" title="配置 Extended E-mail Notification"></a>配置 Extended E-mail Notification</h4><h5 id="配置邮箱服务地址，端口，账号密码，默认收件人等"><a href="#配置邮箱服务地址，端口，账号密码，默认收件人等" class="headerlink" title="配置邮箱服务地址，端口，账号密码，默认收件人等"></a>配置邮箱服务地址，端口，账号密码，默认收件人等</h5><p><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/devops/jenkins/build_result_email/3.jpg"></p>
<h5 id="配置邮件模板"><a href="#配置邮件模板" class="headerlink" title="配置邮件模板"></a>配置邮件模板</h5><p><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/devops/jenkins/build_result_email/4.jpg"></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>$&#123;PROJECT_NAME&#125;-第$&#123;BUILD_NUMBER&#125;次构建日志<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span></span></span><br><span class="line"><span class="tag">    <span class="attr">leftmargin</span>=<span class="string">&quot;8&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">marginwidth</span>=<span class="string">&quot;0&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">topmargin</span>=<span class="string">&quot;8&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">marginheight</span>=<span class="string">&quot;4&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">offset</span>=<span class="string">&quot;0&quot;</span></span></span><br><span class="line"><span class="tag">  &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">table</span></span></span><br><span class="line"><span class="tag">      <span class="attr">width</span>=<span class="string">&quot;95%&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">cellpadding</span>=<span class="string">&quot;0&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">cellspacing</span>=<span class="string">&quot;0&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">style</span>=<span class="string">&quot;font-size: 11pt; font-family: Tahoma, Arial, Helvetica, sans-serif&quot;</span></span></span><br><span class="line"><span class="tag">    &gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>(本邮件是程序自动下发的，请勿回复！)<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">h2</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">&quot;#0000FF&quot;</span>&gt;</span>构建结果 - $&#123;BUILD_STATUS&#125;<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">b</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">&quot;#0B610B&quot;</span>&gt;</span>构建信息<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">hr</span> <span class="attr">size</span>=<span class="string">&quot;2&quot;</span> <span class="attr">width</span>=<span class="string">&quot;100%&quot;</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>项目名称 ： $&#123;PROJECT_NAME&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>构建编号 ： 第$&#123;BUILD_NUMBER&#125;次构建<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>触发原因： $&#123;CAUSE&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">              构建日志： <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;$&#123;BUILD_URL&#125;console&quot;</span>&gt;</span>$&#123;BUILD_URL&#125;console<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>构建 Url ： <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;$&#123;BUILD_URL&#125;&quot;</span>&gt;</span>$&#123;BUILD_URL&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>工作目录 ： <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;$&#123;PROJECT_URL&#125;ws&quot;</span>&gt;</span>$&#123;PROJECT_URL&#125;ws<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>项目 Url ： <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;$&#123;PROJECT_URL&#125;&quot;</span>&gt;</span>$&#123;PROJECT_URL&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">b</span></span></span><br><span class="line"><span class="tag">            &gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">&quot;#0B610B&quot;</span></span></span><br><span class="line"><span class="tag">              &gt;</span>Changes Since Last Successful Build:&lt;/font</span><br><span class="line">            &gt;&lt;/b</span><br><span class="line">          &gt;</span><br><span class="line">          <span class="tag">&lt;<span class="name">hr</span> <span class="attr">size</span>=<span class="string">&quot;2&quot;</span> <span class="attr">width</span>=<span class="string">&quot;100%&quot;</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">              历史变更记录 :</span><br><span class="line">              <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;$&#123;PROJECT_URL&#125;changes&quot;</span>&gt;</span>$&#123;PROJECT_URL&#125;changes<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">          $&#123;CHANGES_SINCE_LAST_SUCCESS,reverse=true, format=&quot;Changes for Build</span><br><span class="line">          #%n:<span class="tag">&lt;<span class="name">br</span> /&gt;</span>%c<span class="tag">&lt;<span class="name">br</span> /&gt;</span>&quot;,showPaths=true,changesFormat=&quot;</span><br><span class="line">          <span class="tag">&lt;<span class="name">pre</span>&gt;</span>[%a]<span class="tag">&lt;<span class="name">br</span> /&gt;</span>%m<span class="tag">&lt;/<span class="name">pre</span>&gt;</span></span><br><span class="line">          &quot;,pathFormat=&quot; %p&quot;&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">b</span>&gt;</span>Test Informations<span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">hr</span> <span class="attr">size</span>=<span class="string">&quot;2&quot;</span> <span class="attr">width</span>=<span class="string">&quot;100%&quot;</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">pre</span></span></span><br><span class="line"><span class="tag">            <span class="attr">style</span>=<span class="string">&quot;font-size: 11pt; font-family: Tahoma, Arial, Helvetica, sans-serif&quot;</span></span></span><br><span class="line"><span class="tag">          &gt;</span></span><br><span class="line">Total:$&#123;TEST_COUNTS,var=&quot;total&quot;&#125;,Pass:$&#123;TEST_COUNTS,var=&quot;pass&quot;&#125;,Failed:$&#123;TEST_COUNTS,var=&quot;fail&quot;&#125;,Skiped:$&#123;TEST_COUNTS,var=&quot;skip&quot;&#125;&lt;/pre</span><br><span class="line">          &gt;</span><br><span class="line">          <span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">b</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">&quot;#0B610B&quot;</span>&gt;</span>构建日志 (最后 100行):<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">hr</span> <span class="attr">size</span>=<span class="string">&quot;2&quot;</span> <span class="attr">width</span>=<span class="string">&quot;100%&quot;</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">textarea</span></span></span><br><span class="line"><span class="tag">            <span class="attr">cols</span>=<span class="string">&quot;80&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">rows</span>=<span class="string">&quot;30&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">readonly</span>=<span class="string">&quot;readonly&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">style</span>=<span class="string">&quot;font-family: Courier New&quot;</span></span></span><br><span class="line"><span class="tag">          &gt;</span></span><br><span class="line">$&#123;BUILD_LOG,maxLines=100&#125;&lt;/textarea</span><br><span class="line">          &gt;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>值得一提的是，这里要勾上 Enable Debug Mode, 如果没有收到邮件会打印问题日志</p>
<p>Default Triggers 勾选对应的 trigger<br><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/devops/jenkins/build_result_email/5.jpg"></p>
<h4 id="配置-Jenkins-默认邮箱信息"><a href="#配置-Jenkins-默认邮箱信息" class="headerlink" title="配置 Jenkins 默认邮箱信息"></a>配置 Jenkins 默认邮箱信息</h4><p><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/devops/jenkins/build_result_email/6.jpg"></p>
<p>点击应用，保存。</p>
<h3 id="项目构建后配置"><a href="#项目构建后配置" class="headerlink" title="项目构建后配置"></a>项目构建后配置</h3><p>在增加构建后操作步骤选择 Editble Email Notification<br><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/devops/jenkins/build_result_email/7.jpg"></p>
<p>Content Type 选择 HTML，并且选择附加上 Build Log.<br><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/devops/jenkins/build_result_email/8.jpg"></p>
<p>添加一个 Always 触发器<br><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/devops/jenkins/build_result_email/9.jpg"></p>
<h3 id="项目构建测试邮件发送"><a href="#项目构建测试邮件发送" class="headerlink" title="项目构建测试邮件发送"></a>项目构建测试邮件发送</h3><p>项目构建完毕，查看控制台输出，显示邮件发送成功。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/devops/jenkins/build_result_email/10.jpg"></p>
<p>登录配置好的接收人邮箱，看到成功收到构建成功的邮件：<br><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/devops/jenkins/build_result_email/11.jpg"></p>
]]></content>
      <categories>
        <category>DevOps</category>
      </categories>
      <tags>
        <tag>Jenkins</tag>
      </tags>
  </entry>
  <entry>
    <title>Jenkins + Gitlab + Maven 持续集成部署 SpringBoot 应用实践</title>
    <url>/2020/11/22/jenkins-gitlab-maven-cicd/</url>
    <content><![CDATA[<h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>本次同小伙伴们分享使用 Jenkins + Gilab + Maven 来自动化部署一个 Spring Boot 应用，架构图如下：</p>
<span id="more"></span>
<p><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/devops/practise/jenkins_gitlab_maven_sb/1.jpg"></p>
<p>该 Spring Boot 应用是一个简单的商品后台管理应用，采用了 Spring Security + JWT + MySql, 前端采用了 React 构建，放在 classpath:/resources/static 目录下，商品图片上传到本地目录下通过 nginx 代理访问。后端代码结构如下：<br><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/devops/practise/jenkins_gitlab_maven_sb/2.jpg"></p>
<h3 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h3><p>本次自动化构建准备环境如下：</p>
<ul>
<li>安装 CentOs7 VM1, IP: 192.168.43.206(1 核 2G)</li>
<li>安装 CentOs7 VM2, IP: 192.168.43.208(1 核 3G)</li>
<li>安装 JDK1.8(192.168.43.206)</li>
<li>安装 Git(192.168.43.206)</li>
<li>安装 Maven(192.168.43.206)</li>
<li>安装 Mysql(192.168.43.206)</li>
<li>安装 Jenkins(192.168.43.206)</li>
<li>安装 Tomcat(192.168.43.206)</li>
<li>安装 Nginx(192.168.43.206)</li>
<li>安装 Gitlab-CE(192.168.43.208)</li>
</ul>
<p><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/devops/practise/jenkins_gitlab_maven_sb/3.jpg"></p>
<p>使用 FinalShell 连接这两台 VM。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/devops/practise/jenkins_gitlab_maven_sb/4.jpg"></p>
<p>关于具体安装，这些网上都有许多详细的教程，不再具体展开安装说明。</p>
<h4 id="nginx-配置"><a href="#nginx-配置" class="headerlink" title="nginx 配置"></a>nginx 配置</h4><h5 id="配置-nignx-代理图片路径"><a href="#配置-nignx-代理图片路径" class="headerlink" title="配置 nignx 代理图片路径"></a>配置 nignx 代理图片路径</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">user  root;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 图片映射路径</span></span><br><span class="line">location /image &#123;</span><br><span class="line">    root   /root;</span><br><span class="line">    <span class="comment"># 打开目录索引</span></span><br><span class="line">    autoindex on;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="nginx-启动关闭"><a href="#nginx-启动关闭" class="headerlink" title="nginx 启动关闭"></a>nginx 启动关闭</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 启动 nginx</span></span><br><span class="line">/usr/local/nginx/sbin/nginx</span><br><span class="line"></span><br><span class="line"><span class="comment"># 停⽌Nginx服务，可执⾏</span></span><br><span class="line">/usr/local/nginx/sbin/nginx -s stop</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果修改了配置⽂件后想重新加载Nginx，可执⾏：</span></span><br><span class="line">/usr/local/nginx/sbin/nginx -s reload</span><br><span class="line"></span><br><span class="line"><span class="comment"># 注意其配置⽂件位于：</span></span><br><span class="line">/usr/local/nginx/conf/nginx.conf</span><br></pre></td></tr></table></figure>

<h4 id="Tomcat-配置"><a href="#Tomcat-配置" class="headerlink" title="Tomcat 配置"></a>Tomcat 配置</h4><h5 id="配置-Tomcat-用户角色权限"><a href="#配置-Tomcat-用户角色权限" class="headerlink" title="配置 Tomcat 用户角色权限"></a>配置 Tomcat 用户角色权限</h5><p>默认情况下 Tomcat 是没有配置用户角色权限的</p>
<p>但是后续 Jenkins 部署项目到 Tomcat 服务器，需要用到 Tomcat 的用户，所以修改 tomcat 以下配置， 添加用户及权限</p>
<p>vim /usr/local/tomcat/apache-tomcat-8.5.55/conf/tomcat-users.xml</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;tomcat-users&gt;</span><br><span class="line">    &lt;role rolename=<span class="string">&quot;tomcat&quot;</span>/&gt;</span><br><span class="line">    &lt;role rolename=<span class="string">&quot;role1&quot;</span>/&gt;</span><br><span class="line">    &lt;role rolename=<span class="string">&quot;manager-script&quot;</span>/&gt;</span><br><span class="line">    &lt;role rolename=<span class="string">&quot;manager-gui&quot;</span>/&gt;</span><br><span class="line">    &lt;role rolename=<span class="string">&quot;manager-status&quot;</span>/&gt;</span><br><span class="line">    &lt;role rolename=<span class="string">&quot;admin-gui&quot;</span>/&gt;</span><br><span class="line">    &lt;role rolename=<span class="string">&quot;admin-script&quot;</span>/&gt;</span><br><span class="line">    &lt;user username=<span class="string">&quot;hank&quot;</span> password=<span class="string">&quot;hank123&quot;</span> roles=<span class="string">&quot;manager-gui,manager-script,tomcat,admin-gui,admin-script&quot;</span>/&gt;</span><br><span class="line">&lt;/tomcat-users&gt;</span><br></pre></td></tr></table></figure>

<p>注意：为了能够刚才配置的用户登录到 Tomcat，还需要修改以下配置</p>
<p>vim /usr/local/tomcat/apache-tomcat-8.5.55/webapps/manager/META-INF/context.xml</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;!--</span><br><span class="line"> &lt;Valve className=<span class="string">&quot;org.apache.catalina.valves.RemoteAddrValve&quot;</span></span><br><span class="line">         allow=<span class="string">&quot;127\.\d+\.\d+\.\d+|::1|0:0:0:0:0:0:0:1&quot;</span> /&gt;</span><br><span class="line">--&gt;</span><br></pre></td></tr></table></figure>

<p>把上面这行注释掉即可！</p>
<h5 id="配置快捷操作和开机启动"><a href="#配置快捷操作和开机启动" class="headerlink" title="配置快捷操作和开机启动"></a>配置快捷操作和开机启动</h5><p>⾸先进⼊ /etc/rc.d/init.d ⽬录，创建⼀个名为 tomcat 的⽂件，并赋予执⾏权限</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /etc/rc.d/init.d/</span><br><span class="line"></span><br><span class="line"><span class="built_in">touch</span> tomcat</span><br><span class="line"></span><br><span class="line"><span class="built_in">chmod</span> +x tomcat</span><br></pre></td></tr></table></figure>

<p>接下来编辑 tomcat ⽂件，并在其中加⼊如下内容：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># !/bin/bash</span></span><br><span class="line"><span class="comment"># chkconfig:- 20 90</span></span><br><span class="line"><span class="comment"># description:tomcat</span></span><br><span class="line"><span class="comment"># processname:tomcat</span></span><br><span class="line"></span><br><span class="line">JAVA_HOME=/usr/local/java/jdk1.8.0_161</span><br><span class="line"><span class="built_in">export</span> JAVA_HOME</span><br><span class="line">TOMCAT_HOME=/usr/local/tomcat/apache-tomcat-8.5.55</span><br><span class="line"><span class="built_in">export</span> TOMCAT_HOME</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="variable">$1</span> <span class="keyword">in</span></span><br><span class="line">        start) su root <span class="variable">$TOMCAT_HOME</span>/bin/startup.sh;;</span><br><span class="line">        stop) su root <span class="variable">$TOMCAT_HOME</span>/bin/shutdown.sh;;</span><br><span class="line">        restart)</span><br><span class="line">        <span class="variable">$0</span> stop</span><br><span class="line">        <span class="variable">$0</span> start;;</span><br><span class="line">        *) <span class="built_in">echo</span> <span class="string">&quot;Usage: service tomcat start|stop|restart&quot;</span>;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">esac</span></span><br></pre></td></tr></table></figure>

<p>这样后续对于 Tomcat 的开启和关闭只需要执⾏如下命令即可：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">service tomcat start</span><br><span class="line">service tomcat stop</span><br><span class="line">service tomcat restart</span><br></pre></td></tr></table></figure>

<h4 id="启动-Gitlab-CE"><a href="#启动-Gitlab-CE" class="headerlink" title="启动 Gitlab-CE"></a>启动 Gitlab-CE</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">gitlab-ctl start</span><br></pre></td></tr></table></figure>

<p>访问登录本地 gitlab：<a href="http://192.168.43.208/">http://192.168.43.208/</a>, 创建 shop-manager-backend 项目，上传本地代码到该仓库<br><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/devops/practise/jenkins_gitlab_maven_sb/5.jpg"></p>
<h4 id="Jenkins-配置"><a href="#Jenkins-配置" class="headerlink" title="Jenkins 配置"></a>Jenkins 配置</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl start jenkins</span><br></pre></td></tr></table></figure>

<p>启动 Jenkins, 访问登录本地 Jenkins：<br><a href="http://192.168.43.206:8500/">http://192.168.43.206:8500/</a>, Jenkins 插件通常安装不了，可参考我另一篇博文安装插件, 这里我已经安装好了。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/devops/practise/jenkins_gitlab_maven_sb/6.jpg"></p>
<h5 id="全局工具配置"><a href="#全局工具配置" class="headerlink" title="全局工具配置"></a>全局工具配置</h5><p>在 Jenkins -&gt; Global Tool Configuration 下， 配置 JDK, Git, 和 Maven</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/devops/practise/jenkins_gitlab_maven_sb/7.jpg"></p>
<h5 id="添加-Jenkins-全局变量"><a href="#添加-Jenkins-全局变量" class="headerlink" title="添加 Jenkins 全局变量"></a>添加 Jenkins 全局变量</h5><p>在 Jenkins -&gt; Configure System 下，添加全局变量</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/devops/practise/jenkins_gitlab_maven_sb/8.jpg"></p>
<h5 id="添加-Gitlab-API-Token"><a href="#添加-Gitlab-API-Token" class="headerlink" title="添加 Gitlab API Token"></a>添加 Gitlab API Token</h5><p>在 Jenkins -&gt; Configure System 下，添加 API Token<br><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/devops/practise/jenkins_gitlab_maven_sb/9.jpg"></p>
<h5 id="新建一个自由风格项目"><a href="#新建一个自由风格项目" class="headerlink" title="新建一个自由风格项目"></a>新建一个自由风格项目</h5><p><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/devops/practise/jenkins_gitlab_maven_sb/10.jpg"></p>
<h5 id="General"><a href="#General" class="headerlink" title="General"></a>General</h5><p>GitLab Connection: 选择前面添加的 Gitlab API Token<br><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/devops/practise/jenkins_gitlab_maven_sb/11.jpg"></p>
<h5 id="源码配置："><a href="#源码配置：" class="headerlink" title="源码配置："></a>源码配置：</h5><p>Repository URL: <a href="mailto:&#103;&#x69;&#116;&#x40;&#x31;&#57;&#50;&#x2e;&#49;&#54;&#x38;&#x2e;&#x34;&#x33;&#46;&#50;&#x30;&#56;">&#103;&#x69;&#116;&#x40;&#x31;&#57;&#50;&#x2e;&#49;&#54;&#x38;&#x2e;&#x34;&#x33;&#46;&#50;&#x30;&#56;</a>:yekongle/shop-manager-backend.git</p>
<p>Credentials: 配置一个访问 gitlab 的凭据</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/devops/practise/jenkins_gitlab_maven_sb/12.jpg"></p>
<h5 id="构建触发器配置"><a href="#构建触发器配置" class="headerlink" title="构建触发器配置"></a>构建触发器配置</h5><p>主要是要配置一个 webhook，这个 webhook 会触发 jenkins 拉取 gitlab 上的代码<br><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/devops/practise/jenkins_gitlab_maven_sb/13.jpg"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/devops/practise/jenkins_gitlab_maven_sb/14.jpg"></p>
<h5 id="构建"><a href="#构建" class="headerlink" title="构建"></a>构建</h5><p>通过 maven 构建项目，写 maven 的构建命令<br><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/devops/practise/jenkins_gitlab_maven_sb/15.jpg"></p>
<h5 id="构建后操作"><a href="#构建后操作" class="headerlink" title="构建后操作"></a>构建后操作</h5><p>构建完毕后，将生成的项目 war 包放到 tomcat 容器中运行</p>
<p>这里的 Credentials 选择事先添加好的访问 Tomcat Web 应用程序管理的账号密码凭据</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/devops/practise/jenkins_gitlab_maven_sb/16.jpg"></p>
<h3 id="部署测试"><a href="#部署测试" class="headerlink" title="部署测试"></a>部署测试</h3><p>当有代码提交到 master 分支时，jenkins 就会重新构建部署该项目<br><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/devops/practise/jenkins_gitlab_maven_sb/17.jpg"></p>
<p>查看控制台输出如下，可以看到重新构建的 war 包被部署到了 Tomcat 下：</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/devops/practise/jenkins_gitlab_maven_sb/18.jpg"></p>
<p>进入 Tomcat 应用管理控制台，可看到该应用并且已经启动了<br><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/devops/practise/jenkins_gitlab_maven_sb/19.jpg"></p>
<h4 id="访问该项目"><a href="#访问该项目" class="headerlink" title="访问该项目"></a>访问该项目</h4><p><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/devops/practise/jenkins_gitlab_maven_sb/20.jpg"></p>
<p>输入账号密码登录</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/devops/practise/jenkins_gitlab_maven_sb/21.jpg"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/devops/practise/jenkins_gitlab_maven_sb/22.jpg"></p>
<p>后端项目代码已上传至 Github: <a href="https://github.com/yekongle/springboot-code-samples/tree/master/shop-manager-backend">https://github.com/yekongle/springboot-code-samples/tree/master/shop-manager-backend</a> , 希望对小伙伴们有帮助哦。</p>
<h3 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h3><ul>
<li>React 前端: <a href="https://www.bilibili.com/video/BV1eE411W7bb?p=18&amp;t=34">https://www.bilibili.com/video/BV1eE411W7bb?p=18&amp;t=34</a></li>
</ul>
]]></content>
      <categories>
        <category>DevOps</category>
      </categories>
      <tags>
        <tag>CI</tag>
        <tag>CD</tag>
      </tags>
  </entry>
  <entry>
    <title>Spring Boot2 实战系列之登录注册(三) - 邮件激活账号和密码重置</title>
    <url>/2020/07/02/springboot-ativate-account-sample/</url>
    <content><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>在前面的博文 <a href="https://blog.csdn.net/qq_23483671/article/details/106167869">Spring Boot2 实战系列之登录注册(二) - 登录实现</a> 中实现了登录功能。这次来增加一个功能，就是在注册的时候可以向注册邮箱发送一个链接，打开该链接才能激活该账户。</p>
<span id="more"></span>

<h3 id="项目架构"><a href="#项目架构" class="headerlink" title="项目架构"></a>项目架构</h3><p>项目结构图如下：<br><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/backend/spring_boot/activate_account/1.png"></p>
<p>pom 依赖如下：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">	<span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2.5.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>top.yekongle<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springboot-activate-account-sample<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">name</span>&gt;</span>springboot-activate-account-sample<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">description</span>&gt;</span>Activate account by email for Spring Boot<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">passay.version</span>&gt;</span>1.5.0<span class="tag">&lt;/<span class="name">passay.version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">guava.version</span>&gt;</span>29.0-jre<span class="tag">&lt;/<span class="name">guava.version</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-security<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-jpa<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-thymeleaf<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-mail<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.passay<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>passay<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;passay.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.google.guava<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>guava<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;guava.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.h2database<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>h2<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.junit.vintage<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit-vintage-engine<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.security<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-security-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>


<h3 id="代码编写"><a href="#代码编写" class="headerlink" title="代码编写"></a>代码编写</h3><p>application.properties</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">spring.mail.host=smtp.163.com</span><br><span class="line">spring.mail.username=your_username</span><br><span class="line">spring.mail.password=your_password</span><br><span class="line">spring.mail.default-encoding=UTF-8</span><br><span class="line">spring.mail.protocol=smtp</span><br><span class="line">spring.mail.properties.mail.smtp.auth=<span class="literal">true</span></span><br><span class="line">spring.mail.properties.mail.smtp.ssl.enable=<span class="literal">true</span></span><br><span class="line">support.email=your_username</span><br><span class="line"></span><br><span class="line"><span class="comment"># 国际化i18n配置，(包名.基础名)</span></span><br><span class="line">spring.messages.basename=i18n.messages</span><br><span class="line">spring.messages.encoding=UTF-8</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Thymeleaf 配置</span></span><br><span class="line"><span class="comment"># 禁止缓存</span></span><br><span class="line">spring.thymeleaf.cache=<span class="literal">false</span></span><br></pre></td></tr></table></figure>
<p>这里主要写出改动或新增的类，其他的则和登录实现篇基本一致, 具体请查看仓库</p>
<p>PasswordResetToken.java， 密码重置校验 Token</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> top.yekongle.activate.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Calendar;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.persistence.Entity;</span><br><span class="line"><span class="keyword">import</span> javax.persistence.FetchType;</span><br><span class="line"><span class="keyword">import</span> javax.persistence.GeneratedValue;</span><br><span class="line"><span class="keyword">import</span> javax.persistence.GenerationType;</span><br><span class="line"><span class="keyword">import</span> javax.persistence.Id;</span><br><span class="line"><span class="keyword">import</span> javax.persistence.JoinColumn;</span><br><span class="line"><span class="keyword">import</span> javax.persistence.OneToOne;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Entity</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PasswordResetToken</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">EXPIRATION</span> <span class="operator">=</span> <span class="number">60</span> * <span class="number">24</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Id</span></span><br><span class="line">    <span class="meta">@GeneratedValue(strategy = GenerationType.AUTO)</span></span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String token;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@OneToOne(targetEntity = User.class, fetch = FetchType.EAGER)</span></span><br><span class="line">    <span class="meta">@JoinColumn(nullable = false, name = &quot;user_id&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> User user;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Date expiryDate;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">PasswordResetToken</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">PasswordResetToken</span><span class="params">(<span class="keyword">final</span> String token)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>();</span><br><span class="line"></span><br><span class="line">        <span class="built_in">this</span>.token = token;</span><br><span class="line">        <span class="built_in">this</span>.expiryDate = calculateExpiryDate(EXPIRATION);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">PasswordResetToken</span><span class="params">(<span class="keyword">final</span> String token, <span class="keyword">final</span> User user)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>();</span><br><span class="line"></span><br><span class="line">        <span class="built_in">this</span>.token = token;</span><br><span class="line">        <span class="built_in">this</span>.user = user;</span><br><span class="line">        <span class="built_in">this</span>.expiryDate = calculateExpiryDate(EXPIRATION);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="keyword">public</span> Long <span class="title function_">getId</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getToken</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> token;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setToken</span><span class="params">(<span class="keyword">final</span> String token)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.token = token;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> User <span class="title function_">getUser</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> user;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setUser</span><span class="params">(<span class="keyword">final</span> User user)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.user = user;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Date <span class="title function_">getExpiryDate</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> expiryDate;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setExpiryDate</span><span class="params">(<span class="keyword">final</span> Date expiryDate)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.expiryDate = expiryDate;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Date <span class="title function_">calculateExpiryDate</span><span class="params">(<span class="keyword">final</span> <span class="type">int</span> expiryTimeInMinutes)</span> &#123;</span><br><span class="line">        <span class="keyword">final</span> <span class="type">Calendar</span> <span class="variable">cal</span> <span class="operator">=</span> Calendar.getInstance();</span><br><span class="line">        cal.setTimeInMillis(<span class="keyword">new</span> <span class="title class_">Date</span>().getTime());</span><br><span class="line">        cal.add(Calendar.MINUTE, expiryTimeInMinutes);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Date</span>(cal.getTime().getTime());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">updateToken</span><span class="params">(<span class="keyword">final</span> String token)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.token = token;</span><br><span class="line">        <span class="built_in">this</span>.expiryDate = calculateExpiryDate(EXPIRATION);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">hashCode</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">final</span> <span class="type">int</span> <span class="variable">prime</span> <span class="operator">=</span> <span class="number">31</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">        result = prime * result + ((expiryDate == <span class="literal">null</span>) ? <span class="number">0</span> : expiryDate.hashCode());</span><br><span class="line">        result = prime * result + ((token == <span class="literal">null</span>) ? <span class="number">0</span> : token.hashCode());</span><br><span class="line">        result = prime * result + ((user == <span class="literal">null</span>) ? <span class="number">0</span> : user.hashCode());</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">equals</span><span class="params">(<span class="keyword">final</span> Object obj)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">this</span> == obj) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (obj == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (getClass() != obj.getClass()) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">final</span> <span class="type">PasswordResetToken</span> <span class="variable">other</span> <span class="operator">=</span> (PasswordResetToken) obj;</span><br><span class="line">        <span class="keyword">if</span> (expiryDate == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (other.expiryDate != <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (!expiryDate.equals(other.expiryDate)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (token == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (other.token != <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (!token.equals(other.token)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (user == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (other.user != <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (!user.equals(other.user)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">final</span> <span class="type">StringBuilder</span> <span class="variable">builder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line">        builder.append(<span class="string">&quot;Token [String=&quot;</span>).append(token).append(<span class="string">&quot;]&quot;</span>).append(<span class="string">&quot;[Expires&quot;</span>).append(expiryDate).append(<span class="string">&quot;]&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> builder.toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<p>UserController.java, 注册用户，激活账号，重置密码</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> top.yekongle.activate.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> javax.validation.Valid;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationEventPublisher;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.MessageSource;</span><br><span class="line"><span class="keyword">import</span> org.springframework.core.env.Environment;</span><br><span class="line"><span class="keyword">import</span> org.springframework.mail.MailAuthenticationException;</span><br><span class="line"><span class="keyword">import</span> org.springframework.mail.SimpleMailMessage;</span><br><span class="line"><span class="keyword">import</span> org.springframework.mail.javamail.JavaMailSender;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.access.prepost.PreAuthorize;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.authentication.UsernamePasswordAuthenticationToken;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.Authentication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.context.SecurityContextHolder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.userdetails.UserDetailsService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ui.Model;</span><br><span class="line"><span class="keyword">import</span> org.springframework.validation.Errors;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.*;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.context.request.WebRequest;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.LocaleResolver;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.ModelAndView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.mvc.support.RedirectAttributes;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap;</span><br><span class="line"><span class="keyword">import</span> top.yekongle.activate.dto.PasswordDto;</span><br><span class="line"><span class="keyword">import</span> top.yekongle.activate.dto.UserDTO;</span><br><span class="line"><span class="keyword">import</span> top.yekongle.activate.entity.PasswordResetToken;</span><br><span class="line"><span class="keyword">import</span> top.yekongle.activate.entity.User;</span><br><span class="line"><span class="keyword">import</span> top.yekongle.activate.entity.VerificationToken;</span><br><span class="line"><span class="keyword">import</span> top.yekongle.activate.event.OnRegistrationCompleteEvent;</span><br><span class="line"><span class="keyword">import</span> top.yekongle.activate.exception.UserAlreadyExistException;</span><br><span class="line"><span class="keyword">import</span> top.yekongle.activate.service.UserService;</span><br><span class="line"><span class="keyword">import</span> top.yekongle.activate.util.GenericResponse;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Calendar;</span><br><span class="line"><span class="keyword">import</span> java.util.Locale;</span><br><span class="line"><span class="keyword">import</span> java.util.Optional;</span><br><span class="line"><span class="keyword">import</span> java.util.UUID;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* <span class="doctag">@Author</span>: Yekongle </span></span><br><span class="line"><span class="comment">* <span class="doctag">@Date</span>: 2020年5月5日</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserController</span> &#123;</span><br><span class="line">	</span><br><span class="line">	<span class="meta">@Autowired</span> UserService userService;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Autowired</span></span><br><span class="line">	<span class="keyword">private</span> MessageSource messages;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Autowired</span></span><br><span class="line">	LocaleResolver localeResolver;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Autowired</span></span><br><span class="line">	ApplicationEventPublisher eventPublisher;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Autowired</span></span><br><span class="line">	<span class="keyword">private</span> JavaMailSender mailSender;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Autowired</span></span><br><span class="line">	<span class="keyword">private</span> Environment env;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Autowired</span></span><br><span class="line">	<span class="keyword">private</span> UserDetailsService userDetailsService;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 注册页面</span></span><br><span class="line">	<span class="meta">@GetMapping(&quot;/registration&quot;)</span></span><br><span class="line">	<span class="keyword">public</span> String <span class="title function_">registration</span><span class="params">(Model model)</span> &#123;</span><br><span class="line">		model.addAttribute(<span class="string">&quot;formTitle&quot;</span>, <span class="string">&quot;注册&quot;</span>);</span><br><span class="line">		<span class="keyword">return</span> <span class="string">&quot;registration&quot;</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 用户注册</span></span><br><span class="line">	<span class="meta">@PostMapping(&quot;/user/registration&quot;)</span></span><br><span class="line">	<span class="meta">@ResponseBody</span></span><br><span class="line">	<span class="keyword">public</span> GenericResponse <span class="title function_">registerUserAccount</span><span class="params">(<span class="meta">@Valid</span> UserDTO userDTO, HttpServletRequest request)</span> &#123;</span><br><span class="line">		<span class="type">User</span> <span class="variable">registered</span> <span class="operator">=</span> userService.registerNewUserAccount(userDTO);</span><br><span class="line">		eventPublisher.publishEvent(<span class="keyword">new</span> <span class="title class_">OnRegistrationCompleteEvent</span>(registered, request.getLocale(), getAppUrl(request)));</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">GenericResponse</span>(<span class="string">&quot;success&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 激活用户账户</span></span><br><span class="line">	<span class="meta">@GetMapping(&quot;/registrationConfirm.html&quot;)</span></span><br><span class="line">	<span class="keyword">public</span> String <span class="title function_">confirmRegistration</span><span class="params">(HttpServletRequest request, HttpServletResponse response, RedirectAttributesModelMap model</span></span><br><span class="line"><span class="params">			, <span class="meta">@RequestParam(&quot;token&quot;)</span> String token)</span> &#123;</span><br><span class="line">		log.info(<span class="string">&quot;confirmRegistration&quot;</span>);</span><br><span class="line">		<span class="type">Locale</span> <span class="variable">locale</span> <span class="operator">=</span> localeResolver.resolveLocale(request);</span><br><span class="line">		log.info(<span class="string">&quot;token:&#123;&#125;&quot;</span> + token);</span><br><span class="line">		<span class="type">VerificationToken</span> <span class="variable">verificationToken</span> <span class="operator">=</span> userService.getVerificationToken(token);</span><br><span class="line">		<span class="keyword">if</span> (verificationToken == <span class="literal">null</span>) &#123;</span><br><span class="line">	        <span class="type">String</span> <span class="variable">message</span> <span class="operator">=</span> messages.getMessage(<span class="string">&quot;auth.message.invalidToken&quot;</span>, <span class="literal">null</span>, locale);</span><br><span class="line">	        log.info(<span class="string">&quot;message:&quot;</span> + message);</span><br><span class="line">			model.addFlashAttribute(<span class="string">&quot;errMsg&quot;</span>, message);</span><br><span class="line">			<span class="keyword">return</span> <span class="string">&quot;redirect:/badUser.html&quot;</span>;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> verificationToken.getUser();</span><br><span class="line">		<span class="type">Calendar</span> <span class="variable">cal</span> <span class="operator">=</span> Calendar.getInstance();</span><br><span class="line">		<span class="keyword">if</span> ((verificationToken.getExpiryDate().getTime() - cal.getTime().getTime()) &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">			model.addFlashAttribute(<span class="string">&quot;message&quot;</span>, messages.getMessage(<span class="string">&quot;auth.message.expired&quot;</span>, <span class="literal">null</span>, locale));</span><br><span class="line">			model.addFlashAttribute(<span class="string">&quot;expired&quot;</span>, <span class="literal">true</span>);</span><br><span class="line">			model.addFlashAttribute(<span class="string">&quot;token&quot;</span>, token);</span><br><span class="line">			<span class="keyword">return</span> <span class="string">&quot;redirect:/badUser.html&quot;</span>;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		user.setEnabled(<span class="literal">true</span>);</span><br><span class="line">		userService.saveRegisteredUser(user);</span><br><span class="line">		model.addFlashAttribute(<span class="string">&quot;message&quot;</span>, messages.getMessage(<span class="string">&quot;message.accountVerified&quot;</span>, <span class="literal">null</span>, locale));</span><br><span class="line"></span><br><span class="line">		<span class="keyword">return</span> <span class="string">&quot;redirect:/login&quot;</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 重新发送注册令牌</span></span><br><span class="line">	<span class="meta">@GetMapping(&quot;/user/resendRegistrationToken&quot;)</span></span><br><span class="line">	<span class="meta">@ResponseBody</span></span><br><span class="line">	<span class="keyword">public</span> GenericResponse <span class="title function_">resendRegistrationToken</span><span class="params">(<span class="keyword">final</span> HttpServletRequest request, <span class="keyword">final</span> RedirectAttributesModelMap model, <span class="meta">@RequestParam(&quot;token&quot;)</span> <span class="keyword">final</span> String existingToken)</span> &#123;</span><br><span class="line">		log.info(<span class="string">&quot;resendRegistrationToken&quot;</span>);</span><br><span class="line">		<span class="keyword">final</span> <span class="type">Locale</span> <span class="variable">locale</span> <span class="operator">=</span> request.getLocale();</span><br><span class="line">		<span class="keyword">final</span> <span class="type">VerificationToken</span> <span class="variable">newToken</span> <span class="operator">=</span> userService.generateNewVerificationToken(existingToken);</span><br><span class="line">		<span class="keyword">final</span> <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> userService.getUser(newToken.getToken());</span><br><span class="line">			<span class="keyword">final</span> <span class="type">SimpleMailMessage</span> <span class="variable">email</span> <span class="operator">=</span> constructResetVerificationTokenEmail(getAppUrl(request), request.getLocale(), newToken, user);</span><br><span class="line">			mailSender.send(email);</span><br><span class="line">		log.info(<span class="string">&quot;message: &#123;&#125;&quot;</span>, messages.getMessage(<span class="string">&quot;message.resendToken&quot;</span>, <span class="literal">null</span>, locale));</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">GenericResponse</span>(messages.getMessage(<span class="string">&quot;message.resendToken&quot;</span>, <span class="literal">null</span>, locale));</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 重置密码</span></span><br><span class="line">	<span class="meta">@PostMapping(&quot;/user/resetPassword&quot;)</span></span><br><span class="line">	<span class="meta">@ResponseBody</span></span><br><span class="line">	<span class="keyword">public</span> GenericResponse <span class="title function_">resetPassword</span><span class="params">(<span class="keyword">final</span> HttpServletRequest request, <span class="keyword">final</span> RedirectAttributesModelMap model</span></span><br><span class="line"><span class="params">			, <span class="meta">@RequestParam(&quot;email&quot;)</span> <span class="keyword">final</span> String userEmail)</span> &#123;</span><br><span class="line">		log.info(<span class="string">&quot;resetPassword: &#123;&#125;&quot;</span>, userEmail);</span><br><span class="line">		<span class="keyword">final</span> <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> userService.findUserByEmail(userEmail);</span><br><span class="line">		<span class="keyword">if</span> (user == <span class="literal">null</span>) &#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">GenericResponse</span>(messages.getMessage(<span class="string">&quot;message.userNotFound&quot;</span>, <span class="literal">null</span>, request.getLocale()));</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">final</span> <span class="type">String</span> <span class="variable">token</span> <span class="operator">=</span> UUID.randomUUID().toString();</span><br><span class="line">		userService.createPasswordResetTokenForUser(user, token);</span><br><span class="line">	 	<span class="keyword">final</span> <span class="type">SimpleMailMessage</span> <span class="variable">email</span> <span class="operator">=</span> constructResetTokenEmail(getAppUrl(request), request.getLocale(), token, user);</span><br><span class="line">	 	mailSender.send(email);</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">GenericResponse</span>(messages.getMessage(<span class="string">&quot;message.resetPasswordEmail&quot;</span>, <span class="literal">null</span>, request.getLocale()));</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 更换密码页面</span></span><br><span class="line">	<span class="meta">@GetMapping(&quot;/user/changePassword&quot;)</span></span><br><span class="line">	<span class="keyword">public</span> String <span class="title function_">showChangePassword</span><span class="params">(<span class="keyword">final</span> HttpServletRequest request, <span class="keyword">final</span> RedirectAttributesModelMap model, <span class="meta">@RequestParam(&quot;id&quot;)</span> <span class="keyword">final</span> <span class="type">long</span> id, <span class="meta">@RequestParam(&quot;token&quot;)</span> <span class="keyword">final</span> String token)</span> &#123;</span><br><span class="line">		log.info(<span class="string">&quot;showChangePassword, id:&#123;&#125;, token:&#123;&#125;&quot;</span>, id, token);</span><br><span class="line">		<span class="keyword">final</span> <span class="type">Locale</span> <span class="variable">locale</span> <span class="operator">=</span> request.getLocale();</span><br><span class="line">		<span class="type">String</span> <span class="variable">result</span> <span class="operator">=</span> userService.validatePasswordResetToken(token);</span><br><span class="line">		log.info(<span class="string">&quot;result:&#123;&#125;&quot;</span>, result);</span><br><span class="line">		<span class="keyword">if</span>(result != <span class="literal">null</span>) &#123;</span><br><span class="line">			<span class="type">String</span> <span class="variable">message</span> <span class="operator">=</span> messages.getMessage(<span class="string">&quot;auth.message.&quot;</span> + result, <span class="literal">null</span>, locale);</span><br><span class="line">			log.info(<span class="string">&quot;message:&#123;&#125;&quot;</span>, message);</span><br><span class="line">			model.addFlashAttribute(<span class="string">&quot;errMsg&quot;</span>, message);</span><br><span class="line">			<span class="keyword">return</span> <span class="string">&quot;redirect:/login.html?&quot;</span>;</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			model.addFlashAttribute(<span class="string">&quot;token&quot;</span>, token);</span><br><span class="line">			<span class="keyword">return</span> <span class="string">&quot;redirect:/updatePassword.html&quot;</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@PostMapping(&quot;/user/savePassword&quot;)</span></span><br><span class="line">	<span class="meta">@ResponseBody</span></span><br><span class="line">	<span class="keyword">public</span> GenericResponse <span class="title function_">savePassword</span><span class="params">(<span class="keyword">final</span> Locale locale, <span class="meta">@Valid</span> PasswordDto passwordDto)</span> &#123;</span><br><span class="line">		log.info(<span class="string">&quot;savePassword&quot;</span>);</span><br><span class="line">		<span class="type">String</span> <span class="variable">result</span> <span class="operator">=</span> userService.validatePasswordResetToken(passwordDto.getToken());</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span>(result != <span class="literal">null</span>) &#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">GenericResponse</span>(messages.getMessage(</span><br><span class="line">					<span class="string">&quot;auth.message.&quot;</span> + result, <span class="literal">null</span>, locale));</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		Optional&lt;User&gt; user = userService.getUserByPasswordResetToken(passwordDto.getToken());</span><br><span class="line">		<span class="keyword">if</span>(user.isPresent()) &#123;</span><br><span class="line">			userService.changeUserPassword(user.get(), passwordDto.getNewPassword());</span><br><span class="line">			<span class="type">String</span> <span class="variable">message</span> <span class="operator">=</span> messages.getMessage(</span><br><span class="line">					<span class="string">&quot;message.resetPasswordSuc&quot;</span>, <span class="literal">null</span>, locale);</span><br><span class="line">			log.info(<span class="string">&quot;message:&#123;&#125;&quot;</span>, message);</span><br><span class="line">			<span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">GenericResponse</span>(message);</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">GenericResponse</span>(messages.getMessage(</span><br><span class="line">					<span class="string">&quot;auth.message.invalid&quot;</span>, <span class="literal">null</span>, locale));</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> String <span class="title function_">getAppUrl</span><span class="params">(HttpServletRequest request)</span> &#123;</span><br><span class="line">		<span class="type">String</span> <span class="variable">appUrl</span> <span class="operator">=</span> <span class="string">&quot;http://&quot;</span> + request.getServerName() + <span class="string">&quot;:&quot;</span> + request.getServerPort() + request.getContextPath();</span><br><span class="line">		<span class="keyword">return</span> appUrl;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">final</span> SimpleMailMessage <span class="title function_">constructResetVerificationTokenEmail</span><span class="params">(<span class="keyword">final</span> String contextPath, <span class="keyword">final</span> Locale locale</span></span><br><span class="line"><span class="params">			, <span class="keyword">final</span> VerificationToken newToken, <span class="keyword">final</span> User user)</span> &#123;</span><br><span class="line">		<span class="keyword">final</span> <span class="type">String</span> <span class="variable">confirmationUrl</span> <span class="operator">=</span> contextPath + <span class="string">&quot;/registrationConfirm.html?token=&quot;</span> + newToken.getToken();</span><br><span class="line">		log.info(<span class="string">&quot;Url: &#123;&#125;&quot;</span>, confirmationUrl);</span><br><span class="line">		<span class="keyword">final</span> <span class="type">String</span> <span class="variable">message</span> <span class="operator">=</span> messages.getMessage(<span class="string">&quot;message.resendToken&quot;</span>, <span class="literal">null</span>, locale);</span><br><span class="line">		<span class="keyword">final</span> <span class="type">SimpleMailMessage</span> <span class="variable">email</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SimpleMailMessage</span>();</span><br><span class="line">		email.setSubject(<span class="string">&quot;Resend Registration Token&quot;</span>);</span><br><span class="line">		email.setText(message + <span class="string">&quot; \r\n&quot;</span> + confirmationUrl);</span><br><span class="line">		email.setTo(user.getEmail());</span><br><span class="line">		email.setFrom(env.getProperty(<span class="string">&quot;support.email&quot;</span>));</span><br><span class="line">		log.info(<span class="string">&quot;support.email:&#123;&#125;&quot;</span>, env.getProperty(<span class="string">&quot;support.email&quot;</span>));</span><br><span class="line">		<span class="keyword">return</span> email;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">final</span> SimpleMailMessage <span class="title function_">constructResetTokenEmail</span><span class="params">(<span class="keyword">final</span> String contextPath, <span class="keyword">final</span> Locale locale, <span class="keyword">final</span> String token, <span class="keyword">final</span> User user)</span> &#123;</span><br><span class="line">		<span class="keyword">final</span> <span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> contextPath + <span class="string">&quot;/user/changePassword?id=&quot;</span> + user.getId() + <span class="string">&quot;&amp;token=&quot;</span> + token;</span><br><span class="line">		log.info(<span class="string">&quot;url:&#123;&#125;&quot;</span>, url);</span><br><span class="line">		<span class="keyword">final</span> <span class="type">String</span> <span class="variable">message</span> <span class="operator">=</span> messages.getMessage(<span class="string">&quot;message.resetPassword&quot;</span>, <span class="literal">null</span>, locale);</span><br><span class="line">		<span class="keyword">final</span> <span class="type">SimpleMailMessage</span> <span class="variable">email</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SimpleMailMessage</span>();</span><br><span class="line">		email.setTo(user.getEmail());</span><br><span class="line">		email.setSubject(<span class="string">&quot;Reset Password&quot;</span>);</span><br><span class="line">		email.setText(message + <span class="string">&quot; \r\n&quot;</span> + url);</span><br><span class="line">		email.setFrom(env.getProperty(<span class="string">&quot;support.email&quot;</span>));</span><br><span class="line">		<span class="keyword">return</span> email;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<p>UserServiceImpl.java， 用户账号操作业务类</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> top.yekongle.activate.service.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.Calendar;</span><br><span class="line"><span class="keyword">import</span> java.util.Optional;</span><br><span class="line"><span class="keyword">import</span> java.util.UUID;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.transaction.Transactional;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.crypto.password.PasswordEncoder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> top.yekongle.activate.dto.UserDTO;</span><br><span class="line"><span class="keyword">import</span> top.yekongle.activate.entity.PasswordResetToken;</span><br><span class="line"><span class="keyword">import</span> top.yekongle.activate.entity.User;</span><br><span class="line"><span class="keyword">import</span> top.yekongle.activate.entity.UserAuthority;</span><br><span class="line"><span class="keyword">import</span> top.yekongle.activate.entity.VerificationToken;</span><br><span class="line"><span class="keyword">import</span> top.yekongle.activate.exception.UserAlreadyExistException;</span><br><span class="line"><span class="keyword">import</span> top.yekongle.activate.repository.PasswordResetTokenRepository;</span><br><span class="line"><span class="keyword">import</span> top.yekongle.activate.repository.UserAuthorityRepository;</span><br><span class="line"><span class="keyword">import</span> top.yekongle.activate.repository.UserRepository;</span><br><span class="line"><span class="keyword">import</span> top.yekongle.activate.repository.VerificationTokenRepository;</span><br><span class="line"><span class="keyword">import</span> top.yekongle.activate.service.UserService;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>:</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: Yekongle</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span>: 2020年5月5日</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">UserService</span> &#123;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Autowired</span></span><br><span class="line">	<span class="keyword">private</span> UserRepository userRepository;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Autowired</span></span><br><span class="line">	<span class="keyword">private</span> UserAuthorityRepository userAuthorityRepository;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Autowired</span></span><br><span class="line">	<span class="keyword">private</span> VerificationTokenRepository tokenRepository;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Autowired</span></span><br><span class="line">	<span class="keyword">private</span> PasswordEncoder passwordEncoder;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Autowired</span></span><br><span class="line">	<span class="keyword">private</span> PasswordResetTokenRepository passwordTokenRepository;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="keyword">public</span> User <span class="title function_">registerNewUserAccount</span><span class="params">(UserDTO userDTO)</span> <span class="keyword">throws</span> UserAlreadyExistException &#123;</span><br><span class="line">		<span class="keyword">if</span> (emailExists(userDTO.getEmail())) &#123;</span><br><span class="line">			<span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">UserAlreadyExistException</span>(<span class="string">&quot;该邮箱已被注册:&quot;</span> + userDTO.getEmail());</span><br><span class="line">		&#125;</span><br><span class="line">		log.info(<span class="string">&quot;UserDTO:&quot;</span> + userDTO.toString());</span><br><span class="line">		<span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">		user.setEmail(userDTO.getEmail());</span><br><span class="line">		user.setPassword(passwordEncoder.encode(userDTO.getPassword()));</span><br><span class="line">		userRepository.save(user);</span><br><span class="line"></span><br><span class="line">		<span class="type">UserAuthority</span> <span class="variable">userAuthority</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UserAuthority</span>();</span><br><span class="line">		userAuthority.setUsername(userDTO.getEmail());</span><br><span class="line">		userAuthority.setRole(<span class="string">&quot;ROLE_USER&quot;</span>);</span><br><span class="line">		userAuthorityRepository.save(userAuthority);</span><br><span class="line"></span><br><span class="line">		<span class="keyword">return</span> user;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="keyword">public</span> VerificationToken <span class="title function_">getVerificationToken</span><span class="params">(String verificationToken)</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> tokenRepository.findByToken(verificationToken);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="keyword">public</span> VerificationToken <span class="title function_">generateNewVerificationToken</span><span class="params">(String token)</span> &#123;</span><br><span class="line">		<span class="type">VerificationToken</span> <span class="variable">vToken</span> <span class="operator">=</span> tokenRepository.findByToken(token);</span><br><span class="line">		vToken.updateToken(UUID.randomUUID()</span><br><span class="line">				.toString());</span><br><span class="line">		vToken = tokenRepository.save(vToken);</span><br><span class="line">		<span class="keyword">return</span> vToken;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">saveRegisteredUser</span><span class="params">(User user)</span> &#123;</span><br><span class="line">		userRepository.save(user);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">createVerificationToken</span><span class="params">(User user, String token)</span> &#123;</span><br><span class="line">		<span class="type">VerificationToken</span> <span class="variable">myToken</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">VerificationToken</span>(token, user);</span><br><span class="line">		tokenRepository.save(myToken);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="keyword">public</span> User <span class="title function_">getUser</span><span class="params">(String verificationToken)</span> &#123;</span><br><span class="line">		<span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> tokenRepository.findByToken(verificationToken).getUser();</span><br><span class="line">		<span class="keyword">return</span> user;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="keyword">public</span> PasswordResetToken <span class="title function_">getPasswordResetToken</span><span class="params">(String token)</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> passwordTokenRepository.findByToken(token);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="keyword">public</span> User <span class="title function_">findUserByEmail</span><span class="params">(String email)</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> userRepository.findByEmail(email);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">createPasswordResetTokenForUser</span><span class="params">(User user, String token)</span> &#123;</span><br><span class="line">		<span class="keyword">final</span> <span class="type">PasswordResetToken</span> <span class="variable">myToken</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PasswordResetToken</span>(token, user);</span><br><span class="line">		passwordTokenRepository.save(myToken);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> String <span class="title function_">validatePasswordResetToken</span><span class="params">(String token)</span> &#123;</span><br><span class="line">		<span class="keyword">final</span> <span class="type">PasswordResetToken</span> <span class="variable">passToken</span> <span class="operator">=</span> passwordTokenRepository.findByToken(token);</span><br><span class="line"></span><br><span class="line">		<span class="keyword">return</span> !isTokenFound(passToken) ? <span class="string">&quot;invalidToken&quot;</span></span><br><span class="line">				: isTokenExpired(passToken) ? <span class="string">&quot;expired&quot;</span></span><br><span class="line">				: <span class="literal">null</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">changeUserPassword</span><span class="params">(User user, String password)</span> &#123;</span><br><span class="line">		user.setPassword(passwordEncoder.encode(password));</span><br><span class="line">		userRepository.save(user);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="keyword">public</span> Optional&lt;User&gt; <span class="title function_">getUserByPasswordResetToken</span><span class="params">(String token)</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> Optional.ofNullable(passwordTokenRepository.findByToken(token).getUser());</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> <span class="type">boolean</span> <span class="title function_">emailExists</span><span class="params">(String email)</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> userRepository.findByEmail(email) != <span class="literal">null</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> <span class="type">boolean</span> <span class="title function_">isTokenFound</span><span class="params">(PasswordResetToken passToken)</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> passToken != <span class="literal">null</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> <span class="type">boolean</span> <span class="title function_">isTokenExpired</span><span class="params">(PasswordResetToken passToken)</span> &#123;</span><br><span class="line">		<span class="keyword">final</span> <span class="type">Calendar</span> <span class="variable">cal</span> <span class="operator">=</span> Calendar.getInstance();</span><br><span class="line">		<span class="keyword">return</span> passToken.getExpiryDate().before(cal.getTime());</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>OnRegistrationCompleteEvent.java, 注册监听事件</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> top.yekongle.activate.event;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Locale;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.*;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationEvent;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> top.yekongle.activate.entity.User;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment">* <span class="doctag">@Description</span>: </span></span><br><span class="line"><span class="comment">* <span class="doctag">@Author</span>: Yekongle </span></span><br><span class="line"><span class="comment">* <span class="doctag">@Date</span>: 2020年6月6日</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">@Getter</span></span><br><span class="line"><span class="meta">@Setter</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OnRegistrationCompleteEvent</span> <span class="keyword">extends</span> <span class="title class_">ApplicationEvent</span> &#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">long</span> <span class="variable">serialVersionUID</span> <span class="operator">=</span> <span class="number">1L</span>;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">private</span> String appUrl;</span><br><span class="line">	<span class="keyword">private</span> Locale locale;</span><br><span class="line">	<span class="keyword">private</span> User user;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="title function_">OnRegistrationCompleteEvent</span><span class="params">(User user, Locale locale, String appUrl)</span> &#123;</span><br><span class="line">		<span class="built_in">super</span>(user);</span><br><span class="line"> 		<span class="built_in">this</span>.user = user;</span><br><span class="line"> 		<span class="built_in">this</span>.locale = locale;</span><br><span class="line">		<span class="built_in">this</span>.appUrl = appUrl;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<p>RegistrationListener.java, 注册事件监听, 发送激活邮件到用户邮箱</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> top.yekongle.activate.listener;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.UUID;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Value;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationListener;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.MessageSource;</span><br><span class="line"><span class="keyword">import</span> org.springframework.mail.SimpleMailMessage;</span><br><span class="line"><span class="keyword">import</span> org.springframework.mail.javamail.JavaMailSender;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> top.yekongle.activate.entity.User;</span><br><span class="line"><span class="keyword">import</span> top.yekongle.activate.event.OnRegistrationCompleteEvent;</span><br><span class="line"><span class="keyword">import</span> top.yekongle.activate.service.UserService;;</span><br><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment">* <span class="doctag">@Description</span>: </span></span><br><span class="line"><span class="comment">* <span class="doctag">@Author</span>: Yekongle </span></span><br><span class="line"><span class="comment">* <span class="doctag">@Date</span>: 2020年6月6日</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RegistrationListener</span> <span class="keyword">implements</span> <span class="title class_">ApplicationListener</span>&lt;OnRegistrationCompleteEvent&gt; &#123;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserService service;</span><br><span class="line">  </span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> MessageSource messages;</span><br><span class="line">  </span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> JavaMailSender mailSender;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;spring.mail.username&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String emailFrom;</span><br><span class="line">	</span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onApplicationEvent</span><span class="params">(OnRegistrationCompleteEvent event)</span> &#123;</span><br><span class="line">		 <span class="built_in">this</span>.confirmRegistration(event);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	 <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">confirmRegistration</span><span class="params">(OnRegistrationCompleteEvent event)</span> &#123;</span><br><span class="line">	        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> event.getUser();</span><br><span class="line">	        <span class="type">String</span> <span class="variable">token</span> <span class="operator">=</span> UUID.randomUUID().toString();</span><br><span class="line">	        service.createVerificationToken(user, token);</span><br><span class="line">	         </span><br><span class="line">	        <span class="type">String</span> <span class="variable">recipientAddress</span> <span class="operator">=</span> user.getEmail();</span><br><span class="line">	        <span class="type">String</span> <span class="variable">subject</span> <span class="operator">=</span> <span class="string">&quot;Registration Confirmation&quot;</span>;</span><br><span class="line">	        <span class="type">String</span> <span class="variable">confirmationUrl</span> <span class="operator">=</span> event.getAppUrl() + <span class="string">&quot;/registrationConfirm.html?token=&quot;</span> + token;</span><br><span class="line">	        log.info(<span class="string">&quot;confirmationUrl: &#123;&#125;&quot;</span> + confirmationUrl);</span><br><span class="line">	        <span class="type">String</span> <span class="variable">message</span> <span class="operator">=</span> messages.getMessage(<span class="string">&quot;message.regSucc&quot;</span>, <span class="literal">null</span>, event.getLocale());</span><br><span class="line">	        log.info(<span class="string">&quot;recipientAddress: &#123;&#125;&quot;</span>, user.getEmail());</span><br><span class="line">	        <span class="type">SimpleMailMessage</span> <span class="variable">email</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SimpleMailMessage</span>();</span><br><span class="line">	        email.setFrom(emailFrom);</span><br><span class="line">	        email.setTo(recipientAddress);</span><br><span class="line">	        email.setSubject(subject);</span><br><span class="line">	        email.setText(message + <span class="string">&quot;\r\n&quot;</span> + confirmationUrl);</span><br><span class="line">	        mailSender.send(email);</span><br><span class="line">	    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="运行演示"><a href="#运行演示" class="headerlink" title="运行演示"></a>运行演示</h3><p>启动项目</p>
<ol>
<li><p>访问 <a href="http://localhost:8080，会自动跳到登录页面，先点击跳到注册页面">http://localhost:8080，会自动跳到登录页面，先点击跳到注册页面</a><br><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/backend/spring_boot/activate_account/2.png"></p>
</li>
<li><p>点击注册，将发送激活邮件<br><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/backend/spring_boot/activate_account/3.png"></p>
</li>
<li><p>打开注册邮箱查看激活邮件<br><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/backend/spring_boot/activate_account/4.png"></p>
</li>
<li><p>在浏览器打开该链接，激活该账户<br><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/backend/spring_boot/activate_account/5.png"></p>
</li>
<li><p>登录该账户<br><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/backend/spring_boot/activate_account/6.png"></p>
</li>
<li><p>如果需要重置密码，则点击重置密码<br><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/backend/spring_boot/activate_account/7.png"></p>
</li>
<li><p>邮箱中查看重置密码链接<br><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/backend/spring_boot/activate_account/8.png"></p>
</li>
<li><p>在浏览器中打开重置密码链接<br><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/backend/spring_boot/activate_account/9.png"></p>
</li>
<li><p>点击更改密码<br><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/backend/spring_boot/activate_account/10.png"></p>
</li>
</ol>
<p>项目已上传至 Github: <a href="https://github.com/yekongle/springboot-code-samples/tree/master/springboot-activate-account-sample">https://github.com/yekongle/springboot-code-samples/tree/master/springboot-activate-account-sample</a> , 希望对小伙伴们有帮助哦。</p>
<p>参考链接：</p>
<ul>
<li><a href="https://v4.bootcss.com/docs/getting-started/introduction/">https://v4.bootcss.com/docs/getting-started/introduction/</a></li>
<li><a href="https://github.com/Baeldung/spring-security-registration">https://github.com/Baeldung/spring-security-registration</a></li>
</ul>
]]></content>
      <categories>
        <category>Spring Boot</category>
      </categories>
      <tags>
        <tag>SpringBoot</tag>
        <tag>Email</tag>
      </tags>
  </entry>
  <entry>
    <title>Spring Boot2 实战系列之文件上传下载</title>
    <url>/2020/04/29/springboot-fileupload-sample/</url>
    <content><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>文件上传和下载是很多网站都会有的功能，这次我们来实践下用 Spring Boot 实现这个功能。为了方便演示，没有实现将文件存储到数据库中，只是用到了一个 List 将上传文件的相关信息保存在内存中，文件本身放在本地磁盘。</p>
<span id="more"></span>
<h3 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h3><p>项目结构图如下：<br><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/backend/spring_boot/file_upload/1.png"></p>
<p>pom 依赖如下：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">	<span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2.5.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>top.yekongle<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springboot-fileupload-sample<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">name</span>&gt;</span>springboot-fileupload-sample<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">description</span>&gt;</span>file upload sample for Spring Boot<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-thymeleaf<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.junit.vintage<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit-vintage-engine<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="代码编写"><a href="#代码编写" class="headerlink" title="代码编写"></a>代码编写</h3><p>application.properties, 全局配置，文件上传配置根据自身需求进行调整。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Thymeleaf 配置</span></span><br><span class="line"><span class="comment"># 模板文件存放路径</span></span><br><span class="line">spring.thymeleaf.prefix=classpath:/templates/</span><br><span class="line"><span class="comment"># 文件后缀</span></span><br><span class="line">spring.thymeleaf.suffix=.html</span><br><span class="line"><span class="comment"># 使用 html5</span></span><br><span class="line">spring.thymeleaf.mode=HTML5</span><br><span class="line"><span class="comment"># 编码</span></span><br><span class="line">spring.thymeleaf.encoding=UTF-8</span><br><span class="line"><span class="comment"># 是否启动缓存</span></span><br><span class="line">spring.thymeleaf.cache=<span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 文件上传配置</span></span><br><span class="line"><span class="comment"># 是否支持多文件上传</span></span><br><span class="line">spring.servlet.multipart.enabled=<span class="literal">true</span></span><br><span class="line"><span class="comment"># 上传文件目录</span></span><br><span class="line">spring.servlet.multipart.location=F:/upload</span><br><span class="line"><span class="comment"># 最大上传文件大小，默认1MB</span></span><br><span class="line">spring.servlet.multipart.max-file-size=5MB</span><br><span class="line"><span class="comment"># 最大请求大小, 默认10M</span></span><br><span class="line">spring.servlet.multipart.max-request-size=50MB</span><br><span class="line"><span class="comment">#文件大小阈值，当大于这个阈值时将写入到磁盘，否则存在内存中（默认值0 一般情况下不用特意修改）</span></span><br><span class="line">spring.servlet.multipart.file-size-threshold=0</span><br></pre></td></tr></table></figure>

<p>FileInfo.java，实体类，代表文件信息</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> top.yekongle.fileupload.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.AllArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment">* <span class="doctag">@Author</span>: Yekongle </span></span><br><span class="line"><span class="comment">* <span class="doctag">@Date</span>: 2020年4月28日</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FileInfo</span> &#123;</span><br><span class="line">	<span class="keyword">private</span> String name;</span><br><span class="line">	<span class="keyword">private</span> String contentType;</span><br><span class="line">	<span class="keyword">private</span> <span class="type">long</span> size;</span><br><span class="line">    <span class="keyword">private</span> String uploadDate;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>UploadController.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> top.yekongle.fileupload.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Value;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ui.Model;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PostMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestParam;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ResponseBody;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.multipart.MultipartFile;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.mvc.support.RedirectAttributes;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> top.yekongle.fileupload.entity.FileInfo;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 文件上传</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: Yekongle</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UploadController</span> &#123;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Value(&quot;$&#123;spring.servlet.multipart.location&#125;&quot;)</span></span><br><span class="line">	<span class="keyword">private</span> String path;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">DEFAULT_MAX_FILE_SIZE</span> <span class="operator">=</span> <span class="number">5</span> * <span class="number">1000</span> * <span class="number">1000</span>;</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">DEFAULT_REQUEST_MAX_SIZE</span> <span class="operator">=</span> <span class="number">50</span> * <span class="number">1000</span> * <span class="number">1000</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> <span class="type">SimpleDateFormat</span> <span class="variable">sf</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(<span class="string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>);</span><br><span class="line">	<span class="keyword">private</span> List&lt;FileInfo&gt; fileInfoList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;FileInfo&gt;();</span><br><span class="line"></span><br><span class="line">	<span class="meta">@GetMapping(&quot;/singleFileUpload&quot;)</span></span><br><span class="line">	<span class="keyword">public</span> String <span class="title function_">getSingleFileUploadPage</span><span class="params">(Model model)</span> &#123;</span><br><span class="line">		model.addAttribute(<span class="string">&quot;files&quot;</span>, fileInfoList);</span><br><span class="line">		<span class="keyword">return</span> <span class="string">&quot;single_file_upload&quot;</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@GetMapping(&quot;/multiFileUpload&quot;)</span></span><br><span class="line">	<span class="keyword">public</span> String <span class="title function_">getMultiFileUploadPage</span><span class="params">(Model model)</span> &#123;</span><br><span class="line">		model.addAttribute(<span class="string">&quot;files&quot;</span>, fileInfoList);</span><br><span class="line">		<span class="keyword">return</span> <span class="string">&quot;multi_file_upload&quot;</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@PostMapping(&quot;/singleFileUpload&quot;)</span></span><br><span class="line">	<span class="keyword">public</span> String <span class="title function_">singleFileUpload</span><span class="params">(<span class="meta">@RequestParam(&quot;file&quot;)</span> MultipartFile file, RedirectAttributes redirectAttributes)</span></span><br><span class="line">			<span class="keyword">throws</span> IOException &#123;</span><br><span class="line">		<span class="type">File</span> <span class="variable">filePath</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(path);</span><br><span class="line">		log.info(<span class="string">&quot;文件保存的路径为： &#123;&#125;&quot;</span>, filePath.getAbsolutePath());</span><br><span class="line">		<span class="keyword">if</span> (!filePath.exists() &amp;&amp; !filePath.isDirectory()) &#123;</span><br><span class="line">			<span class="comment">// 该文件目录不存在则创建</span></span><br><span class="line">			filePath.mkdir();</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="comment">// 判断文件是否为空</span></span><br><span class="line">		<span class="keyword">if</span> (file.isEmpty()) &#123;</span><br><span class="line">			redirectAttributes.addFlashAttribute(<span class="string">&quot;message&quot;</span>, <span class="string">&quot;文件为空!&quot;</span>);</span><br><span class="line">			<span class="keyword">return</span> <span class="string">&quot;redirect:/singleFileUpload&quot;</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="comment">// 判断文件是否为空文件</span></span><br><span class="line">		<span class="keyword">if</span> (file.getSize() &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">			redirectAttributes.addFlashAttribute(<span class="string">&quot;message&quot;</span>, <span class="string">&quot;文件大小为空，上传失败!&quot;</span>);</span><br><span class="line">			<span class="keyword">return</span> <span class="string">&quot;redirect:/singleFileUpload&quot;</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="comment">// 判断文件大小不能大于5MB</span></span><br><span class="line">		<span class="keyword">if</span> (file.getSize() &gt; DEFAULT_MAX_FILE_SIZE) &#123;</span><br><span class="line">			redirectAttributes.addFlashAttribute(<span class="string">&quot;message&quot;</span>, <span class="string">&quot;上传的文件不能大于5M!&quot;</span>);</span><br><span class="line">			<span class="keyword">return</span> <span class="string">&quot;redirect:/singleFileUpload&quot;</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="comment">// 获取文件名</span></span><br><span class="line">		<span class="type">String</span> <span class="variable">fileName</span> <span class="operator">=</span> file.getOriginalFilename();</span><br><span class="line"></span><br><span class="line">		log.info(<span class="string">&quot;上传的文件名为：&#123;&#125;&quot;</span>, fileName);</span><br><span class="line">		log.info(<span class="string">&quot;上传的文件大小为：&#123;&#125;&quot;</span>, file.getSize());</span><br><span class="line">		log.info(<span class="string">&quot;上传的文件类型为：&#123;&#125;&quot;</span>, file.getContentType());</span><br><span class="line">		<span class="comment">// 在指定目录下创建该文件</span></span><br><span class="line">		<span class="type">File</span> <span class="variable">newfile</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(path, fileName);</span><br><span class="line">		<span class="keyword">if</span> (newfile.exists()) &#123;</span><br><span class="line">			redirectAttributes.addFlashAttribute(<span class="string">&quot;message&quot;</span>, <span class="string">&quot;该文件已经存在!&quot;</span>);</span><br><span class="line">			<span class="keyword">return</span> <span class="string">&quot;redirect:/singleFileUpload&quot;</span>;</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			<span class="type">FileInfo</span> <span class="variable">fileInfo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileInfo</span>(fileName, file.getContentType(), file.getSize(), sf.format(<span class="keyword">new</span> <span class="title class_">Date</span>()));</span><br><span class="line">			fileInfoList.add(fileInfo);</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="comment">// 将文件保存到该目录</span></span><br><span class="line">		file.transferTo(newfile);</span><br><span class="line">		<span class="keyword">return</span> <span class="string">&quot;redirect:/singleFileUpload&quot;</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@PostMapping(&quot;/multiFileUpload&quot;)</span></span><br><span class="line">	<span class="keyword">public</span> String <span class="title function_">multiFileUpload</span><span class="params">(<span class="meta">@RequestParam(&quot;files&quot;)</span> MultipartFile[] files, RedirectAttributes redirectAttributes)</span></span><br><span class="line">			<span class="keyword">throws</span> IOException &#123;</span><br><span class="line">		<span class="keyword">if</span> (<span class="literal">null</span> == files) &#123;</span><br><span class="line">			redirectAttributes.addFlashAttribute(<span class="string">&quot;message&quot;</span>, <span class="string">&quot;参数为空!&quot;</span>);</span><br><span class="line">			<span class="keyword">return</span> <span class="string">&quot;redirect:/multiFileUpload&quot;</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="type">File</span> <span class="variable">filePath</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(path);</span><br><span class="line">		log.info(<span class="string">&quot;文件保存的路径为： &#123;&#125;&quot;</span>, filePath.getAbsolutePath());</span><br><span class="line">		<span class="keyword">if</span> (!filePath.exists() &amp;&amp; !filePath.isDirectory()) &#123;</span><br><span class="line">			<span class="comment">// 该文件目录不存在则创建</span></span><br><span class="line">			filePath.mkdir();</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">for</span> (MultipartFile uploadFile : files) &#123;</span><br><span class="line">			<span class="keyword">if</span> (uploadFile.isEmpty()) &#123;</span><br><span class="line">				redirectAttributes.addFlashAttribute(<span class="string">&quot;message&quot;</span>, <span class="string">&quot;文件为空!&quot;</span>);</span><br><span class="line">				<span class="keyword">return</span> <span class="string">&quot;redirect:/multiFileUpload&quot;</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="comment">// 判断文件是否为空文件</span></span><br><span class="line">			<span class="keyword">if</span> (uploadFile.getSize() &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">				redirectAttributes.addFlashAttribute(<span class="string">&quot;message&quot;</span>, <span class="string">&quot;文件大小为空，上传失败!&quot;</span>);</span><br><span class="line">				<span class="keyword">return</span> <span class="string">&quot;redirect:/multiFileUpload&quot;</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="comment">// 判断文件大小不能大于50MB</span></span><br><span class="line">			<span class="keyword">if</span> (uploadFile.getSize() &gt; DEFAULT_REQUEST_MAX_SIZE) &#123;</span><br><span class="line">				redirectAttributes.addFlashAttribute(<span class="string">&quot;message&quot;</span>, <span class="string">&quot;上传的文件不能大于5M!&quot;</span>);</span><br><span class="line">				<span class="keyword">return</span> <span class="string">&quot;redirect:/multiFileUpload&quot;</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="comment">// 获取文件名</span></span><br><span class="line">			<span class="type">String</span> <span class="variable">fileName</span> <span class="operator">=</span> uploadFile.getOriginalFilename();</span><br><span class="line"></span><br><span class="line">			log.info(<span class="string">&quot;上传的文件名为：&#123;&#125;&quot;</span>, fileName);</span><br><span class="line">			log.info(<span class="string">&quot;上传的文件大小为：&#123;&#125;&quot;</span>, uploadFile.getSize());</span><br><span class="line">			log.info(<span class="string">&quot;上传的文件类型为：&#123;&#125;&quot;</span>, uploadFile.getContentType());</span><br><span class="line">			<span class="comment">// 在指定目录下创建该文件</span></span><br><span class="line">			<span class="type">File</span> <span class="variable">newfile</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(path, fileName);</span><br><span class="line">			<span class="keyword">if</span> (!newfile.exists()) &#123;</span><br><span class="line">				<span class="type">FileInfo</span> <span class="variable">fileInfo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileInfo</span>(fileName, uploadFile.getContentType(), uploadFile.getSize(),</span><br><span class="line">						sf.format(<span class="keyword">new</span> <span class="title class_">Date</span>()));</span><br><span class="line">				fileInfoList.add(fileInfo);</span><br><span class="line">			&#125;</span><br><span class="line"></span><br><span class="line">			<span class="comment">// 将文件保存到该目录</span></span><br><span class="line">			uploadFile.transferTo(newfile);</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">return</span> <span class="string">&quot;redirect:/multiFileUpload&quot;</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> top.yekongle.fileupload.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.BufferedInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.UnsupportedEncodingException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletOutputStream;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ui.Model;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PostMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ResponseBody;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 文件下载</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: Yekongle</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DownloadController</span> &#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">FILE_STORE_PATH</span> <span class="operator">=</span> <span class="string">&quot;F:/upload&quot;</span>;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@GetMapping(&quot;/downloadFile&quot;)</span></span><br><span class="line">	<span class="keyword">public</span> String <span class="title function_">getUploadPage</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="string">&quot;file_download&quot;</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 文件下载</span></span><br><span class="line"><span class="comment">	 *</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@throws</span> UnsupportedEncodingException</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="meta">@PostMapping(&quot;/downloadFile&quot;)</span></span><br><span class="line">	<span class="meta">@ResponseBody</span></span><br><span class="line">	<span class="keyword">public</span> String <span class="title function_">downLoadFile</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Model model)</span></span><br><span class="line">			<span class="keyword">throws</span> UnsupportedEncodingException &#123;</span><br><span class="line">		log.info(<span class="string">&quot;要下载的文件：&#123;&#125;&quot;</span>, request.getParameter(<span class="string">&quot;fileName&quot;</span>));</span><br><span class="line">		<span class="type">String</span> <span class="variable">fileName</span> <span class="operator">=</span> request.getParameter(<span class="string">&quot;fileName&quot;</span>);</span><br><span class="line">		log.info(<span class="string">&quot;File name:&#123;&#125;&quot;</span>, fileName);</span><br><span class="line"></span><br><span class="line">		<span class="type">File</span> <span class="variable">file</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(FILE_STORE_PATH, fileName);</span><br><span class="line">		log.info(<span class="string">&quot;File path:&#123;&#125;&quot;</span>, file.getAbsolutePath());</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> (file.exists()) &#123;</span><br><span class="line">			<span class="comment">// 配置文件下载</span></span><br><span class="line">			response.setHeader(<span class="string">&quot;content-type&quot;</span>, <span class="string">&quot;application/octet-stream&quot;</span>);</span><br><span class="line">			response.setContentType(<span class="string">&quot;application/octet-stream&quot;</span>);</span><br><span class="line">			<span class="comment">// 下载文件能正常显示中文</span></span><br><span class="line">			response.setHeader(<span class="string">&quot;Content-Disposition&quot;</span>,</span><br><span class="line">					<span class="string">&quot;attachment;filename=&quot;</span> + <span class="keyword">new</span> <span class="title class_">String</span>(fileName.getBytes(), <span class="string">&quot;utf-8&quot;</span>));</span><br><span class="line">			<span class="comment">// 文件内容长度</span></span><br><span class="line">			response.setHeader(<span class="string">&quot;Content-Length&quot;</span>, <span class="string">&quot;&quot;</span> + file.length());</span><br><span class="line">			<span class="comment">// 读取文件</span></span><br><span class="line">			<span class="type">BufferedInputStream</span> <span class="variable">bi</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">			<span class="keyword">try</span> &#123;</span><br><span class="line">				<span class="type">byte</span>[] buffer = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span>];</span><br><span class="line">				bi = <span class="keyword">new</span> <span class="title class_">BufferedInputStream</span>(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(file));</span><br><span class="line">				<span class="type">ServletOutputStream</span> <span class="variable">outputStream</span> <span class="operator">=</span> response.getOutputStream();</span><br><span class="line">				<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> -<span class="number">1</span>;</span><br><span class="line">				<span class="keyword">while</span> (-<span class="number">1</span> != (i = bi.read(buffer))) &#123;</span><br><span class="line">					outputStream.write(buffer, <span class="number">0</span>, i);</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">return</span> <span class="string">&quot;下载成功&quot;</span>;</span><br><span class="line">			&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">				e.printStackTrace();</span><br><span class="line">				<span class="keyword">return</span> <span class="string">&quot;下载失败&quot;</span>;</span><br><span class="line">			&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">				<span class="keyword">if</span> (bi != <span class="literal">null</span>) &#123;</span><br><span class="line">					<span class="keyword">try</span> &#123;</span><br><span class="line">						bi.close();</span><br><span class="line">					&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">						e.printStackTrace();</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">return</span> <span class="string">&quot;文件不存在&quot;</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>前端页面<br>single_file_upload.html, 只可以上传单个文件，上传成功会返回文件信息</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/1999/xhtml&quot;</span></span></span><br><span class="line"><span class="tag">	<span class="attr">xmlns:th</span>=<span class="string">&quot;http://www.thymeleaf.org&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>单个文件上传<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;../static/js/jquery-1.10.2.min.js&quot;</span></span></span><br><span class="line"><span class="tag">	<span class="attr">th:src</span>=<span class="string">&quot;@&#123;/js/jquery-1.10.2.min.js&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">div</span> <span class="attr">th:if</span>=<span class="string">&quot;$&#123;message&#125;&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">h2</span> <span class="attr">style</span>=<span class="string">&quot;color: red;&quot;</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;message&#125;&quot;</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">h2</span>&gt;</span>单个文件上传<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;singleFileUpload&quot;</span> <span class="attr">method</span>=<span class="string">&quot;POST&quot;</span></span></span><br><span class="line"><span class="tag">			<span class="attr">enctype</span>=<span class="string">&quot;multipart/form-data&quot;</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">				文件：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">name</span>=<span class="string">&quot;file&quot;</span> /&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;上传&quot;</span> /&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;1&quot;</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">td</span>&gt;</span>Name<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">td</span>&gt;</span>contentType<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">td</span>&gt;</span>size<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">td</span>&gt;</span>uploadDate<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">tr</span> <span class="attr">th:if</span>=<span class="string">&quot;$&#123;files.size()&#125; eq 0&quot;</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">&quot;4&quot;</span>&gt;</span>没有文件信息！！<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">tr</span> <span class="attr">th:each</span>=<span class="string">&quot;file : $&#123;files&#125;&quot;</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">td</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;file.name&#125;&quot;</span> /&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">td</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;file.contentType&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">td</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;file.size&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">td</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;file.uploadDate&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>multi_file_upload.html, 可以多个文件一起上传，同样会返回文件信息列表</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/1999/xhtml&quot;</span></span></span><br><span class="line"><span class="tag">	<span class="attr">xmlns:th</span>=<span class="string">&quot;http://www.thymeleaf.org&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>多个文件上传<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;../static/js/jquery-1.10.2.min.js&quot;</span></span></span><br><span class="line"><span class="tag">	<span class="attr">th:src</span>=<span class="string">&quot;@&#123;/js/jquery-1.10.2.min.js&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">div</span> <span class="attr">th:if</span>=<span class="string">&quot;$&#123;message&#125;&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">h2</span> <span class="attr">style</span>=<span class="string">&quot;color: red;&quot;</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;message&#125;&quot;</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">h2</span>&gt;</span>多文件上传<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;/multiFileUpload&quot;</span> <span class="attr">method</span>=<span class="string">&quot;POST&quot;</span></span></span><br><span class="line"><span class="tag">			<span class="attr">enctype</span>=<span class="string">&quot;multipart/form-data&quot;</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">				多文件上传：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">name</span>=<span class="string">&quot;files&quot;</span> <span class="attr">multiple</span>=<span class="string">&quot;multiple&quot;</span> /&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;上传&quot;</span> /&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;1&quot;</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">td</span>&gt;</span>Name<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">td</span>&gt;</span>contentType<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">td</span>&gt;</span>size<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">td</span>&gt;</span>uploadDate<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">tr</span> <span class="attr">th:if</span>=<span class="string">&quot;$&#123;files.size()&#125; eq 0&quot;</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">&quot;4&quot;</span>&gt;</span>没有文件信息!<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">tr</span> <span class="attr">th:each</span>=<span class="string">&quot;file : $&#123;files&#125;&quot;</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">td</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;file.name&#125;&quot;</span> /&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">td</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;file.contentType&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">td</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;file.size&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">td</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;file.uploadDate&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>file_download.html, 输入上传的文件名即可下载</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/1999/xhtml&quot;</span></span></span><br><span class="line"><span class="tag">	<span class="attr">xmlns:th</span>=<span class="string">&quot;http://www.thymeleaf.org&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>文件下载<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;../static/js/jquery-1.10.2.min.js&quot;</span></span></span><br><span class="line"><span class="tag">	<span class="attr">th:src</span>=<span class="string">&quot;@&#123;/js/jquery-1.10.2.min.js&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">h2</span>&gt;</span>文件下载<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;downloadFile&quot;</span> <span class="attr">method</span>=<span class="string">&quot;POST&quot;</span> <span class="attr">enctype</span>=<span class="string">&quot;multipart/form-data&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">			文件名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;fileName&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;下载文件&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="运行演示"><a href="#运行演示" class="headerlink" title="运行演示"></a>运行演示</h3><p>启动项目</p>
<p>单个文件上传，访问 <a href="http://localhost:8080/singleFileUpload">http://localhost:8080/singleFileUpload</a><br><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/backend/spring_boot/file_upload/2.png"></p>
<p>如果上传文件不符合条件会报错<br><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/backend/spring_boot/file_upload/3.png"></p>
<p>多个文件上传，访问 <a href="http://localhost:8080/multiFileUpload">http://localhost:8080/multiFileUpload</a><br><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/backend/spring_boot/file_upload/4.png"></p>
<p>下载上传的文件，访问 <a href="http://localhost:8080/downloadFile">http://localhost:8080/downloadFile</a><br><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/backend/spring_boot/file_upload/5.png"></p>
<p>项目已上传至 Github: <a href="https://github.com/yekongle/springboot-code-samples/tree/master/springboot-fileupload-sample">https://github.com/yekongle/springboot-code-samples/tree/master/springboot-fileupload-sample</a> , 希望对小伙伴们有帮助哦。</p>
]]></content>
      <categories>
        <category>Spring Boot</category>
      </categories>
      <tags>
        <tag>SpringBoot</tag>
        <tag>Upload</tag>
        <tag>Download</tag>
      </tags>
  </entry>
  <entry>
    <title>Spring Boot2 实战系列之语言国际化</title>
    <url>/2020/04/18/springboot-i18n-sample/</url>
    <content><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>在很多网站我们可以看到可以切换语言的按钮，如果网站需要面向海外用户，那么实现网站语言国际化就显得非常必要。在 Spring Boot 中，我们可以非常方便地实现这个语言国际化的功能，下面就开始动手来实践一个可以中英切换的登录页面吧。</p>
<span id="more"></span>
<h3 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h3><p>项目结构图如下：<br><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/backend/spring_boot/i18n/1.png"></p>
<p>这里的登录页面使用的是  Bootstrap 官方的一个实例，下载下来，把相关静态资源文件导入到 resources 目录就好。<br><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/backend/spring_boot/i18n/2.png"></p>
<p>pom 依赖如下：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">	<span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2.5.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>top.yekongle<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springboot-i18n-sample<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">name</span>&gt;</span>springboot-i18n-sample<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">description</span>&gt;</span>i18n sample for Spring Boot<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-thymeleaf<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.junit.vintage<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit-vintage-engine<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>


<h3 id="代码编写"><a href="#代码编写" class="headerlink" title="代码编写"></a>代码编写</h3><p>login.html, 登录页面，把需要进行语言替换的地方换成 thymeleaf 标签</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span> <span class="attr">xmlns:th</span>=<span class="string">&quot;http://www.thymeleaf.org&quot;</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span> <span class="attr">content</span>=<span class="string">&quot;text/html; charset=UTF-8&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1, shrink-to-fit=no&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;description&quot;</span> <span class="attr">content</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;author&quot;</span> <span class="attr">content</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">title</span>&gt;</span>Signin Template for Bootstrap<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- Bootstrap core CSS --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;asserts/css/bootstrap.min.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- Custom styles for this template --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;asserts/css/signin.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">	<span class="tag">&lt;<span class="name">body</span> <span class="attr">class</span>=<span class="string">&quot;text-center&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">form</span> <span class="attr">class</span>=<span class="string">&quot;form-signin&quot;</span> <span class="attr">action</span>=<span class="string">&quot;dashboard.html&quot;</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">img</span> <span class="attr">class</span>=<span class="string">&quot;mb-4&quot;</span> <span class="attr">src</span>=<span class="string">&quot;asserts/img/bootstrap-solid.svg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> <span class="attr">width</span>=<span class="string">&quot;72&quot;</span> <span class="attr">height</span>=<span class="string">&quot;72&quot;</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">&quot;h3 mb-3 font-weight-normal&quot;</span> <span class="attr">th:text</span>=<span class="string">&quot;#&#123;login.tip&#125;&quot;</span>&gt;</span>Please sign in<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">&quot;sr-only&quot;</span>&gt;</span>Username<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">th:placeholder</span>=<span class="string">&quot;#&#123;login.username&#125;&quot;</span> <span class="attr">required</span>=<span class="string">&quot;&quot;</span> <span class="attr">autofocus</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">&quot;sr-only&quot;</span>&gt;</span>Password<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">th:placeholder</span>=<span class="string">&quot;#&#123;login.password&#125;&quot;</span> <span class="attr">required</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;checkbox mb-3&quot;</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">label</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">value</span>=<span class="string">&quot;remember&quot;</span>&gt;</span>  [[#&#123;login.remember&#125;]]</span><br><span class="line">        <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-lg btn-primary btn-block&quot;</span> <span class="attr">th:text</span>=<span class="string">&quot;#&#123;login.btn&#125;&quot;</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span>&gt;</span>Sign in<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;mt-5 mb-3 text-muted&quot;</span>&gt;</span>© 2017-2020<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-sm&quot;</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/login(l=&#x27;zh_CN&#x27;)&#125;&quot;</span>&gt;</span>中文<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-sm&quot;</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/login(l=&#x27;en_US&#x27;)&#125;&quot;</span>&gt;</span>English<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>在 resources 下新建一个 i18n 目录，创建 login.properties, login_en_US.properties, login_zh_CN.properties, 注意这里名字不要写错, 语言资源文件格式: 自定义标识_语言代码_国家地区.properties</p>
<p>login.properties</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">login.btn=登陆</span><br><span class="line">login.password=密码</span><br><span class="line">login.remember=记住我</span><br><span class="line">login.tip=请登录</span><br><span class="line">login.username=用户名</span><br></pre></td></tr></table></figure>

<p>login_en_US.properties</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">login.btn=Sign <span class="keyword">in</span></span><br><span class="line">login.password=Password</span><br><span class="line">login.remember=remember-me</span><br><span class="line">login.tip=Please sign <span class="keyword">in</span></span><br><span class="line">login.username=UserName</span><br></pre></td></tr></table></figure>

<p>login_zh_CN.properties</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">login.btn=登录</span><br><span class="line">login.password=密码</span><br><span class="line">login.remember=记住我</span><br><span class="line">login.tip=请登录</span><br><span class="line">login.username=用户名</span><br></pre></td></tr></table></figure>

<p>编辑全局配置文件 application.properties</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 国际化i18n配置</span></span><br><span class="line"><span class="comment"># (包名.基础名)</span></span><br><span class="line">spring.messages.basename=i18n.login</span><br><span class="line">spring.messages.encoding=UTF-8</span><br><span class="line"></span><br><span class="line"><span class="comment"># Thymeleaf 配置</span></span><br><span class="line">spring.thymeleaf.prefix=classpath:/templates/</span><br><span class="line">spring.thymeleaf.suffix=.html</span><br><span class="line"><span class="comment"># 禁止缓存</span></span><br><span class="line">spring.thymeleaf.cache=<span class="literal">false</span></span><br></pre></td></tr></table></figure>

<p>I18nLocaleResolver.java, 根据请求切换语言资源</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> top.yekongle.i18n.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Locale;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.util.StringUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.LocaleResolver;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment">* Description: 区域解析器, 根据请求的值来返回对应的Locale</span></span><br><span class="line"><span class="comment">* Author: Yekongle  </span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">I18nLocaleResolver</span> <span class="keyword">implements</span> <span class="title class_">LocaleResolver</span> &#123;</span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="keyword">public</span> Locale <span class="title function_">resolveLocale</span><span class="params">(HttpServletRequest request)</span> &#123;</span><br><span class="line">		<span class="type">String</span> <span class="variable">l</span> <span class="operator">=</span> request.getParameter(<span class="string">&quot;l&quot;</span>);</span><br><span class="line">		<span class="type">Locale</span> <span class="variable">locale</span> <span class="operator">=</span> Locale.getDefault();</span><br><span class="line">		<span class="keyword">if</span> (!StringUtils.isEmpty(l)) &#123;</span><br><span class="line">			String[] split = l.split(<span class="string">&quot;_&quot;</span>);</span><br><span class="line">			locale = <span class="keyword">new</span> <span class="title class_">Locale</span>(split[<span class="number">0</span>], split[<span class="number">1</span>]);</span><br><span class="line">		&#125;</span><br><span class="line">		log.info(<span class="string">&quot;Local Country: &#123;&#125;, language: &#123;&#125;&quot;</span>, locale.getCountry(), locale.getLanguage());</span><br><span class="line">		<span class="keyword">return</span> locale;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setLocale</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Locale locale)</span> &#123;</span><br><span class="line"></span><br><span class="line">	&#125;    </span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<p>WebMvcConfig.java, 请求配置</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> top.yekongle.i18n.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.LocaleResolver;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.ViewControllerRegistry;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.WebMvcConfigurer;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment">* <span class="doctag">@Description</span>: I18n config</span></span><br><span class="line"><span class="comment">* <span class="doctag">@Author</span>: Yekongle </span></span><br><span class="line"><span class="comment">* <span class="doctag">@Date</span>: Mar 22, 2020</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WebMvcConfig</span> <span class="keyword">implements</span> <span class="title class_">WebMvcConfigurer</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addViewControllers</span><span class="params">(ViewControllerRegistry registry)</span> &#123;</span><br><span class="line">        <span class="comment">//设置对&quot;/&quot;的请求映射到login</span></span><br><span class="line">        <span class="comment">//如果没有逻辑业务，没有必要用控制器方法对请求进行映射  </span></span><br><span class="line">        registry.addViewController(<span class="string">&quot;/&quot;</span>).setViewName(<span class="string">&quot;login&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 注册我们自定义的区域解析器，</span></span><br><span class="line"><span class="comment">     * 一旦将区域解析器注册到Spring容器中</span></span><br><span class="line"><span class="comment">     * 则SpingBoot默认提供的区域解析器将不会自动注册</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> LocaleResolver <span class="title function_">localeResolver</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">I18nLocaleResolver</span>();</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>LoginController.java </p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> top.yekongle.i18n.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* <span class="doctag">@Author</span>: Yekongle </span></span><br><span class="line"><span class="comment">* <span class="doctag">@Date</span>: Mar 22, 2020</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LoginController</span> &#123;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@RequestMapping(&quot;/login&quot;)</span></span><br><span class="line">	<span class="keyword">public</span> String <span class="title function_">login</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="string">&quot;login&quot;</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="运行演示"><a href="#运行演示" class="headerlink" title="运行演示"></a>运行演示</h3><p>项目启动后，访问 8080 端口，默认显示是中文<br><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/backend/spring_boot/i18n/3.png"></p>
<p>点击 English 可以切换到英文<br><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/backend/spring_boot/i18n/4.png"></p>
<p>项目已上传至 Github: <a href="https://github.com/yekongle/springboot-code-samples/tree/master/springboot-i18n-sample">https://github.com/yekongle/springboot-code-samples/tree/master/springboot-i18n-sample</a> , 希望对小伙伴们有帮助哦。</p>
]]></content>
      <categories>
        <category>Spring Boot</category>
      </categories>
      <tags>
        <tag>SpringBoot</tag>
        <tag>i18n</tag>
      </tags>
  </entry>
  <entry>
    <title>Spring Boot2 实战系列之 exception 配置</title>
    <url>/2020/04/07/springboot-exception-sample/</url>
    <content><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>在实际项目中，通常会有各种异常抛出，如果我们不加以捕捉并自定义统一的response(返回信息)，那么用户就可能看到莫名奇怪的错误。比如常见的 NullPointerException, 你直接返回这个错误信息，相信用户也是一头雾水。</p>
<p>还有就是统一捕捉异常并自定义报错信息也有利于我们排查，迅速定位问题所在。</p>
<p>我们先来看下如果不做全局异常配置会是怎样，如下例所示，在 controller 层的请求里加个 try catch，然后根据不同异常处理，如果有很多请求，那么每个请求都像这样加个 try catch 层，就比较繁杂，而且要捕捉的异常可能很多都相同，这样代码重复就比较多。</p>
<span id="more"></span>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/api&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LoginController</span> &#123;</span><br><span class="line">	<span class="meta">@PostMapping(&quot;/login&quot;)</span></span><br><span class="line">	<span class="keyword">public</span> ResponseCode <span class="title function_">login</span><span class="params">(<span class="meta">@RequestBody</span> User User)</span> &#123;</span><br><span class="line">		<span class="type">JSONObject</span> <span class="variable">jsonObject</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			logger.info(<span class="string">&quot;Request data:&quot;</span> + User.toString());</span><br><span class="line">			jsonObject = loginService.valifyLogin(User);</span><br><span class="line">		&#125; <span class="keyword">catch</span> (RestInputException e) &#123;</span><br><span class="line">			<span class="comment">// Exception 处理1</span></span><br><span class="line">			<span class="keyword">return</span> ResponseCode.fail(<span class="number">400</span>, <span class="string">&quot;Bad request.&quot;</span>);</span><br><span class="line">		&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">			<span class="comment">// Exception 处理2</span></span><br><span class="line">			<span class="keyword">return</span> ResponseCode.error(<span class="string">&quot;System error&quot;</span>);</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">return</span> ResponseCode.success(<span class="string">&quot;Login success!&quot;</span>, jsonObject);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>那怎样优雅地捕捉异常呢，这就需要用到 Spring 的两个注解 @ExceptionHandler 和 @ControllerAdvice。</p>
<p>@ExceptionHandler 作用于方法之上，捕捉 controller 类抛出的指定的异常，例如上面的登陆请求可以简化为如下例子，这样就避免了写重复的try catch 代码。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/api&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LoginController</span> &#123;</span><br><span class="line">    <span class="meta">@PostMapping(&quot;/login&quot;)</span></span><br><span class="line">	<span class="keyword">public</span> ResponseCode <span class="title function_">login</span><span class="params">(<span class="meta">@RequestBody</span> User User)</span> &#123;</span><br><span class="line">		<span class="type">JSONObject</span> <span class="variable">jsonObject</span> <span class="operator">=</span> loginService.valifyLogin(User);</span><br><span class="line">        <span class="keyword">return</span> ResponseCode.success(<span class="string">&quot;Login success!&quot;</span>, jsonObject);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ExceptionHandler(RestInputException.class)</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="keyword">public</span> ApiResponse <span class="title function_">handleRestInputException</span><span class="params">(RestInputException e)</span> &#123;</span><br><span class="line">        log.info(<span class="string">&quot;Business error: [&#123;&#125;]&quot;</span>, e.getMessage());</span><br><span class="line">        <span class="keyword">return</span> ApiResponse.error(ApiStatus.BAD_REQUEST.getCode(), e.getMessage());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ExceptionHandler(Exception.class)</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="keyword">public</span> ApiResponse <span class="title function_">handleExceptions</span><span class="params">(Exception e)</span> &#123;</span><br><span class="line">        log.error(<span class="string">&quot;System error&quot;</span>, e);</span><br><span class="line">        <span class="keyword">return</span> ApiResponse.error(ApiStatus.INTERNAL_SERVER_ERROR.getCode(), ApiStatus.INTERNAL_SERVER_ERROR.getMsg());</span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>但如果有多个 controller 类，每个类还是可能要写重复的 @ExceptionHandler 注解方法，这时可以写一个 BaseController 类，其他 controller 类继承这个类即可。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BaseController</span> &#123;</span><br><span class="line">    <span class="meta">@ExceptionHandler(RestInputException.class)</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="keyword">public</span> ApiResponse <span class="title function_">handleRestInputException</span><span class="params">(RestInputException e)</span> &#123;</span><br><span class="line">        log.info(<span class="string">&quot;Business error: [&#123;&#125;]&quot;</span>, e.getMessage());</span><br><span class="line">        <span class="keyword">return</span> ApiResponse.error(ApiStatus.BAD_REQUEST.getCode(), e.getMessage());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ExceptionHandler(Exception.class)</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="keyword">public</span> ApiResponse <span class="title function_">handleExceptions</span><span class="params">(Exception e)</span> &#123;</span><br><span class="line">        log.error(<span class="string">&quot;System error&quot;</span>, e);</span><br><span class="line">        <span class="keyword">return</span> ApiResponse.error(ApiStatus.INTERNAL_SERVER_ERROR.getCode(), ApiStatus.INTERNAL_SERVER_ERROR.getMsg());</span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/api&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LoginController</span> <span class="keyword">extends</span> <span class="title class_">BaseController</span> &#123;<span class="comment">/***/</span>&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>像上面这样可以为不同业务的 controller 继承一个对应的 BaseController, 里面写相关业务异常的处理就行了 但如果想要一个全局的异常配置呢，这样就要用到 @ControllerAdvice + @ExceptionHandler，两者搭配使用，如下所示</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@ControllerAdvice</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ApiExceptionConfig</span> &#123;</span><br><span class="line">    <span class="meta">@ExceptionHandler(RestInputException.class)</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="keyword">public</span> ApiResponse <span class="title function_">handleRestInputException</span><span class="params">(RestInputException e)</span> &#123;</span><br><span class="line">        log.info(<span class="string">&quot;Business error: [&#123;&#125;]&quot;</span>, e.getMessage());</span><br><span class="line">        <span class="keyword">return</span> ApiResponse.error(ApiStatus.BAD_REQUEST.getCode(), e.getMessage());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ExceptionHandler(Exception.class)</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="keyword">public</span> ApiResponse <span class="title function_">handleExceptions</span><span class="params">(Exception e)</span> &#123;</span><br><span class="line">        log.error(<span class="string">&quot;System error&quot;</span>, e);</span><br><span class="line">        <span class="keyword">return</span> ApiResponse.error(ApiStatus.INTERNAL_SERVER_ERROR.getCode(), ApiStatus.INTERNAL_SERVER_ERROR.getMsg());</span><br><span class="line">    &#125;     </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>值得注意的是它们间的优先级，@Controller + @ExceptionHandler 优先级高，@ControllerAdvice + @ExceptionHandler 次之，如果它们定义了相同的异常，优先级高先捕捉异常，而且被捕捉处理了，优先级低的就不再执行。</p>
<p>下面使用 @ControllerAdvice + @ExceptionHandler 方式创建一个全局异常配置项目。</p>
<h3 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h3><p>项目结构图如下：<br><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/backend/spring_boot/exception/1.jpg"></p>
<p>pom 依赖如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span><br><span class="line">&lt;project xmlns=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> xmlns:xsi=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span><br><span class="line">	xsi:schemaLocation=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span><br><span class="line">	&lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;</span><br><span class="line">	&lt;parent&gt;</span><br><span class="line">		&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">		&lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;</span><br><span class="line">		&lt;version&gt;2.2.5.RELEASE&lt;/version&gt;</span><br><span class="line">		&lt;relativePath/&gt; &lt;!-- lookup parent from repository --&gt;</span><br><span class="line">	&lt;/parent&gt;</span><br><span class="line">	&lt;groupId&gt;top.yekongle&lt;/groupId&gt;</span><br><span class="line">	&lt;artifactId&gt;springboot-exception-sample&lt;/artifactId&gt;</span><br><span class="line">	&lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;</span><br><span class="line">	&lt;name&gt;springboot-exception-sample&lt;/name&gt;</span><br><span class="line">	&lt;description&gt;Exception project <span class="keyword">for</span> Spring Boot&lt;/description&gt;</span><br><span class="line"></span><br><span class="line">	&lt;properties&gt;</span><br><span class="line">		&lt;java.version&gt;1.8&lt;/java.version&gt;</span><br><span class="line">	&lt;/properties&gt;</span><br><span class="line"></span><br><span class="line">	&lt;dependencies&gt;</span><br><span class="line">		&lt;dependency&gt;</span><br><span class="line">			&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">			&lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;</span><br><span class="line">		&lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">		&lt;dependency&gt;</span><br><span class="line">			&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">			&lt;artifactId&gt;spring-boot-devtools&lt;/artifactId&gt;</span><br><span class="line">			&lt;scope&gt;runtime&lt;/scope&gt;</span><br><span class="line">			&lt;optional&gt;<span class="literal">true</span>&lt;/optional&gt;</span><br><span class="line">		&lt;/dependency&gt;</span><br><span class="line">		&lt;dependency&gt;</span><br><span class="line">			&lt;groupId&gt;org.projectlombok&lt;/groupId&gt;</span><br><span class="line">			&lt;artifactId&gt;lombok&lt;/artifactId&gt;</span><br><span class="line">			&lt;optional&gt;<span class="literal">true</span>&lt;/optional&gt;</span><br><span class="line">		&lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">		&lt;dependency&gt;</span><br><span class="line">			&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">			&lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt;</span><br><span class="line">			&lt;scope&gt;<span class="built_in">test</span>&lt;/scope&gt;</span><br><span class="line">			&lt;exclusions&gt;</span><br><span class="line">				&lt;exclusion&gt;</span><br><span class="line">					&lt;groupId&gt;org.junit.vintage&lt;/groupId&gt;</span><br><span class="line">					&lt;artifactId&gt;junit-vintage-engine&lt;/artifactId&gt;</span><br><span class="line">				&lt;/exclusion&gt;</span><br><span class="line">			&lt;/exclusions&gt;</span><br><span class="line">		&lt;/dependency&gt;</span><br><span class="line">	&lt;/dependencies&gt;</span><br><span class="line"></span><br><span class="line">	&lt;build&gt;</span><br><span class="line">		&lt;plugins&gt;</span><br><span class="line">			&lt;plugin&gt;</span><br><span class="line">				&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">				&lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;</span><br><span class="line">			&lt;/plugin&gt;</span><br><span class="line">		&lt;/plugins&gt;</span><br><span class="line">	&lt;/build&gt;</span><br><span class="line"></span><br><span class="line">&lt;/project&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="代码编写"><a href="#代码编写" class="headerlink" title="代码编写"></a>代码编写</h3><p>异常相关<br>RestInputException.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> top.yekongle.exception.exception;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span> 自定义异常</span></span><br><span class="line"><span class="comment"> * */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RestInputException</span> <span class="keyword">extends</span> <span class="title class_">RuntimeException</span> &#123;</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">long</span> <span class="variable">serialVersionUID</span> <span class="operator">=</span> <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="title function_">RestInputException</span><span class="params">(String message)</span> &#123;</span><br><span class="line">		<span class="built_in">super</span>(message);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>ApiExceptionConfig.java, 全局异常配置</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> top.yekongle.exception.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.stream.Collectors;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.support.DefaultMessageSourceResolvable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.validation.ObjectError;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.MethodArgumentNotValidException;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ControllerAdvice;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ExceptionHandler;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ResponseBody;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> top.yekongle.exception.exception.RestInputException;</span><br><span class="line"><span class="keyword">import</span> top.yekongle.exception.response.ApiResponse;</span><br><span class="line"><span class="keyword">import</span> top.yekongle.exception.response.ApiStatus;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span> 全局异常配置类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Slf</span>4j lombok 注解，自动生成 logger 类</span></span><br><span class="line"><span class="comment"> * */</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@ControllerAdvice</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ApiExceptionConfig</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//处理请求参数格式错误 @RequestBody上validate失败后抛出的异常是MethodArgumentNotValidException异常。</span></span><br><span class="line">    <span class="meta">@ExceptionHandler(MethodArgumentNotValidException.class)</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="keyword">public</span> ApiResponse <span class="title function_">MethodArgumentNotValidExceptionHandler</span><span class="params">(MethodArgumentNotValidException e)</span> &#123;</span><br><span class="line">	    	<span class="comment">/*String message = null;</span></span><br><span class="line"><span class="comment">	    	for (ObjectError objectError : e.getBindingResult().getAllErrors()) &#123;</span></span><br><span class="line"><span class="comment">				if (message == null) &#123;</span></span><br><span class="line"><span class="comment">					message = objectError.getDefaultMessage();</span></span><br><span class="line"><span class="comment">				&#125; else &#123;</span></span><br><span class="line"><span class="comment">					message = message + objectError.getDefaultMessage();</span></span><br><span class="line"><span class="comment">				&#125;</span></span><br><span class="line"><span class="comment">			&#125;*/</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">message</span> <span class="operator">=</span> e.getBindingResult().getAllErrors().stream().map(DefaultMessageSourceResolvable::getDefaultMessage).collect(Collectors.joining());</span><br><span class="line">        log.info(<span class="string">&quot;Bad request: [&#123;&#125;]&quot;</span>, message);</span><br><span class="line">        <span class="keyword">return</span> ApiResponse.error(ApiStatus.BAD_REQUEST.getCode(), message);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ExceptionHandler(RestInputException.class)</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="keyword">public</span> ApiResponse <span class="title function_">handleRestInputException</span><span class="params">(RestInputException e)</span> &#123;</span><br><span class="line">        log.info(<span class="string">&quot;Business error: [&#123;&#125;]&quot;</span>, e.getMessage());</span><br><span class="line">        <span class="keyword">return</span> ApiResponse.error(ApiStatus.BAD_REQUEST.getCode(), e.getMessage());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ExceptionHandler(Exception.class)</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="keyword">public</span> ApiResponse <span class="title function_">handleExceptions</span><span class="params">(Exception e)</span> &#123;</span><br><span class="line">        log.error(<span class="string">&quot;System error&quot;</span>, e);</span><br><span class="line">        <span class="keyword">return</span> ApiResponse.error(ApiStatus.INTERNAL_SERVER_ERROR.getCode(), ApiStatus.INTERNAL_SERVER_ERROR.getMsg());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Bean相关</p>
<p>TestDto.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> top.yekongle.exception.dto;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> javax.validation.constraints.NotEmpty;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 请求实体</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Data</span> lombok 注解，自动生成 getter setter 方法</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@NotEmpty</span> 参数校验注解</span></span><br><span class="line"><span class="comment"> * */</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestDto</span> &#123;</span><br><span class="line">	<span class="meta">@NotEmpty(message = &quot;名字不能为空!&quot;)</span></span><br><span class="line">	<span class="keyword">private</span> String name;</span><br><span class="line">	<span class="meta">@NotEmpty(message = &quot;地址不能为空!&quot;)</span></span><br><span class="line">	<span class="keyword">private</span> String address;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>Person.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> top.yekongle.exception.model;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> javax.validation.constraints.NotEmpty;</span><br><span class="line"><span class="keyword">import</span> javax.validation.constraints.NotNull;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span> 业务实体类</span></span><br><span class="line"><span class="comment"> * */</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Person</span> &#123;</span><br><span class="line">	<span class="meta">@NotEmpty(message = &quot;姓名不能为空!&quot;)</span></span><br><span class="line">	<span class="keyword">private</span> String name;</span><br><span class="line">	<span class="meta">@NotNull(message = &quot;年龄不能为空!&quot;)</span></span><br><span class="line">	<span class="keyword">private</span> Integer age;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>下面是结果返回相关类</p>
<p>ApiStatus.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> top.yekongle.exception.response;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span> 自定义返回状态</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> <span class="title class_">ApiStatus</span> &#123;</span><br><span class="line"></span><br><span class="line">    SUCCESS(<span class="number">200</span>, <span class="string">&quot;Success&quot;</span>),</span><br><span class="line">    INTERNAL_SERVER_ERROR(<span class="number">500</span>, <span class="string">&quot;Internal Server Error&quot;</span>),</span><br><span class="line">    BAD_REQUEST(<span class="number">400</span>, <span class="string">&quot;Bad Request&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">int</span> code;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> String msg;</span><br><span class="line"></span><br><span class="line">    ApiStatus(<span class="type">int</span> code, String msg) &#123;</span><br><span class="line">        <span class="built_in">this</span>.code = code;</span><br><span class="line">        <span class="built_in">this</span>.msg = msg;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Return the integer value of this status code.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getCode</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.code;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Return the reason phrase of this status code.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getMsg</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.msg;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>ApiResponse.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> top.yekongle.exception.response;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.annotation.JsonInclude;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.annotation.JsonInclude.Include;</span><br><span class="line"><span class="keyword">import</span> lombok.AllArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span> 自定义response实体类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@JsonInclude(Include.NON_NULL)</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ApiResponse</span> &#123;</span><br><span class="line">	<span class="keyword">private</span> Integer code;</span><br><span class="line">	<span class="keyword">private</span> String msg;</span><br><span class="line">	<span class="keyword">private</span> Object data;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> ApiResponse <span class="title function_">success</span><span class="params">(Object data)</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">ApiResponse</span>(ApiStatus.SUCCESS.getCode(), ApiStatus.SUCCESS.getMsg(), data);</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> ApiResponse <span class="title function_">error</span><span class="params">(Integer code, String msg)</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">ApiResponse</span>(code, msg, <span class="literal">null</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>业务逻辑类<br>PersonService.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> top.yekongle.exception.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> top.yekongle.exception.model.Person;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span> 业务接口</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">PersonService</span> &#123;</span><br><span class="line">	Map&lt;String, Object&gt; <span class="title function_">register</span><span class="params">(Person person)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>PersonServiceImpl.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> top.yekongle.exception.service.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> top.yekongle.exception.exception.RestInputException;</span><br><span class="line"><span class="keyword">import</span> top.yekongle.exception.model.Person;</span><br><span class="line"><span class="keyword">import</span> top.yekongle.exception.service.PersonService;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span> 业务实现类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PersonServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">PersonService</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Map&lt;String, Object&gt; <span class="title function_">register</span><span class="params">(Person person)</span> &#123;</span><br><span class="line">        Map&lt;String, Object&gt; resultMap = <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">if</span> (person.getAge().intValue() &lt; <span class="number">18</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RestInputException</span>(<span class="string">&quot;未成年人不能注册哦！&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        resultMap = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        resultMap.put(<span class="string">&quot;ID&quot;</span>, <span class="number">666</span>);</span><br><span class="line">        <span class="keyword">return</span> resultMap;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>控制类<br>TestController.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> top.yekongle.exception.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.validation.annotation.Validated;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PostMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestBody;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"><span class="keyword">import</span> top.yekongle.exception.dto.TestDto;</span><br><span class="line"><span class="keyword">import</span> top.yekongle.exception.model.Person;</span><br><span class="line"><span class="keyword">import</span> top.yekongle.exception.response.ApiResponse;</span><br><span class="line"><span class="keyword">import</span> top.yekongle.exception.service.PersonService;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span> 测试异常控制类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/test&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestController</span> &#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> PersonService personService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 测试捕捉参数验证 exception</span></span><br><span class="line"><span class="comment">     * */</span></span><br><span class="line">	<span class="meta">@PostMapping(&quot;/validate&quot;)</span></span><br><span class="line">	<span class="keyword">public</span> ApiResponse <span class="title function_">testValidate</span><span class="params">(<span class="meta">@RequestBody</span> <span class="meta">@Validated</span> TestDto testDto)</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> ApiResponse.success(testDto);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 测试捕捉业务验证 exception</span></span><br><span class="line"><span class="comment">     * */</span></span><br><span class="line">    <span class="meta">@PostMapping(&quot;/business&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> ApiResponse <span class="title function_">init</span><span class="params">(<span class="meta">@RequestBody</span> Person person)</span> &#123;</span><br><span class="line">        <span class="type">Map</span> <span class="variable">resultMap</span> <span class="operator">=</span> personService.register(person);</span><br><span class="line">        <span class="keyword">return</span> ApiResponse.success(resultMap);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 测试捕捉系统 exception</span></span><br><span class="line"><span class="comment">     * */</span></span><br><span class="line">    <span class="meta">@PostMapping(&quot;/error&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> ApiResponse <span class="title function_">testValidate</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">TestDto</span> <span class="variable">testDto</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        log.info(<span class="string">&quot;Result:&quot;</span> + testDto.toString());</span><br><span class="line">        <span class="keyword">return</span> ApiResponse.success(<span class="literal">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="运行演示"><a href="#运行演示" class="headerlink" title="运行演示"></a>运行演示</h3><p>运行项目，用 postman 测试<br>访问 <a href="http://127.0.0.1:8080/test/validate">http://127.0.0.1:8080/test/validate</a></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/backend/spring_boot/exception/2.jpg"></p>
<p>访问 <a href="http://localhost:8080/test/business">http://localhost:8080/test/business</a></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/backend/spring_boot/exception/3.jpg"></p>
<p>访问 <a href="http://localhost:8080/test/error">http://localhost:8080/test/error</a></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/backend/spring_boot/exception/4.jpg"></p>
<p>可见，全局异常配置生效，并返回了自定义的异常信息。</p>
<p>项目已上传至 Github: <a href="https://github.com/yekongle/springboot-code-samples/tree/master/springboot-exception-sample">https://github.com/yekongle/springboot-code-samples/tree/master/springboot-exception-sample</a> , 希望对小伙伴们有帮助哦。</p>
]]></content>
      <categories>
        <category>Spring Boot</category>
      </categories>
      <tags>
        <tag>SpringBoot</tag>
        <tag>Exception</tag>
      </tags>
  </entry>
  <entry>
    <title>Spring Boot2 实战系列之登录注册(二) - 登录实现</title>
    <url>/2020/03/27/springboot-login/</url>
    <content><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>在前面的博文 <a href="https://blog.csdn.net/qq_23483671/article/details/105607780#comments_12237661">Spring Boot2 实战系列之登录注册(一) - 注册实现</a> 中实现了一个基本的注册功能，这次继续把登录功能加上，采用 spring security 对用户进行认证，采用 session 管理用户登录状态。</p>
<span id="more"></span>

<h3 id="项目架构"><a href="#项目架构" class="headerlink" title="项目架构"></a>项目架构</h3><p>项目结构图如下：</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/backend/spring_boot/login/1.png"></p>
<p>pom 依赖如下：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2.5.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>top.yekongle<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springboot-login-sample<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>Login sample for Spring Boot<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">passay.version</span>&gt;</span>1.5.0<span class="tag">&lt;/<span class="name">passay.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">guava.version</span>&gt;</span>29.0-jre<span class="tag">&lt;/<span class="name">guava.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-security<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-jpa<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-thymeleaf<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.passay<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>passay<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;passay.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.google.guava<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>guava<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;guava.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.h2database<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>h2<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.junit.vintage<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit-vintage-engine<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.security<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-security-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="代码编写"><a href="#代码编写" class="headerlink" title="代码编写"></a>代码编写</h3><p>这里主要写出改动或新增的类，其他的则和注册实现篇基本一致</p>
<p>用户角色<br><strong>UserAuthority.java</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> top.yekongle.login.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.persistence.Entity;</span><br><span class="line"><span class="keyword">import</span> javax.persistence.GeneratedValue;</span><br><span class="line"><span class="keyword">import</span> javax.persistence.Id;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> lombok.NoArgsConstructor;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>:</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: Yekongle</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span>: 2020年5月14日</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Entity</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserAuthority</span> &#123;</span><br><span class="line">    <span class="meta">@Id</span></span><br><span class="line">    <span class="meta">@GeneratedValue</span></span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">    <span class="keyword">private</span> String role;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>用户角色操作接口<br><strong>UserAuthorityRepository.java</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> top.yekongle.login.repository;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.data.jpa.repository.JpaRepository;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> top.yekongle.login.entity.UserAuthority;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>:</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: Yekongle</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span>: 2020年5月14日</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserAuthorityRepository</span> <span class="keyword">extends</span> <span class="title class_">JpaRepository</span>&lt;UserAuthority, Long&gt; &#123;</span><br><span class="line">    List&lt;UserAuthority&gt; <span class="title function_">findByUsername</span><span class="params">(String username)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>注册方法，注册用户时默认指定一个 “ROLE_USER” 角色并保存<br><strong>UserServiceImpl.java</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> top.yekongle.login.service.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.transaction.Transactional;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.crypto.password.PasswordEncoder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> top.yekongle.login.dto.UserDTO;</span><br><span class="line"><span class="keyword">import</span> top.yekongle.login.entity.User;</span><br><span class="line"><span class="keyword">import</span> top.yekongle.login.entity.UserAuthority;</span><br><span class="line"><span class="keyword">import</span> top.yekongle.login.exception.UserAlreadyExistException;</span><br><span class="line"><span class="keyword">import</span> top.yekongle.login.repository.UserAuthorityRepository;</span><br><span class="line"><span class="keyword">import</span> top.yekongle.login.repository.UserRepository;</span><br><span class="line"><span class="keyword">import</span> top.yekongle.login.service.UserService;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>:</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: Yekongle</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span>: 2020年5月5日</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">UserService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserRepository userRepository;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserAuthorityRepository userAuthorityRepository;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> PasswordEncoder passwordEncoder;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> User <span class="title function_">registerNewUserAccount</span><span class="params">(UserDTO userDTO)</span> <span class="keyword">throws</span> UserAlreadyExistException &#123;</span><br><span class="line">        <span class="keyword">if</span> (emailExists(userDTO.getEmail())) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">UserAlreadyExistException</span>(<span class="string">&quot;该邮箱已被注册:&quot;</span> + userDTO.getEmail());</span><br><span class="line">        &#125;</span><br><span class="line">        log.info(<span class="string">&quot;UserDTO:&quot;</span> + userDTO.toString());</span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">        user.setEmail(userDTO.getEmail());</span><br><span class="line">        user.setPassword(passwordEncoder.encode(userDTO.getPassword()));</span><br><span class="line">        userRepository.save(user);</span><br><span class="line"></span><br><span class="line">        <span class="type">UserAuthority</span> <span class="variable">userAuthority</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UserAuthority</span>();</span><br><span class="line">        userAuthority.setUsername(userDTO.getEmail());</span><br><span class="line">        userAuthority.setRole(<span class="string">&quot;ROLE_USER&quot;</span>);</span><br><span class="line">        userAuthorityRepository.save(userAuthority);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> user;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> <span class="title function_">emailExists</span><span class="params">(String email)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> userRepository.findByEmail(email) != <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>web mvc 配置，这里主要指定直接返回的页面<br><strong>WebMvcConfig.java</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> top.yekongle.login.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Locale;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.LocaleResolver;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.ViewControllerRegistry;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.WebMvcConfigurer;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.i18n.CookieLocaleResolver;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: web mvc 配置</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: Yekongle</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span>: 2020年5月8日</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WebMvcConfig</span> <span class="keyword">implements</span> <span class="title class_">WebMvcConfigurer</span> &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addViewControllers</span><span class="params">(ViewControllerRegistry registry)</span> &#123;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">         * 设置对&quot;/&quot;的请求映射到login, 如果没有逻辑业务，</span></span><br><span class="line"><span class="comment">         * 则没有必要用控制器方法对请求进行映射</span></span><br><span class="line"><span class="comment">         * */</span></span><br><span class="line">        registry.addViewController(<span class="string">&quot;/&quot;</span>).setViewName(<span class="string">&quot;forward:/login&quot;</span>);</span><br><span class="line">        registry.addViewController(<span class="string">&quot;/registration.html&quot;</span>);</span><br><span class="line">        registry.addViewController(<span class="string">&quot;/successRegister.html&quot;</span>);</span><br><span class="line">        registry.addViewController(<span class="string">&quot;/home.html&quot;</span>);</span><br><span class="line">        registry.addViewController(<span class="string">&quot;/logout.html&quot;</span>);</span><br><span class="line">        registry.addViewController(<span class="string">&quot;/invalidSession.html&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<p>web 安全配置，主要包括自定义用户认证，登入登出配置，访问控制，session 管理等。<br><strong>WebSecurityConfig.java</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">	<span class="keyword">package</span> top.yekongle.login.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.HttpMethod;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.authentication.dao.DaoAuthenticationProvider;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.annotation.web.builders.HttpSecurity;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.session.SessionRegistry;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.session.SessionRegistryImpl;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.userdetails.UserDetailsService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.crypto.password.PasswordEncoder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.web.authentication.AuthenticationFailureHandler;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.web.authentication.AuthenticationSuccessHandler;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.security.web.session.HttpSessionEventPublisher;</span><br><span class="line"><span class="keyword">import</span> top.yekongle.login.security.MyLogoutSuccessHandler;</span><br><span class="line"><span class="keyword">import</span> top.yekongle.login.security.MyUserDetailServiceImpl;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: Web 安全配置</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: Yekongle</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span>: 2020年5月5日</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WebSecurityConfig</span> <span class="keyword">extends</span> <span class="title class_">WebSecurityConfigurerAdapter</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> MyUserDetailServiceImpl userDetailsService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> AuthenticationSuccessHandler authenticationSuccessHandler;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> AuthenticationFailureHandler authenticationFailureHandler;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> MyLogoutSuccessHandler myLogoutSuccessHandler;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 使用 BCrypt强哈希方法来加密密码, 每次加密结果不一样</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> PasswordEncoder <span class="title function_">passwordEncoder</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">BCryptPasswordEncoder</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * 可以有多个 AuthenticationProvider，默认使用 DaoAuthenticationProvide</span></span><br><span class="line"><span class="comment">     * DaoAuthenticationProvider 在进行认证的时候需要一个 UserDetailsService 来获取用户的信息 UserDetails</span></span><br><span class="line"><span class="comment">     * 其中包括用户名、密码和所拥有的权限</span></span><br><span class="line"><span class="comment">     * 当其中一个 AuthenticationProvider 认证成功后，后续 provider不再认证</span></span><br><span class="line"><span class="comment">     * */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> DaoAuthenticationProvider <span class="title function_">authenticationProvider</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">DaoAuthenticationProvider</span> <span class="variable">authenticationProvider</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DaoAuthenticationProvider</span>();</span><br><span class="line">        authenticationProvider.setUserDetailsService(userDetailsService);</span><br><span class="line">        authenticationProvider.setPasswordEncoder(passwordEncoder());</span><br><span class="line">        <span class="keyword">return</span> authenticationProvider;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 注册 session 创建和销毁监听器，以便用于支持 session 并发控制</span></span><br><span class="line"><span class="comment">     * 通知 Spring Security 更新会话注册表</span></span><br><span class="line"><span class="comment">     * 实际上创建的监听只使用销毁事件</span></span><br><span class="line"><span class="comment">     **/</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> HttpSessionEventPublisher <span class="title function_">httpSessionEventPublisher</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">HttpSessionEventPublisher</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 跟踪活跃的session</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> SessionRegistry <span class="title function_">sessionRegistry</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">SessionRegistryImpl</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * 用户认证</span></span><br><span class="line"><span class="comment">     * 这里使用通用的用户认证，还有基于内存的用户和JDBC中的用户</span></span><br><span class="line"><span class="comment">     * 数据访问方式可以是多种多样，包括非关系型数据库, 这时就需先自定义实现 UserDetailsService 接口来获取用户信息</span></span><br><span class="line"><span class="comment">     * */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">configure</span><span class="params">(AuthenticationManagerBuilder auth)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        auth.authenticationProvider(authenticationProvider());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * 请求授权配置</span></span><br><span class="line"><span class="comment">     * */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">configure</span><span class="params">(HttpSecurity http)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        http</span><br><span class="line">                .csrf().disable()</span><br><span class="line">                .authorizeRequests()</span><br><span class="line">                <span class="comment">// 允许访问 H2 DB 控制台</span></span><br><span class="line">                .antMatchers(<span class="string">&quot;/h2/**&quot;</span>).permitAll()</span><br><span class="line">                .antMatchers(<span class="string">&quot;/css/**&quot;</span>, <span class="string">&quot;/js/**&quot;</span>, <span class="string">&quot;/fonts/**&quot;</span>).permitAll()</span><br><span class="line">                .antMatchers(HttpMethod.OPTIONS, <span class="string">&quot;/**&quot;</span>).permitAll()</span><br><span class="line">                .antMatchers(<span class="string">&quot;/user/registration*&quot;</span>, <span class="string">&quot;/registration*&quot;</span>, <span class="string">&quot;/successRegister*&quot;</span>, <span class="string">&quot;/login*&quot;</span>, <span class="string">&quot;/logout*&quot;</span>).permitAll()</span><br><span class="line">                .antMatchers(<span class="string">&quot;/invalidSession*&quot;</span>).anonymous()</span><br><span class="line">                .anyRequest().authenticated()</span><br><span class="line">                .and()</span><br><span class="line">                .formLogin().loginPage(<span class="string">&quot;/login&quot;</span>)</span><br><span class="line">                <span class="comment">// 使用自定义登录成功处理</span></span><br><span class="line">                .successHandler(authenticationSuccessHandler)</span><br><span class="line">                <span class="comment">// 使用自定义登录成功处理</span></span><br><span class="line">                .failureHandler(authenticationFailureHandler)</span><br><span class="line">                .permitAll()</span><br><span class="line">                .and()</span><br><span class="line">                .sessionManagement()</span><br><span class="line">                <span class="comment">// 无效 session 跳转</span></span><br><span class="line">                .invalidSessionUrl(<span class="string">&quot;/invalidSession.html&quot;</span>)</span><br><span class="line">                <span class="comment">// 确保单个用户的单个账号，只有一个活跃的session</span></span><br><span class="line">                .maximumSessions(<span class="number">1</span>).sessionRegistry(sessionRegistry()).and()</span><br><span class="line">                <span class="comment">// 创建一个新的HTTP会话后，使旧的HTTP会话无效，并将旧会话的属性复制过来</span></span><br><span class="line">                .sessionFixation().migrateSession()</span><br><span class="line">                .and()</span><br><span class="line">                .logout()</span><br><span class="line">                <span class="comment">// 使用自定义注销登录成功处理</span></span><br><span class="line">                .logoutSuccessHandler(myLogoutSuccessHandler)</span><br><span class="line">                <span class="comment">// 会清空所有已定义的session</span></span><br><span class="line">                .invalidateHttpSession(<span class="literal">false</span>)</span><br><span class="line">                <span class="comment">// 删除 cookie</span></span><br><span class="line">                .deleteCookies(<span class="string">&quot;JSESSIONID&quot;</span>)</span><br><span class="line">                .permitAll();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<p>实现用户信息接口，自定义获取用户信息的方法，主要时实现了 loadUserByUsername 方法，并返回一个封装了用户账号，密码，权限等信息的 UserDetails 类型的实例 User。<br><strong>MyUserDetailServiceImpl.java</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> top.yekongle.login.security;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.transaction.Transactional;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.GrantedAuthority;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.authority.SimpleGrantedAuthority;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.userdetails.UserDetails;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.userdetails.UserDetailsService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.userdetails.UsernameNotFoundException;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> top.yekongle.login.repository.UserAuthorityRepository;</span><br><span class="line"><span class="keyword">import</span> top.yekongle.login.repository.UserRepository;</span><br><span class="line"><span class="keyword">import</span> top.yekongle.login.entity.User;</span><br><span class="line"><span class="keyword">import</span> top.yekongle.login.entity.UserAuthority;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>:</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: Yekongle</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span>: 2020年5月5日</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@Service(&quot;userDetailsService&quot;)</span></span><br><span class="line"><span class="meta">@Transactional</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyUserDetailServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">UserDetailsService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserRepository userRepository;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserAuthorityRepository userAuthorityRepository;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> UserDetails <span class="title function_">loadUserByUsername</span><span class="params">(String email)</span> <span class="keyword">throws</span> UsernameNotFoundException &#123;</span><br><span class="line">        log.info(<span class="string">&quot;Email:&quot;</span> + email);</span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> userRepository.findByEmail(email);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (user == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">UsernameNotFoundException</span>(<span class="string">&quot;找不到该用户: &quot;</span>+ email);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">enabled</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">accountNonExpired</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">credentialsNonExpired</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">accountNonLocked</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">org</span>.springframework.security.core.userdetails</span><br><span class="line">                .User(user.getEmail(), user.getPassword(), enabled, accountNonExpired</span><br><span class="line">                , credentialsNonExpired, accountNonLocked,	getAuthorities(user.getEmail()));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> List&lt;GrantedAuthority&gt; <span class="title function_">getAuthorities</span> <span class="params">(String username)</span> &#123;</span><br><span class="line">        List&lt;GrantedAuthority&gt; authorities = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        List&lt;UserAuthority&gt; userAuthorityList = userAuthorityRepository.findByUsername(username);</span><br><span class="line">        log.info(<span class="string">&quot;role size:&quot;</span> + userAuthorityList.size());</span><br><span class="line">        <span class="keyword">for</span> (UserAuthority userAuthority : userAuthorityList) &#123;</span><br><span class="line">            authorities.add(<span class="keyword">new</span> <span class="title class_">SimpleGrantedAuthority</span>(userAuthority.getRole()));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> authorities;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>自定义登录成功处理器，这里主要是设置会话有效期和指定重定向页面<br><strong>CustomAuthenticationSuccessHandler.java</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> top.yekongle.login.security;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpSession;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.Authentication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.userdetails.UserDetails;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.web.DefaultRedirectStrategy;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.web.RedirectStrategy;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.web.WebAttributes;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.web.authentication.AuthenticationSuccessHandler;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: Yekongle</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span>: 2020年5月13日</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@Component(&quot;authenticationSuccessHandler&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CustomAuthenticationSuccessHandler</span> <span class="keyword">implements</span> <span class="title class_">AuthenticationSuccessHandler</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">RedirectStrategy</span> <span class="variable">redirectStrategy</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DefaultRedirectStrategy</span>();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onAuthenticationSuccess</span><span class="params">(HttpServletRequest request, HttpServletResponse response,</span></span><br><span class="line"><span class="params">                                        Authentication authentication)</span> <span class="keyword">throws</span> IOException, ServletException &#123;</span><br><span class="line">        log.info(<span class="string">&quot;onAuthenticationSuccess&quot;</span>);</span><br><span class="line">        redirectStrategy.sendRedirect(request, response, <span class="string">&quot;/home.html&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取session,如果 session不存在，则返回null。</span></span><br><span class="line">        <span class="keyword">final</span> <span class="type">HttpSession</span> <span class="variable">session</span> <span class="operator">=</span> request.getSession(<span class="literal">false</span>);</span><br><span class="line">        <span class="keyword">if</span> (session != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="comment">// session 有效期 30 min</span></span><br><span class="line">            session.setMaxInactiveInterval(<span class="number">30</span>*<span class="number">60</span>);</span><br><span class="line">            <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> <span class="built_in">this</span>.getCurrentUsername(authentication);</span><br><span class="line">            session.setAttribute(<span class="string">&quot;user&quot;</span>, username);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 清除 session 中的 AUTHENTICATION_EXCEPTION 属性</span></span><br><span class="line">        clearAuthenticationAttributes(request);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String <span class="title function_">getCurrentUsername</span><span class="params">(Authentication authentication)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">if</span> (authentication.getPrincipal() <span class="keyword">instanceof</span> UserDetails) &#123;</span><br><span class="line">            username = ((UserDetails) authentication.getPrincipal()).getUsername();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            username = authentication.getName();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> username;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">clearAuthenticationAttributes</span><span class="params">(<span class="keyword">final</span> HttpServletRequest request)</span> &#123;</span><br><span class="line">        <span class="keyword">final</span> <span class="type">HttpSession</span> <span class="variable">session</span> <span class="operator">=</span> request.getSession(<span class="literal">false</span>);</span><br><span class="line">        <span class="keyword">if</span> (session == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        session.removeAttribute(WebAttributes.AUTHENTICATION_EXCEPTION);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>自定义登录失败处理器，控制跳转，返回错误信息<br><strong>CustomAuthenticationFailureHandler.java</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> top.yekongle.login.security;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.Locale;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.MessageSource;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.AuthenticationException;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.web.WebAttributes;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.LocaleResolver;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@Component(&quot;authenticationFailureHandler&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CustomAuthenticationFailureHandler</span> <span class="keyword">extends</span> <span class="title class_">SimpleUrlAuthenticationFailureHandler</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onAuthenticationFailure</span><span class="params">(<span class="keyword">final</span> HttpServletRequest request, <span class="keyword">final</span> HttpServletResponse response, <span class="keyword">final</span> AuthenticationException exception)</span> <span class="keyword">throws</span> IOException, ServletException &#123;</span><br><span class="line">        log.info(<span class="string">&quot;onAuthenticationFailure&quot;</span>);</span><br><span class="line">        setDefaultFailureUrl(<span class="string">&quot;/login?error=true&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="built_in">super</span>.onAuthenticationFailure(request, response, exception);</span><br><span class="line"></span><br><span class="line">        request.getSession()</span><br><span class="line">                .setAttribute(WebAttributes.AUTHENTICATION_EXCEPTION, exception.getMessage());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>注销登录成功处理<br><strong>MyLogoutSuccessHandler.java</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> top.yekongle.login.security;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpSession;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.Authentication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.web.authentication.logout.LogoutSuccessHandler;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: Yekongle</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span>: 2020年5月13日</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Component(&quot;myLogoutSuccessHandler&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyLogoutSuccessHandler</span> <span class="keyword">implements</span> <span class="title class_">LogoutSuccessHandler</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onLogoutSuccess</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Authentication authentication)</span> <span class="keyword">throws</span> IOException, ServletException &#123;</span><br><span class="line">        <span class="keyword">final</span> <span class="type">HttpSession</span> <span class="variable">session</span> <span class="operator">=</span> request.getSession();</span><br><span class="line">        <span class="keyword">if</span> (session != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="comment">// 清理自定义 session 属性信息</span></span><br><span class="line">            session.removeAttribute(<span class="string">&quot;user&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        response.sendRedirect(<span class="string">&quot;/logout.html?logSucc=true&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>登录请求处理<br><strong>LoginController.java</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> top.yekongle.login.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.security.authentication.AnonymousAuthenticationToken;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.Authentication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.context.SecurityContextHolder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: Yekongle</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span>: 2020年5月5日</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LoginController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/login&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">login</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">Authentication</span> <span class="variable">auth</span> <span class="operator">=</span> SecurityContextHolder.getContext().getAuthentication();</span><br><span class="line">        <span class="comment">// 如果已经登录则跳转到 home 页面</span></span><br><span class="line">        <span class="keyword">if</span> (auth <span class="keyword">instanceof</span> AnonymousAuthenticationToken) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;login&quot;</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;home&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>登录页面<br><strong>loign.html</strong></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns:th</span>=<span class="string">&quot;http://www.thymeleaf.org&quot;</span>&gt;</span><span class="comment">&lt;!-- Thymeleaf的命名空间，将静态页面转换为动态的视图 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">content</span>=<span class="string">&quot;text/html;charset=UTF-8&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/css/bootstrap.min.css&#125;&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.middle</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">float</span>: none;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: inline-block;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">vertical-align</span>: middle;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">th:if</span>=<span class="string">&quot;$&#123;param.error != null&#125;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;alert alert-danger&quot;</span> <span class="attr">th:utext</span>=<span class="string">&quot;$&#123;session[SPRING_SECURITY_LAST_EXCEPTION]&#125;&quot;</span>&gt;</span>error<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">name</span>=<span class="string">&#x27;loginForm&#x27;</span> <span class="attr">action</span>=<span class="string">&quot;login&quot;</span> <span class="attr">method</span>=<span class="string">&quot;POST&quot;</span> <span class="attr">onsubmit</span>=<span class="string">&quot;return validate();&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group col-md-6 vertical-middle-sm&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;email&quot;</span>&gt;</span>邮箱<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;email&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">aria-describedby</span>=<span class="string">&quot;emailHelp&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group col-md-6&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;password&quot;</span>&gt;</span>密码<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">id</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-primary&quot;</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-default&quot;</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/registration.html&#125;&quot;</span> &gt;</span>没有账号？<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">th:src</span>=<span class="string">&quot;@&#123;/js/jquery-3.5.1.min.js&#125;&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">th:src</span>=<span class="string">&quot;@&#123;/js/bootstrap.min.js&#125;&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">th:inline</span>=<span class="string">&quot;javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">	    <span class="keyword">function</span> <span class="title function_">validate</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">		        <span class="keyword">if</span> (<span class="variable language_">document</span>.<span class="property">loginForm</span>.<span class="property">username</span>.<span class="property">value</span> == <span class="string">&quot;&quot;</span> &amp;&amp; <span class="variable language_">document</span>.<span class="property">loginForm</span>.<span class="property">password</span>.<span class="property">value</span> == <span class="string">&quot;&quot;</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">		            <span class="title function_">alert</span>(<span class="string">&quot;账号密码不能为空！&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">		            <span class="variable language_">document</span>.<span class="property">loginForm</span>.<span class="property">username</span>.<span class="title function_">focus</span>();</span></span><br><span class="line"><span class="language-javascript">		            <span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line"><span class="language-javascript">		        &#125;</span></span><br><span class="line"><span class="language-javascript">		        <span class="keyword">if</span> (<span class="variable language_">document</span>.<span class="property">loginForm</span>.<span class="property">username</span>.<span class="property">value</span> == <span class="string">&quot;&quot;</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">		            <span class="title function_">alert</span>(<span class="string">&quot;账号不能为空！&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">		            <span class="variable language_">document</span>.<span class="property">loginForm</span>.<span class="property">username</span>.<span class="title function_">focus</span>();</span></span><br><span class="line"><span class="language-javascript">		            <span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line"><span class="language-javascript">		        &#125;</span></span><br><span class="line"><span class="language-javascript">		        <span class="keyword">if</span> (<span class="variable language_">document</span>.<span class="property">loginForm</span>.<span class="property">password</span>.<span class="property">value</span> == <span class="string">&quot;&quot;</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">		            <span class="title function_">alert</span>(<span class="string">&quot;密码不能为空！&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">		            <span class="variable language_">document</span>.<span class="property">loginForm</span>.<span class="property">password</span>.<span class="title function_">focus</span>();</span></span><br><span class="line"><span class="language-javascript">		            <span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line"><span class="language-javascript">		        &#125;</span></span><br><span class="line"><span class="language-javascript">		    &#125;</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>主页<br><strong>home.html</strong></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns:th</span>=<span class="string">&quot;http://www.thymeleaf.org&quot;</span>&gt;</span><span class="comment">&lt;!-- Thymeleaf的命名空间，将静态页面转换为动态的视图 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">content</span>=<span class="string">&quot;text/html;charset=UTF-8&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/css/bootstrap.min.css&#125;&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">nav</span> <span class="attr">class</span>=<span class="string">&quot;navbar navbar-default&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container-fluid&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;navbar-header&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;navbar-brand&quot;</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>home<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;nav navbar-nav navbar-right&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">style</span>=<span class="string">&quot;color:blue;&quot;</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;session[user]&#125;&quot;</span> &gt;</span>yekongle<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">style</span>=<span class="string">&quot;color:orange;&quot;</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/logout&#125;&quot;</span> &gt;</span>logout<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">th:src</span>=<span class="string">&quot;@&#123;/js/jquery-3.5.1.min.js&#125;&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">th:src</span>=<span class="string">&quot;@&#123;/js/bootstrap.min.js&#125;&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">th:inline</span>=<span class="string">&quot;javascript&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>


<p>注销登录结果页面<br><strong>logout.html</strong></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns:th</span>=<span class="string">&quot;http://www.thymeleaf.org&quot;</span>&gt;</span><span class="comment">&lt;!-- Thymeleaf的命名空间，将静态页面转换为动态的视图 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">content</span>=<span class="string">&quot;text/html;charset=UTF-8&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/css/bootstrap.min.css&#125;&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span> <span class="attr">id</span>=<span class="string">&quot;error&quot;</span> <span class="attr">class</span>=<span class="string">&quot;alert alert-danger&quot;</span> <span class="attr">th:if</span>=<span class="string">&quot;$&#123;session[SPRING_SECURITY_LAST_EXCEPTION]&#125;&quot;</span> &gt;</span>退出登录失败<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span> <span class="attr">id</span>=<span class="string">&quot;success&quot;</span> <span class="attr">class</span>=<span class="string">&quot;alert alert-info&quot;</span> <span class="attr">th:if</span>=<span class="string">&quot;$&#123;param.logSucc&#125;&quot;</span> &gt;</span>退出登录成功<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-primary&quot;</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/login&#125;&quot;</span> &gt;</span>登录<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>无效 session 页面<br><strong>invalidSession.html</strong></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns:th</span>=<span class="string">&quot;http://www.thymeleaf.org&quot;</span>&gt;</span><span class="comment">&lt;!-- Thymeleaf的命名空间，将静态页面转换为动态的视图 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">content</span>=<span class="string">&quot;text/html;charset=UTF-8&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/css/bootstrap.min.css&#125;&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">&quot;alert alert-danger&quot;</span> &gt;</span>登录过期,请重新登录<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-primary&quot;</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/login&#125;&quot;</span> &gt;</span>重新登录<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">th:src</span>=<span class="string">&quot;@&#123;/js/jquery-3.5.1.min.js&#125;&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">th:src</span>=<span class="string">&quot;@&#123;/js/bootstrap.min.js&#125;&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>


<h3 id="运行演示"><a href="#运行演示" class="headerlink" title="运行演示"></a>运行演示</h3><p>启动项目</p>
<ol>
<li>访问 <a href="http://localhost:8080，会自动跳到登录页面，先点击跳到注册页面">http://localhost:8080，会自动跳到登录页面，先点击跳到注册页面</a></li>
</ol>
<p><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/backend/spring_boot/login/2.png"></p>
<ol start="2">
<li><p>注册账号，邮箱：<a href="mailto:&#116;&#101;&#x73;&#116;&#64;&#103;&#109;&#97;&#x69;&#x6c;&#46;&#99;&#111;&#x6d;">&#116;&#101;&#x73;&#116;&#64;&#103;&#109;&#97;&#x69;&#x6c;&#46;&#99;&#111;&#x6d;</a> 密码：A123456!<br><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/backend/spring_boot/login/3.png"></p>
</li>
<li><p>注册成功，立即登录<br><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/backend/spring_boot/login/4.png"></p>
</li>
</ol>
<ol start="4">
<li><p>输入刚刚注册的邮箱和密码<br><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/backend/spring_boot/login/5.png"></p>
</li>
<li><p>登录成功，跳转到主页，右侧可以显示返回了用户的邮箱<br><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/backend/spring_boot/login/6.png"></p>
</li>
</ol>
<ol start="6">
<li>如果超过了设定的会话有效期 30 min 没有操作行为，则会过期<br><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/backend/spring_boot/login/7.png"></li>
</ol>
<ol start="7">
<li>点击 logout，注销成功<br><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/backend/spring_boot/login/8.png"></li>
</ol>
<p>项目已上传至 Github: <a href="https://github.com/yekongle/springboot-code-samples/tree/master/springboot-login-sample">https://github.com/yekongle/springboot-code-samples/tree/master/springboot-login-sample</a> , 希望对小伙伴们有帮助哦。</p>
<p>参考链接：</p>
<ul>
<li><a href="https://v4.bootcss.com/docs/getting-started/introduction/">https://v4.bootcss.com/docs/getting-started/introduction/</a></li>
<li><a href="https://github.com/Baeldung/spring-security-registration">https://github.com/Baeldung/spring-security-registration</a></li>
</ul>
]]></content>
      <categories>
        <category>Spring Boot</category>
      </categories>
      <tags>
        <tag>SpringBoot</tag>
        <tag>Login</tag>
      </tags>
  </entry>
  <entry>
    <title>Spring Boot2 实战系列之使用分页插件PageHelper</title>
    <url>/2020/04/27/springboot-pagehelper-sample/</url>
    <content><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>在网站里我们常常会看到可以分页的列表，这次我们就通过 springboot + thymeleaf + pagehelper 来实现这一功能。PageHelper 是开源的 MyBatis 分页插件， 支持任何复杂的单表、多表分页，详细使用方法可查看官方文档 <a href="https://pagehelper.github.io/docs/howtouse/">https://pagehelper.github.io/docs/howtouse/</a></p>
<p>下面通过一个展示商品信息的页面来演示怎样使用 pagehelper</p>
<span id="more"></span>
<h3 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h3><p>项目结构图如下：<br><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/backend/spring_boot/page_helper/1.png"></p>
<p>pom 依赖如下：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">	<span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2.5.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>top.yekongle<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springboot-pagehelper-sample<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">name</span>&gt;</span>springboot-pagehelper-sample<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">description</span>&gt;</span>Pagehelper sample for Spring Boot<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-thymeleaf<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.spring.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.pagehelper<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>pagehelper-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.13<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-thymeleaf<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.junit.vintage<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit-vintage-engine<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="代码编写"><a href="#代码编写" class="headerlink" title="代码编写"></a>代码编写</h3><p>首先先创建一个名为 product 的数据表，并插入一些数据</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"># Host: localhost  (Version <span class="number">5.7</span><span class="number">.21</span><span class="operator">-</span>log)</span><br><span class="line"># <span class="type">Date</span>: <span class="number">2020</span><span class="number">-04</span><span class="number">-24</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">40</span></span><br><span class="line"># Generator: MySQL<span class="operator">-</span>Front <span class="number">6.0</span>  (Build <span class="number">2.20</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#</span><br><span class="line"># Structure <span class="keyword">for</span> <span class="keyword">table</span> &quot;product&quot;</span><br><span class="line">#</span><br><span class="line"></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `product`;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `product` (</span><br><span class="line">  `Id` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  `category` <span class="type">varchar</span>(<span class="number">10</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `name` <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `discount` <span class="type">varchar</span>(<span class="number">10</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `price` <span class="keyword">double</span>(<span class="number">10</span>,<span class="number">0</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`Id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8;</span><br><span class="line"></span><br><span class="line">#</span><br><span class="line"># Data <span class="keyword">for</span> <span class="keyword">table</span> &quot;product&quot;</span><br><span class="line">#</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `product` <span class="keyword">VALUES</span> (<span class="number">1</span>,<span class="string">&#x27;零食&#x27;</span>,<span class="string">&#x27;卫龙辣条&#x27;</span>,<span class="string">&#x27;8折&#x27;</span>,<span class="number">10</span>),(<span class="number">2</span>,<span class="string">&#x27;洗发水&#x27;</span>,<span class="string">&#x27;霸王&#x27;</span>,<span class="string">&#x27;8折&#x27;</span>,<span class="number">69</span>),(<span class="number">3</span>,<span class="string">&#x27;手机&#x27;</span>,<span class="string">&#x27;小米10&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="number">3499</span>),(<span class="number">4</span>,<span class="string">&#x27;手机&#x27;</span>,<span class="string">&#x27;小米10 Pro&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="number">4999</span>),(<span class="number">5</span>,<span class="string">&#x27;手机&#x27;</span>,<span class="string">&#x27;华为P40&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="number">4499</span>),(<span class="number">6</span>,<span class="string">&#x27;男装&#x27;</span>,<span class="string">&#x27;T恤&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="number">59</span>),(<span class="number">7</span>,<span class="string">&#x27;男装&#x27;</span>,<span class="string">&#x27;休闲裤&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="number">89</span>),(<span class="number">8</span>,<span class="string">&#x27;男装&#x27;</span>,<span class="string">&#x27;牛仔裤&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="number">99</span>),(<span class="number">9</span>,<span class="string">&#x27;数码&#x27;</span>,<span class="string">&#x27;游戏主机&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="number">5999</span>),(<span class="number">10</span>,<span class="string">&#x27;数码&#x27;</span>,<span class="string">&#x27;数码相机&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="number">5999</span>),(<span class="number">11</span>,<span class="string">&#x27;办公&#x27;</span>,<span class="string">&#x27;打印机&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="number">2999</span>),(<span class="number">12</span>,<span class="string">&#x27;办公&#x27;</span>,<span class="string">&#x27;投影机&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="number">1999</span>),(<span class="number">13</span>,<span class="string">&#x27;办公&#x27;</span>,<span class="string">&#x27;会议白板&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="number">999</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>Product.java，商品实体类</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> top.yekongle.pagehelper.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment">* <span class="doctag">@Description</span>: </span></span><br><span class="line"><span class="comment">* <span class="doctag">@Author</span>: Yekongle </span></span><br><span class="line"><span class="comment">* <span class="doctag">@Date</span>: 2020年4月22日</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Product</span> &#123;</span><br><span class="line">	<span class="keyword">private</span> Integer id;</span><br><span class="line">	<span class="keyword">private</span> String category;</span><br><span class="line">	<span class="keyword">private</span> String name;</span><br><span class="line">	<span class="keyword">private</span> String discount;</span><br><span class="line">	<span class="keyword">private</span> <span class="type">double</span> price;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>ProductMapper.java，商品数据操作接口</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> top.yekongle.pagehelper.mapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> top.yekongle.pagehelper.entity.Product;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment">* <span class="doctag">@Description</span>: </span></span><br><span class="line"><span class="comment">* <span class="doctag">@Author</span>: Yekongle </span></span><br><span class="line"><span class="comment">* <span class="doctag">@Date</span>: 2020年4月22日</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">ProductMapper</span> &#123;</span><br><span class="line">	List&lt;Product&gt; <span class="title function_">listProduct</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>在 resources 下新建一个 mybatis 目录，创建 mybatis 配置文件</p>
<p>mybatis-config.xml</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">configuration</span></span></span><br><span class="line"><span class="meta">        <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">typeAlias</span> <span class="attr">alias</span>=<span class="string">&quot;Integer&quot;</span> <span class="attr">type</span>=<span class="string">&quot;java.lang.Integer&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">typeAlias</span> <span class="attr">alias</span>=<span class="string">&quot;Long&quot;</span> <span class="attr">type</span>=<span class="string">&quot;java.lang.Long&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">typeAlias</span> <span class="attr">alias</span>=<span class="string">&quot;HashMap&quot;</span> <span class="attr">type</span>=<span class="string">&quot;java.util.HashMap&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">typeAlias</span> <span class="attr">alias</span>=<span class="string">&quot;LinkedHashMap&quot;</span> <span class="attr">type</span>=<span class="string">&quot;java.util.LinkedHashMap&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">typeAlias</span> <span class="attr">alias</span>=<span class="string">&quot;ArrayList&quot;</span> <span class="attr">type</span>=<span class="string">&quot;java.util.ArrayList&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">typeAlias</span> <span class="attr">alias</span>=<span class="string">&quot;LinkedList&quot;</span> <span class="attr">type</span>=<span class="string">&quot;java.util.LinkedList&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>在 mybatis 目录下新建一个 mapper 目录存放 mapper.xml 文件<br>ProductMapper.xml</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">mapper</span> <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span> <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;top.yekongle.pagehelper.mapper.ProductMapper&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;listProduct&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;Product&quot;</span>&gt;</span></span><br><span class="line">		SELECT * from product order by id</span><br><span class="line">	<span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>编辑全局配置文件，配置数据库连接信息，thymeleaf 配置，mybatis 配置以及 pagehelper 配置。<br>application.properties</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 数据库配置</span></span><br><span class="line">spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver</span><br><span class="line">spring.datasource.url=jdbc:mysql://localhost:3306/mytest?characterEncoding=utf-8&amp;useSSL=<span class="literal">false</span>&amp;serverTimezone=UTC  </span><br><span class="line">spring.datasource.username=root</span><br><span class="line">spring.datasource.password=yekongle</span><br><span class="line"></span><br><span class="line"><span class="comment"># Thymeleaf 配置</span></span><br><span class="line">spring.thymeleaf.prefix=classpath:/templates/</span><br><span class="line">spring.thymeleaf.suffix=.html</span><br><span class="line">spring.thymeleaf.mode=HTML</span><br><span class="line">spring.thymeleaf.encoding=UTF-8</span><br><span class="line">spring.thymeleaf.cache=<span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># mybatis 配置</span></span><br><span class="line">mybatis.type-aliases-package=top.yekongle.pagehelper.entity</span><br><span class="line">mybatis.config-location=classpath:mybatis/mybatis-config.xml</span><br><span class="line">mybatis.mapper-locations=classpath:mybatis/mapper/*.xml</span><br><span class="line"></span><br><span class="line"><span class="comment"># pagehelper 配置</span></span><br><span class="line"><span class="comment"># 指定分页插件使用哪种方言</span></span><br><span class="line">pagehelper.helper-dialect=mysql</span><br><span class="line"><span class="comment"># 在分页查询时进行 count 查询</span></span><br><span class="line">pagehelper.row-bounds-with-count=<span class="literal">true</span></span><br><span class="line"><span class="comment"># 用户输入的页数不在合法范围能够正确的响应到正确的结果页面, pageNum&lt;=0 会查询第一页, pageNum&gt;总页数 会查询最后一页</span></span><br><span class="line">pagehelper.reasonable=<span class="literal">true</span></span><br></pre></td></tr></table></figure>

<p>PageController.java，页面控制类，在这里使用 pagehelper 获取想要的页面和记录数并返回到前端</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> top.yekongle.pagehelper.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ui.Model;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestParam;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ResponseBody;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.ModelAndView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.github.pagehelper.PageHelper;</span><br><span class="line"><span class="keyword">import</span> com.github.pagehelper.PageInfo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> top.yekongle.pagehelper.entity.Product;</span><br><span class="line"><span class="keyword">import</span> top.yekongle.pagehelper.mapper.ProductMapper;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment">* <span class="doctag">@Description</span>: 页面控制类</span></span><br><span class="line"><span class="comment">* <span class="doctag">@Author</span>: Yekongle </span></span><br><span class="line"><span class="comment">* <span class="doctag">@Date</span>: 2020年4月22日</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PageController</span> &#123;</span><br><span class="line">	</span><br><span class="line">	<span class="meta">@Autowired</span></span><br><span class="line">	<span class="keyword">private</span> ProductMapper productMapper;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * async: 是否已加载</span></span><br><span class="line"><span class="comment">	 * pageNum：当前页</span></span><br><span class="line"><span class="comment">	 * pageSize：每页的数量</span></span><br><span class="line"><span class="comment">	 * */</span>	</span><br><span class="line">	<span class="meta">@GetMapping</span></span><br><span class="line">	<span class="keyword">public</span> ModelAndView <span class="title function_">index</span><span class="params">(<span class="meta">@RequestParam(value = &quot;async&quot;, required = false)</span> <span class="type">boolean</span> async,</span></span><br><span class="line"><span class="params">			<span class="meta">@RequestParam(value = &quot;pageNum&quot;, required = false, defaultValue = &quot;0&quot;)</span> <span class="type">int</span> pageNum, </span></span><br><span class="line"><span class="params">			<span class="meta">@RequestParam(value = &quot;pageSize&quot;, required = false, defaultValue = &quot;1&quot;)</span> <span class="type">int</span> pageSize, Model model)</span> &#123;</span><br><span class="line">		log.info(<span class="string">&quot;pageNum&#123;&#125;, pageSize&#123;&#125;&quot;</span>, pageNum, pageSize);</span><br><span class="line">        <span class="comment">// 开始分页</span></span><br><span class="line">		PageHelper.startPage(pageNum, pageSize);</span><br><span class="line">		List&lt;Product&gt; productList = productMapper.listProduct();</span><br><span class="line">		</span><br><span class="line">		<span class="type">PageInfo</span> <span class="variable">page</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PageInfo</span>(productList);</span><br><span class="line">		model.addAttribute(<span class="string">&quot;page&quot;</span>, page);</span><br><span class="line">		</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">ModelAndView</span>(async == <span class="literal">true</span> ? <span class="string">&quot;index :: #mainContainerRepleace&quot;</span> : <span class="string">&quot;index&quot;</span>, <span class="string">&quot;userModel&quot;</span>,</span><br><span class="line">				model);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>SpringbootPagehelperSampleApplication.java, 启动类， @MapperScan: 指定mapper所在包</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> top.yekongle.pagehelper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.mybatis.spring.annotation.MapperScan;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 项目启动类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@MapperScan</span>：指定mapper所在包</span></span><br><span class="line"><span class="comment"> * */</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@MapperScan(&quot;top.yekongle.pagehelper.mapper&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SpringbootPagehelperSampleApplication</span> &#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">		SpringApplication.run(SpringbootPagehelperSampleApplication.class, args);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<p>前端页面编写，分为头部(header)，尾部(footer)，页码控制(page) 和 主页(index)</p>
<p>header.html</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/1999/xhtml&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">xmlns:th</span>=<span class="string">&quot;http://www.thymeleaf.org&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">xmlns:sec</span>=<span class="string">&quot;http://www.thymeleaf.org/thymeleaf-extras-springsecurity5&quot;</span> <span class="attr">data-th-fragment</span>=<span class="string">&quot;header&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1, shrink-to-fit=no&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- Bootstrap CSS --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;../../css/bootstrap.min.css&quot;</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/css/bootstrap.min.css&#125;&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!-- toastr CSS --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;../../css/toastr.min.css&quot;</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/css/toastr.min.css&#125;&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line">	<span class="comment">&lt;!-- Font-Awesome CSS --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;../../css/font-awesome.min.css&quot;</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/css/font-awesome.min.css&#125;&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>footer.html</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">footer</span> <span class="attr">class</span>=<span class="string">&quot;blog-footer bg-inverse&quot;</span> <span class="attr">data-th-fragment</span>=<span class="string">&quot;footer&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;m-0 text-center text-white&quot;</span>&gt;</span></span><br><span class="line">				© 2020 <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://www.yekongle.top&quot;</span>&gt;</span>yekongle.top<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="comment">&lt;!-- JavaScript --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;../js/jquery.min.js&quot;</span> <span class="attr">th:src</span>=<span class="string">&quot;@&#123;/js/jquery.min.js&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;../js/bootstrap.min.js&quot;</span> <span class="attr">th:src</span>=<span class="string">&quot;@&#123;/js/bootstrap.min.js&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;../js/main.js&quot;</span> <span class="attr">th:src</span>=<span class="string">&quot;@&#123;/js/main.js&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;../js/thymeleaf-bootstrap-paginator.js&quot;</span> <span class="attr">th:src</span>=<span class="string">&quot;@&#123;/js/thymeleaf-bootstrap-paginator.js&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;../js/toastr.min.js&quot;</span> <span class="attr">th:src</span>=<span class="string">&quot;@&#123;/js/toastr.min.js&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>page.html</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">nav</span> <span class="attr">data-th-fragment</span>=<span class="string">&quot;page&quot;</span> <span class="attr">data-th-if</span>=<span class="string">&quot;$&#123;page.total gt 0&#125;&quot;</span> <span class="attr">data-th-object</span>=<span class="string">&quot;$&#123;page&#125;&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 处理页数小于等于7 的情况 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;pagination&quot;</span> <span class="attr">data-th-if</span>=<span class="string">&quot;$&#123;page.pages le 7&#125;&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 总记录数 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;tbpage-total-elements disabled&quot;</span>&gt;</span>共[[$&#123;page.total&#125;]]条<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 页面大小 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">select</span> <span class="attr">class</span>=<span class="string">&quot;custom-select tbpage-size&quot;</span> <span class="attr">data-th-attr</span>=<span class="string">&quot;pageSize=$&#123;page.pageSize&#125;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">data-th-each</span>=<span class="string">&quot;i : $&#123;#arrays.toIntegerArray(&#123;1, 3, 5,10,40,100&#125;)&#125;&quot;</span> <span class="attr">data-th-value</span>=<span class="string">&quot;$&#123;i&#125;&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">data-th-selected</span>=<span class="string">&quot;$&#123;i eq page.pageSize&#125;&quot;</span> <span class="attr">data-th-text</span>=<span class="string">&quot;$&#123;i&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 上一页 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;page-item&quot;</span> <span class="attr">data-th-classappend</span>=<span class="string">&quot;$&#123;page.isFirstPage&#125; ? &#x27;disabled&#x27; : &#x27;&#x27;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:void(0);&quot;</span> <span class="attr">class</span>=<span class="string">&quot;page-link tbpage-item&quot;</span> <span class="attr">data-th-attr</span>=<span class="string">&quot;pageNum=$&#123;page.prePage&#125;&quot;</span></span></span><br><span class="line"><span class="tag">               <span class="attr">aria-label</span>=<span class="string">&quot;Previous&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">aria-hidden</span>=<span class="string">&quot;true&quot;</span>&gt;</span>«<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 迭代生成页码 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;page-item&quot;</span> <span class="attr">data-th-each</span>=<span class="string">&quot;i : $&#123;#numbers.sequence(1, page.pages)&#125;&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">data-th-classappend</span>=<span class="string">&quot;$&#123;page.pageNum eq i&#125; ? &#x27;active&#x27; : &#x27;&#x27;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;page-link tbpage-item&quot;</span> <span class="attr">data-th-attr</span>=<span class="string">&quot;pageNum=$&#123;i&#125;&quot;</span> <span class="attr">href</span>=<span class="string">&quot;javascript:void(0);&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">data-th-text</span>=<span class="string">&quot;$&#123;i&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 下一页 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;page-item&quot;</span> <span class="attr">data-th-classappend</span>=<span class="string">&quot;$&#123;page.isLastPage&#125; ? &#x27;disabled&#x27; : &#x27;&#x27;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:void(0);&quot;</span> <span class="attr">class</span>=<span class="string">&quot;page-link tbpage-item&quot;</span> <span class="attr">data-th-attr</span>=<span class="string">&quot;pageNum=$&#123;page.nextPage&#125;&quot;</span></span></span><br><span class="line"><span class="tag">               <span class="attr">aria-label</span>=<span class="string">&quot;Next&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">aria-hidden</span>=<span class="string">&quot;true&quot;</span>&gt;</span>»<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 处理页数大于7 的情况 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;pagination&quot;</span> <span class="attr">data-th-if</span>=<span class="string">&quot;$&#123;page.pages gt 7&#125;&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 总记录数 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;tbpage-total-elements disabled&quot;</span>&gt;</span>共[[$&#123;page.total&#125;]]条<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 页面大小 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">select</span> <span class="attr">class</span>=<span class="string">&quot;custom-select tbpage-size&quot;</span> <span class="attr">data-th-attr</span>=<span class="string">&quot;pageSize=$&#123;page.pageSize&#125;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">data-th-each</span>=<span class="string">&quot;i : $&#123;#arrays.toIntegerArray(&#123;1, 5,10,40,100&#125;)&#125;&quot;</span> <span class="attr">data-th-value</span>=<span class="string">&quot;$&#123;i&#125;&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">data-th-selected</span>=<span class="string">&quot;$&#123;i eq page.pageSize&#125;&quot;</span> <span class="attr">data-th-text</span>=<span class="string">&quot;$&#123;i&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 上一页 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;page-item&quot;</span> <span class="attr">data-th-classappend</span>=<span class="string">&quot;$&#123;page.isFirstPage&#125; ? &#x27;disabled&#x27; : &#x27;&#x27;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:void(0);&quot;</span> <span class="attr">class</span>=<span class="string">&quot;page-link tbpage-item&quot;</span> <span class="attr">data-th-attr</span>=<span class="string">&quot;pageNum=$&#123;page.prePage&#125;&quot;</span></span></span><br><span class="line"><span class="tag">               <span class="attr">aria-label</span>=<span class="string">&quot;Previous&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">aria-hidden</span>=<span class="string">&quot;true&quot;</span>&gt;</span>«<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 首页 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;page-item&quot;</span> <span class="attr">data-th-classappend</span>=<span class="string">&quot;$&#123;page.pageNum eq 1&#125; ? &#x27;active&#x27; : &#x27;&#x27;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:void(0);&quot;</span> <span class="attr">class</span>=<span class="string">&quot;page-link tbpage-item&quot;</span> <span class="attr">data-th-attr</span>=<span class="string">&quot;pageNum=0&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 当前页面小于等于4 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;page-item&quot;</span> <span class="attr">data-th-if</span>=<span class="string">&quot;$&#123;page.pageNum le 4&#125;&quot;</span> <span class="attr">data-th-each</span>=<span class="string">&quot;i : $&#123;#numbers.sequence(2,5)&#125;&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">data-th-classappend</span>=<span class="string">&quot;$&#123;page.pageNum eq i&#125; ? &#x27;active&#x27; : &#x27;&#x27;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;page-link tbpage-item&quot;</span> <span class="attr">href</span>=<span class="string">&quot;javascript:void(0);&quot;</span> <span class="attr">data-th-attr</span>=<span class="string">&quot;pageNum=$&#123;i&#125;&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">data-th-text</span>=<span class="string">&quot;$&#123;i&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;page-item disabled&quot;</span> <span class="attr">data-th-if</span>=<span class="string">&quot;$&#123;page.pageNum le 4&#125;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:void(0);&quot;</span> <span class="attr">class</span>=<span class="string">&quot;page-link tbpage-item&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">aria-hidden</span>=<span class="string">&quot;true&quot;</span>&gt;</span>...<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 最后一页与当前页面之差，小于等于3 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;page-item disabled&quot;</span> <span class="attr">data-th-if</span>=<span class="string">&quot;$&#123;(page.pages-page.pageNum) le 3&#125;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:void(0);&quot;</span> <span class="attr">class</span>=<span class="string">&quot;page-link tbpage-item&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">aria-hidden</span>=<span class="string">&quot;true&quot;</span>&gt;</span>...<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;page-item&quot;</span> <span class="attr">data-th-if</span>=<span class="string">&quot;$&#123;(page.pages-page.pageNum) le 3&#125;&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">data-th-each</span>=<span class="string">&quot;i : $&#123;#numbers.sequence(page.pages-3, page.pages-1)&#125;&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">data-th-classappend</span>=<span class="string">&quot;$&#123;page.pageNum eq i&#125; ? &#x27;active&#x27; : &#x27;&#x27;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;page-link tbpage-item&quot;</span> <span class="attr">href</span>=<span class="string">&quot;javascript:void(0);&quot;</span> <span class="attr">data-th-attr</span>=<span class="string">&quot;pageNum=$&#123;i&#125;&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">data-th-text</span>=<span class="string">&quot;$&#123;i&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 最后一页与当前页面之差大于3，且当前页面大于4--&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;page-item disabled&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">data-th-if</span>=<span class="string">&quot;$&#123;(page.pageNum gt 4) &amp;&amp; ((page.pages - page.pageNum) gt 3 )&#125;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:void(0);&quot;</span> <span class="attr">class</span>=<span class="string">&quot;page-link tbpage-item&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">aria-hidden</span>=<span class="string">&quot;true&quot;</span>&gt;</span>...<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;page-item active&quot;</span> <span class="attr">data-th-if</span>=<span class="string">&quot;$&#123;(page.pageNum gt 4) &amp;&amp; ((page.pages-page.pageNum) gt 3 )&#125;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:void(0);&quot;</span> <span class="attr">class</span>=<span class="string">&quot;page-link tbpage-item&quot;</span> <span class="attr">data-th-attr</span>=<span class="string">&quot;pageNum=$&#123;page.pageNum&#125;&quot;</span>&gt;</span>[[$&#123;page.pageNum&#125;]]<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;page-item&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">data-th-if</span>=<span class="string">&quot;$&#123;(page.pageNum gt 4) &amp;&amp; ((page.pages - page.pageNum) gt 3 )&#125;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:void(0);&quot;</span> <span class="attr">class</span>=<span class="string">&quot;page-link tbpage-item&quot;</span> <span class="attr">data-th-attr</span>=<span class="string">&quot;pageNum=$&#123;page.pageNum + 1&#125;&quot;</span>&gt;</span>[[$&#123;page.pageNum</span><br><span class="line">                + 1&#125;]]<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;page-item&quot;</span> <span class="attr">data-th-if</span>=<span class="string">&quot;$&#123;(page.pageNum gt 4) &amp;&amp; ((page.pages-page.pageNum) gt 3 )&#125;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:void(0);&quot;</span> <span class="attr">class</span>=<span class="string">&quot;page-link tbpage-item&quot;</span> <span class="attr">data-th-attr</span>=<span class="string">&quot;pageNum=$&#123;page.pageNum&#125; + 2&quot;</span>&gt;</span>[[$&#123;page.pageNum</span><br><span class="line">                + 2&#125;]]<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;page-item disabled&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">data-th-if</span>=<span class="string">&quot;$&#123;(page.pageNum gt 4) &amp;&amp; ((page.pages-page.pageNum) gt 3 )&#125;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:void(0);&quot;</span> <span class="attr">class</span>=<span class="string">&quot;page-link tbpage-item&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">aria-hidden</span>=<span class="string">&quot;true&quot;</span>&gt;</span>...<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 最后一页 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;page-item&quot;</span> <span class="attr">data-th-classappend</span>=<span class="string">&quot;$&#123;page.pageNum eq page.pages&#125; ? &#x27;active&#x27; : &#x27;&#x27;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:void(0);&quot;</span> <span class="attr">class</span>=<span class="string">&quot;page-link tbpage-item&quot;</span> <span class="attr">data-th-attr</span>=<span class="string">&quot;pageNum=$&#123;page.pages&#125;&quot;</span>&gt;</span>[[$&#123;page.pages&#125;]]<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 下一页 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;page-item&quot;</span> <span class="attr">data-th-classappend</span>=<span class="string">&quot;$&#123;page.isLastPage&#125; ? &#x27;disabled&#x27; : &#x27;&#x27;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:void(0);&quot;</span> <span class="attr">class</span>=<span class="string">&quot;page-link tbpage-item&quot;</span> <span class="attr">data-th-attr</span>=<span class="string">&quot;pageNum=$&#123;page.nextPage&#125;&quot;</span></span></span><br><span class="line"><span class="tag">               <span class="attr">aria-label</span>=<span class="string">&quot;Next&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">aria-hidden</span>=<span class="string">&quot;true&quot;</span>&gt;</span>»<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>index.html</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/1999/xhtml&quot;</span></span></span><br><span class="line"><span class="tag">	<span class="attr">xmlns:th</span>=<span class="string">&quot;http://www.thymeleaf.org&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span> <span class="attr">th:replace</span>=<span class="string">&quot;~&#123;fragments/header :: header&#125;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;mainContainer&quot;</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;mainContainerRepleace&quot;</span> <span class="attr">class</span>=<span class="string">&quot;row&quot;</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">table</span> <span class="attr">class</span>=<span class="string">&quot;table table-striped&quot;</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">th</span> <span class="attr">data-field</span>=<span class="string">&quot;id&quot;</span>&gt;</span>ID<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">th</span> <span class="attr">data-field</span>=<span class="string">“category”</span>&gt;</span>类别<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">th</span> <span class="attr">data-field</span>=<span class="string">&quot;name&quot;</span>&gt;</span>名字<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">th</span> <span class="attr">data-field</span>=<span class="string">&quot;price&quot;</span>&gt;</span>价格(元)<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">th</span> <span class="attr">data-field</span>=<span class="string">&quot;discount&quot;</span>&gt;</span>优惠<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">tr</span> <span class="attr">th:each</span>=<span class="string">&quot;product : $&#123;page.list&#125;&quot;</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">td</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;product.id&#125;&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">td</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;product.category&#125;&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">td</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;product.name&#125;&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">td</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;product.price&#125;&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">td</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;product.discount&#125;&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">th:replace</span>=<span class="string">&quot;~&#123;fragments/page :: page&#125;&quot;</span>&gt;</span>...<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">div</span> <span class="attr">th:replace</span>=<span class="string">&quot;~&#123;fragments/footer :: footer&#125;&quot;</span>&gt;</span>...<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>




<h3 id="运行演示"><a href="#运行演示" class="headerlink" title="运行演示"></a>运行演示</h3><p>项目启动后，访问 8080 端口</p>
<p>每页展示一条记录<br><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/backend/spring_boot/page_helper/2.png"></p>
<p>每页展示一百条记录<br><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/backend/spring_boot/page_helper/3.png"></p>
<p>项目已上传至 Github: <a href="https://github.com/yekongle/springboot-code-samples/tree/master/springboot-pagehelper-sample">https://github.com/yekongle/springboot-code-samples/tree/master/springboot-pagehelper-sample</a> , 希望对小伙伴们有帮助哦。</p>
]]></content>
      <categories>
        <category>Spring Boot</category>
      </categories>
      <tags>
        <tag>SpringBoot</tag>
        <tag>PageHelper</tag>
      </tags>
  </entry>
  <entry>
    <title>Spring Boot 入门简介</title>
    <url>/2020/05/03/springboot-desc/</url>
    <content><![CDATA[<h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>  Spring Boot 是简化 Spring 应用开发的一个框架块，它整合了 Spring 的整个技术栈，提供了 J2EE 开发一站式解决方案。<br>  它的目标是让你无需手动进行繁杂的配置或者只需要用到很少的配置就可以快速将你的项目运行起来。</p>
<span id="more"></span>

<h3 id="核心功能"><a href="#核心功能" class="headerlink" title="核心功能"></a>核心功能</h3><ul>
<li>内置 Tomat，Jetty 和 Undertow servlet 容器，可以独立运行应用，无需打 war 包</li>
<li>提供一系列的 starter pom 来简化 maven 的依赖加载，可以将 starter pom 理解为实现某个功能所需的相关依赖的集合</li>
<li>自动配置 Spring，会根据项目类路径中的 jar 包，类来自动配置 Bean，从而减少手动配置，涵盖了大多数的开发场景，如果有需要可以自定义自动配置。</li>
<li>准生产的应用监控，如 指标，健康检查和外部化配置</li>
<li>无代码生成和 xml 配置，即 springboot 不是由代码生成来实现的，而是通过条件注解来实现，这是 Spring4.x 提供的新特性。</li>
</ul>
<h3 id="Spring-Boot-starter"><a href="#Spring-Boot-starter" class="headerlink" title="Spring Boot starter"></a>Spring Boot starter</h3><h4 id="Starter-parent"><a href="#Starter-parent" class="headerlink" title="Starter parent"></a>Starter parent</h4><p>  ==spring-boot-starter-parent==, 就是 pom 文件中的这段<br>  <figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2.5.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br></pre></td></tr></table></figure><br>  它是启动 Spring Boot 应用的父依赖，包含了要使用的Java的默认版本，SpringBoot使用的依赖项的默认版本以及Maven插件的默认配置, 点击进去，可以看到它的几个重要配置如下，其中它默认读取资源目录下的 application 文件来进行应用配置，如果没有内容则使用默认的配置，支持 .properties, .yml 和 yaml 格式。</p>
  <figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span> <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2.5.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">relativePath</span>&gt;</span>../../spring-boot-dependencies<span class="tag">&lt;/<span class="name">relativePath</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>Spring Boot Starter Parent<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">description</span>&gt;</span>Parent pom providing dependency and plugin management for applications</span><br><span class="line">    built with Maven<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://projects.spring.io/spring-boot/#/spring-boot-starter-parent<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">project.reporting.outputEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.reporting.outputEncoding</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resource.delimiter</span>&gt;</span>@<span class="tag">&lt;/<span class="name">resource.delimiter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>$&#123;java.version&#125;<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>$&#123;java.version&#125;<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  ...</span><br><span class="line">  </span><br><span class="line">      <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>true<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">directory</span>&gt;</span>$&#123;basedir&#125;/src/main/resources<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/application*.yml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/application*.yaml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/application*.properties<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  ···</span><br><span class="line">  </span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">parameters</span>&gt;</span>true<span class="tag">&lt;/<span class="name">parameters</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-jar-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">archive</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">manifest</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">mainClass</span>&gt;</span>$&#123;start-class&#125;<span class="tag">&lt;/<span class="name">mainClass</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">addDefaultImplementationEntries</span>&gt;</span>true<span class="tag">&lt;/<span class="name">addDefaultImplementationEntries</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">archive</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    ...</span><br></pre></td></tr></table></figure>
<p>  ==spring-boot-starter-parent== 还继承了 ==spring-boot-dependencies==，这个 pom文件才是真正定义了所有相关依赖及其默认版本：</p>
  <figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">activemq.version</span>&gt;</span>5.15.12<span class="tag">&lt;/<span class="name">activemq.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">antlr2.version</span>&gt;</span>2.7.7<span class="tag">&lt;/<span class="name">antlr2.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">appengine-sdk.version</span>&gt;</span>1.9.79<span class="tag">&lt;/<span class="name">appengine-sdk.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artemis.version</span>&gt;</span>2.10.1<span class="tag">&lt;/<span class="name">artemis.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aspectj.version</span>&gt;</span>1.9.5<span class="tag">&lt;/<span class="name">aspectj.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">assertj.version</span>&gt;</span>3.13.2<span class="tag">&lt;/<span class="name">assertj.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">atomikos.version</span>&gt;</span>4.0.6<span class="tag">&lt;/<span class="name">atomikos.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">awaitility.version</span>&gt;</span>4.0.2<span class="tag">&lt;/<span class="name">awaitility.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bitronix.version</span>&gt;</span>2.1.4<span class="tag">&lt;/<span class="name">bitronix.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">build-helper-maven-plugin.version</span>&gt;</span>3.0.0<span class="tag">&lt;/<span class="name">build-helper-maven-plugin.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">byte-buddy.version</span>&gt;</span>1.10.8<span class="tag">&lt;/<span class="name">byte-buddy.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">caffeine.version</span>&gt;</span>2.8.1<span class="tag">&lt;/<span class="name">caffeine.version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    ...</span><br><span class="line"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span>    </span><br></pre></td></tr></table></figure>

<p>  Spring Boot 已经给定了大多数场景下依赖的默认版本，如果有需要你也可以在自己项目的pom文件中使用其他版本，比如 ==mysql-connector-java== 的默认版本是 8.0.19，改为 8.0.18<br>  <figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">mysql.version</span>&gt;</span>8.0.18<span class="tag">&lt;/<span class="name">mysql.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;mysql.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<h4 id="Starter-templates"><a href="#Starter-templates" class="headerlink" title="Starter templates"></a>Starter templates</h4><p>  Spring Boot starter 是包含启动特定功能所需的所有相关传递依赖项的集合，比如你想要创建一个 spring mvc 应用，如果按照传统方式，你需要添加所有相关依赖在 pom 文件中并给定版本，这样就很可能造成版本冲突，而 starter 已经为你提供了相关所有依赖，你只需要添加如下依赖即可：<br>  <figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>  Spring Boot 提供了超过50种开箱即用的 starter pom，可以满足绝大多数的应用场景，比如关系型及非关系型数据库连接，应用监控，日志框架，模板渲染，web service支持等。</p>
<p>  一些常用的 starter</p>
<table>
<thead>
<tr>
<th>名称</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>spring-boot-starter</td>
<td>核心 starter, spring-context, spring-beans</td>
</tr>
<tr>
<td>spring-boot-starter-actuator</td>
<td>管理和监控应用</td>
</tr>
<tr>
<td>spring-boot-starter-web</td>
<td>web 开发支持，包含 tomcat 和 spring-mvc</td>
</tr>
<tr>
<td>spring-boot-starter-test</td>
<td>常用框架 Junit, Hamcrest，Mockito 支持</td>
</tr>
<tr>
<td>spring-boot-starter-aop</td>
<td>spring-aop, aspectjrt, aspectjweaver, 支持面向切面编程</td>
</tr>
<tr>
<td>spring-boot-starter-data-jpa</td>
<td>支持 JPA，包含 spring-data-jpa, spring-orm 和 Hibernate</td>
</tr>
<tr>
<td>spring-boot-starter-data-jpa</td>
<td>支持 JPA，包含 spring-data-jpa, spring-orm 和 Hibernate</td>
</tr>
<tr>
<td>spring-boot-starter-logging</td>
<td>logback-classic, jcl-over-slf4j, jul-to-slf4j, spring boot 默认框架 lockback</td>
</tr>
<tr>
<td>spring-boot-starter-log4j</td>
<td>log4j2, log4j-slf4j-impl，Log4j 日志框架</td>
</tr>
<tr>
<td>spring-boot-starter-security</td>
<td>spring-security-web, spring-security-config，授权认证支持</td>
</tr>
</tbody></table>
<h3 id="Spring-Boot-自动配置"><a href="#Spring-Boot-自动配置" class="headerlink" title="Spring Boot 自动配置"></a>Spring Boot 自动配置</h3><p>  Spring Boot 通过 ==@EnableAutoConfiguration== 注解来开启自动配置，它会自动扫描类路径 jar 包，类来注册到 spring bean 中。</p>
<p>  Spring Boot 自动配置的逻辑在 spring-boot-autoconfigure.jar 中，在这里可以查看 spring boot 做了哪些自动配置。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/backend/spring_boot/desc/1.png"></p>
<p>  如 spring aop 的自动配置如下：<br>  <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Configuration(proxyBeanMethods = false)</span></span><br><span class="line"><span class="meta">@ConditionalOnProperty(prefix = &quot;spring.aop&quot;, name = &quot;auto&quot;, havingValue = &quot;true&quot;, matchIfMissing = true)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AopAutoConfiguration</span> &#123;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Configuration(proxyBeanMethods = false)</span></span><br><span class="line">  <span class="meta">@ConditionalOnClass(Advice.class)</span></span><br><span class="line">  <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">AspectJAutoProxyingConfiguration</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Configuration(proxyBeanMethods = false)</span></span><br><span class="line">    <span class="meta">@EnableAspectJAutoProxy(proxyTargetClass = false)</span></span><br><span class="line">    <span class="meta">@ConditionalOnProperty(prefix = &quot;spring.aop&quot;, name = &quot;proxy-target-class&quot;, havingValue = &quot;false&quot;,</span></span><br><span class="line"><span class="meta">        matchIfMissing = false)</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">JdkDynamicAutoProxyConfiguration</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Configuration(proxyBeanMethods = false)</span></span><br><span class="line">    <span class="meta">@EnableAspectJAutoProxy(proxyTargetClass = true)</span></span><br><span class="line">    <span class="meta">@ConditionalOnProperty(prefix = &quot;spring.aop&quot;, name = &quot;proxy-target-class&quot;, havingValue = &quot;true&quot;,</span></span><br><span class="line"><span class="meta">        matchIfMissing = true)</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">CglibAutoProxyConfiguration</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Configuration(proxyBeanMethods = false)</span></span><br><span class="line">  <span class="meta">@ConditionalOnMissingClass(&quot;org.aspectj.weaver.Advice&quot;)</span></span><br><span class="line">  <span class="meta">@ConditionalOnProperty(prefix = &quot;spring.aop&quot;, name = &quot;proxy-target-class&quot;, havingValue = &quot;true&quot;,</span></span><br><span class="line"><span class="meta">      matchIfMissing = true)</span></span><br><span class="line">  <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">ClassProxyingConfiguration</span> &#123;</span><br><span class="line"></span><br><span class="line">    ClassProxyingConfiguration(BeanFactory beanFactory) &#123;</span><br><span class="line">      <span class="keyword">if</span> (beanFactory <span class="keyword">instanceof</span> BeanDefinitionRegistry) &#123;</span><br><span class="line">        <span class="type">BeanDefinitionRegistry</span> <span class="variable">registry</span> <span class="operator">=</span> (BeanDefinitionRegistry) beanFactory;</span><br><span class="line">        AopConfigUtils.registerAutoProxyCreatorIfNecessary(registry);</span><br><span class="line">        AopConfigUtils.forceAutoProxyCreatorToUseClassProxying(registry);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>  spring boot是通过条件注解来实现自动配置的，注意上面的 Conditional 开头的注解，它们的含义是：</p>
<ul>
<li>@ConditionalOnProperty： 指定的属性是否有指定的值</li>
<li>@ConditionalOnClass: 当类路径下有指定的类条件下</li>
<li>@ConditionalOnMissingClass：当类路径下没有指定的类条件下</li>
</ul>
<p>  还有其他类似的注解，都是表示在什么条件下才生效的意思。</p>
<h3 id="内置-Servlet-容器"><a href="#内置-Servlet-容器" class="headerlink" title="内置 Servlet 容器"></a>内置 Servlet 容器</h3><p>  Spring Boot 默认使用内置的 Tomcat 容器，无需复杂的基础设施配置就能独立运行一个 web 应用。 当然你可以选择使用其他的 servlet 容器比如 Jetty, 只需要在 pom 文件中排除 tomcat 依赖引入 jetty 依赖即可。</p>
  <figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-tomcat<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-jetty<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="启动-Spring-Boot-应用"><a href="#启动-Spring-Boot-应用" class="headerlink" title="启动 Spring Boot 应用"></a>启动 Spring Boot 应用</h3><p>  Spring Boot 通过一个名为 *Application.java 的入口类来启动<br>  <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyApplication</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        SpringApplication.run(MyApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>  注意到上面的@SpringBootApplication 注解 ，其实包含了@Configuration, @EnableAutoConfiguration 和 @ComponentScan 这几个注解：</p>
<ul>
<li>@Configuration：表明一个类是配置类</li>
<li>@EnableAutoConfiguration：开启自动配置</li>
<li>@ComponentScan：把符合扫描规则的类装配到spring容器，对应 xml 中 的 ==<a href="context:component-scan">context:component-scan</a>==</li>
</ul>
<p>  执行 main 方法会读取 application.properties 文件属性内容进行配置来启动应用程序。</p>
<p>  application.properties<br>  <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Servlet 容器配置</span></span><br><span class="line"><span class="comment"># 端口</span></span><br><span class="line">server.port=8080</span><br><span class="line"><span class="comment"># context</span></span><br><span class="line">server.contextPath=/api</span><br></pre></td></tr></table></figure></p>
<p>  参考链接：</p>
<ul>
<li><a href="https://spring.io/projects/spring-boot">https://spring.io/projects/spring-boot</a></li>
<li><a href="https://howtodoinjava.com/spring-boot-tutorials/">https://howtodoinjava.com/spring-boot-tutorials/</a></li>
</ul>
]]></content>
      <categories>
        <category>Spring Boot</category>
      </categories>
      <tags>
        <tag>SpringBoot</tag>
      </tags>
  </entry>
  <entry>
    <title>Spring Boot2 实战系列之登录注册(一) - 注册实现</title>
    <url>/2020/05/16/springboot-registration-sample/</url>
    <content><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>登录注册是一个网站最基本的功能，但它其实可以涉及到比较多方面，如用户注册时的密码校验，账户邮件激活，或者用户登录时的权限认证等。这次我们就来逐步实现一个登录注册功能。具体会用到 Spring Security来管理应用的认证授权，对象映射框架 JPA，同时为了方便演示，使用了基于内存的 H2 数据库。</p>
<p>首先来实现一个基本的注册功能。</p>
<span id="more"></span>
<h3 id="项目架构"><a href="#项目架构" class="headerlink" title="项目架构"></a>项目架构</h3><p>项目结构图如下：</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/backend/spring_boot/registration/1.png"></p>
<p>pom 依赖如下：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">	<span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2.5.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>top.yekongle<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springboot-registraion-sample<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">name</span>&gt;</span>springboot-registraion-sample<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">description</span>&gt;</span>Registraion project for Spring Boot<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">passay.version</span>&gt;</span>1.5.0<span class="tag">&lt;/<span class="name">passay.version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">guava.version</span>&gt;</span>29.0-jre<span class="tag">&lt;/<span class="name">guava.version</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-thymeleaf<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-jpa<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.passay<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>passay<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;passay.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.google.guava<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>guava<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;guava.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.h2database<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>h2<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.junit.vintage<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit-vintage-engine<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.security<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-security-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="代码编写"><a href="#代码编写" class="headerlink" title="代码编写"></a>代码编写</h3><p>项目使用 Thymeleaf 作为模板引擎，全局配置文件如下：<br><strong>application.properties</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Thymeleaf 配置</span></span><br><span class="line"><span class="comment"># 模板文件位置</span></span><br><span class="line">spring.thymeleaf.prefix=classpath:/templates/</span><br><span class="line"><span class="comment"># 文件后缀</span></span><br><span class="line">spring.thymeleaf.suffix=.html</span><br><span class="line">spring.thymeleaf.mode=HTML</span><br><span class="line"><span class="comment"># 编码</span></span><br><span class="line">spring.thymeleaf.encoding=UTF-8</span><br><span class="line"><span class="comment"># 关闭缓存</span></span><br><span class="line">spring.thymeleaf.cache=<span class="literal">false</span></span><br></pre></td></tr></table></figure>

<p><strong>UserDTO.java</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> top.yekongle.registration.dto;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.validation.constraints.Email;</span><br><span class="line"><span class="keyword">import</span> javax.validation.constraints.NotEmpty;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> top.yekongle.registration.validation.PasswordMatches;</span><br><span class="line"><span class="keyword">import</span> top.yekongle.registration.validation.ValidPassword;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 用户数据传输类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Data</span>：lombok 插件自动生成 getter/setter 方法</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@PasswordMatches</span>： 自定义校验注解，检查两次输入密码是否一致</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ValidPassword</span>：根据自定义规则校验密码</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: Yekongle</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span>: 2020年5月5日</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@PasswordMatches</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserDTO</span> &#123;</span><br><span class="line">	<span class="meta">@Email</span></span><br><span class="line">	<span class="meta">@NotEmpty</span></span><br><span class="line">    <span class="keyword">private</span> String email;</span><br><span class="line">	<span class="meta">@NotEmpty</span></span><br><span class="line">	<span class="meta">@ValidPassword</span></span><br><span class="line">	<span class="keyword">private</span> String password;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> String matchingPassword;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>自定义 PasswordMatches 注解<br><strong>PasswordMatches.java</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> top.yekongle.registration.validation;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.Documented;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.Target;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> java.lang.annotation.ElementType.ANNOTATION_TYPE;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> java.lang.annotation.ElementType.TYPE;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> java.lang.annotation.RetentionPolicy.RUNTIME;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.validation.Constraint;</span><br><span class="line"><span class="keyword">import</span> javax.validation.Payload;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.Retention;</span><br><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment">* <span class="doctag">@Description</span>: TYPE: 可用于类、接口、注解类型、枚举; ANNOTATION_TYPE: 用于注解声明(应用于另一个注解上)</span></span><br><span class="line"><span class="comment">* <span class="doctag">@Author</span>: Yekongle </span></span><br><span class="line"><span class="comment">* <span class="doctag">@Date</span>: 2020年5月6日</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">@Documented</span></span><br><span class="line"><span class="meta">@Retention(RUNTIME)</span></span><br><span class="line"><span class="meta">@Constraint(validatedBy = PasswordMatchesValidator.class)</span></span><br><span class="line"><span class="meta">@Target(&#123;TYPE, ANNOTATION_TYPE&#125;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> PasswordMatches &#123;</span><br><span class="line">	<span class="comment">// 默认返回的 error message</span></span><br><span class="line">	String <span class="title function_">message</span><span class="params">()</span> <span class="keyword">default</span> <span class="string">&quot;密码不一致&quot;</span>;</span><br><span class="line">	<span class="comment">// </span></span><br><span class="line">	Class&lt;?&gt;[] groups() <span class="keyword">default</span> &#123; &#125;;</span><br><span class="line"></span><br><span class="line">	Class&lt;? <span class="keyword">extends</span> <span class="title class_">Payload</span>&gt;[] payload() <span class="keyword">default</span> &#123; &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>@PasswordMatches 绑定的校验类<br><strong>PasswordMatchesValidator.java</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> top.yekongle.registration.validation;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.validation.ConstraintValidator;</span><br><span class="line"><span class="keyword">import</span> javax.validation.ConstraintValidatorContext;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> top.yekongle.registration.dto.UserDTO;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment">* <span class="doctag">@Description</span>: 注册密码匹配校验</span></span><br><span class="line"><span class="comment">* <span class="doctag">@Author</span>: Yekongle </span></span><br><span class="line"><span class="comment">* <span class="doctag">@Date</span>: 2020年5月6日</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PasswordMatchesValidator</span> <span class="keyword">implements</span> <span class="title class_">ConstraintValidator</span>&lt;PasswordMatches, Object&gt; &#123;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isValid</span><span class="params">(Object value, ConstraintValidatorContext context)</span> &#123;</span><br><span class="line">		<span class="type">UserDTO</span> <span class="variable">user</span> <span class="operator">=</span> (UserDTO) value;</span><br><span class="line">		<span class="keyword">return</span> user.getPassword().equals(user.getMatchingPassword());</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>自定义 ValidPassword 注解<br><strong>ValidPassword.java</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> top.yekongle.registration.validation;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> java.lang.annotation.ElementType.ANNOTATION_TYPE;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> java.lang.annotation.ElementType.TYPE;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> java.lang.annotation.ElementType.FIELD;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> java.lang.annotation.RetentionPolicy.RUNTIME;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.Documented;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.Retention;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.Target;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.validation.Constraint;</span><br><span class="line"><span class="keyword">import</span> javax.validation.Payload;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 验证密码是否符合规则</span></span><br><span class="line"><span class="comment"> * TYPE: 可用于类、接口、注解类型、枚举;</span></span><br><span class="line"><span class="comment"> * FIELD：可用于类属性上</span></span><br><span class="line"><span class="comment"> * ANNOTATION_TYPE: 用于注解声明(应用于另一个注解上)</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: Yekongle</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span>: 2020年5月9日</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Documented</span></span><br><span class="line"><span class="meta">@Retention(RUNTIME)</span></span><br><span class="line"><span class="meta">@Constraint(validatedBy = PasswordConstraintValidator.class)</span></span><br><span class="line"><span class="meta">@Target(&#123;TYPE, FIELD, ANNOTATION_TYPE&#125;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> ValidPassword &#123;</span><br><span class="line">	<span class="comment">// 默认返回的 error message</span></span><br><span class="line">	String <span class="title function_">message</span><span class="params">()</span> <span class="keyword">default</span> <span class="string">&quot;密码无效&quot;</span>;</span><br><span class="line">	</span><br><span class="line">	Class&lt;?&gt;[] groups() <span class="keyword">default</span> &#123; &#125;;</span><br><span class="line"></span><br><span class="line">	Class&lt;? <span class="keyword">extends</span> <span class="title class_">Payload</span>&gt;[] payload() <span class="keyword">default</span> &#123; &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<p>@ValidPassword 绑定的校验类, 根据自定义规则校验密码，使用了 passay 密码库, 并根据规则码自定义错误消息<br><strong>PasswordConstraintValidator.java</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> top.yekongle.registration.validation;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileNotFoundException;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.validation.ConstraintValidator;</span><br><span class="line"><span class="keyword">import</span> javax.validation.ConstraintValidatorContext;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.passay.CharacterRule;</span><br><span class="line"><span class="keyword">import</span> org.passay.EnglishCharacterData;</span><br><span class="line"><span class="keyword">import</span> org.passay.LengthRule;</span><br><span class="line"><span class="keyword">import</span> org.passay.MessageResolver;</span><br><span class="line"><span class="keyword">import</span> org.passay.PasswordData;</span><br><span class="line"><span class="keyword">import</span> org.passay.PasswordValidator;</span><br><span class="line"><span class="keyword">import</span> org.passay.PropertiesMessageResolver;</span><br><span class="line"><span class="keyword">import</span> org.passay.RuleResult;</span><br><span class="line"><span class="keyword">import</span> org.passay.WhitespaceRule;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.google.common.base.Joiner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment">* <span class="doctag">@Description</span>: 根据自定义规则校验密码，使用了 passay 密码库</span></span><br><span class="line"><span class="comment">* <span class="doctag">@Author</span>: Yekongle </span></span><br><span class="line"><span class="comment">* <span class="doctag">@Date</span>: 2020年5月9日</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PasswordConstraintValidator</span> <span class="keyword">implements</span> <span class="title class_">ConstraintValidator</span>&lt;ValidPassword, String&gt; &#123;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isValid</span><span class="params">(String password, ConstraintValidatorContext context)</span> &#123;</span><br><span class="line"></span><br><span class="line">		<span class="comment">// 实现自定义的错误消息</span></span><br><span class="line">		<span class="type">URL</span> <span class="variable">resource</span> <span class="operator">=</span> <span class="built_in">this</span>.getClass().getClassLoader().getResource(<span class="string">&quot;passay-messages.properties&quot;</span>);</span><br><span class="line">		<span class="type">Properties</span> <span class="variable">props</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Properties</span>();</span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			<span class="type">InputStreamReader</span> <span class="variable">isr</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(resource.getPath()), <span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">			props.load(isr);</span><br><span class="line">		&#125; <span class="keyword">catch</span> (FileNotFoundException e) &#123;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;</span><br><span class="line">		 </span><br><span class="line">		<span class="type">MessageResolver</span> <span class="variable">resolver</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PropertiesMessageResolver</span>(props);</span><br><span class="line">		</span><br><span class="line">		<span class="type">PasswordValidator</span> <span class="variable">validator</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PasswordValidator</span>(resolver, Arrays.asList(</span><br><span class="line">				<span class="comment">// 密码长度 6-18</span></span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">LengthRule</span>(<span class="number">6</span>, <span class="number">18</span>), </span><br><span class="line">                <span class="comment">// 不允许有空格</span></span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">WhitespaceRule</span>(),</span><br><span class="line">				<span class="comment">// 至少有一个字母大写</span></span><br><span class="line">				<span class="keyword">new</span> <span class="title class_">CharacterRule</span>(EnglishCharacterData.UpperCase, <span class="number">1</span>),</span><br><span class="line">				<span class="comment">// 至少有一个数字</span></span><br><span class="line">				<span class="keyword">new</span> <span class="title class_">CharacterRule</span>(EnglishCharacterData.Digit, <span class="number">1</span>),</span><br><span class="line">				<span class="comment">// 至少有一个特殊字符</span></span><br><span class="line">				<span class="keyword">new</span> <span class="title class_">CharacterRule</span>(EnglishCharacterData.Special, <span class="number">1</span>)</span><br><span class="line">				));</span><br><span class="line">		</span><br><span class="line">		<span class="comment">// 校验密码结果</span></span><br><span class="line">		<span class="type">RuleResult</span> <span class="variable">result</span> <span class="operator">=</span> validator.validate(<span class="keyword">new</span> <span class="title class_">PasswordData</span>(password));</span><br><span class="line">		log.info(<span class="string">&quot;Result:&quot;</span> + validator.getMessages(result));</span><br><span class="line">		<span class="keyword">if</span>(result.isValid()) &#123;</span><br><span class="line">	         <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">		&#125; </span><br><span class="line">		<span class="comment">// 禁止默认的校验约束</span></span><br><span class="line">        context.disableDefaultConstraintViolation();</span><br><span class="line">        <span class="comment">// 根据自定义错误信息创建约束</span></span><br><span class="line">        context.buildConstraintViolationWithTemplate(Joiner.on(<span class="string">&quot;,&quot;</span>).join(validator.getMessages(result))).addConstraintViolation();</span><br><span class="line">        </span><br><span class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>在 Resources 下创建该 properties，用于自定义 passay 的错误消息, key: 错误码 value: 错误信息<br><strong>passay-messages.properties</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">TOO_SHORT=密码长度不能少于%1<span class="variable">$s</span>位</span><br><span class="line">TOO_LONG=密码长度不能超过%2<span class="variable">$s</span>位</span><br><span class="line">INSUFFICIENT_DIGIT=至少要有%1<span class="variable">$s</span>位数字</span><br><span class="line">ILLEGAL_WHITESPACE=不能有空格</span><br><span class="line">INSUFFICIENT_SPECIAL=至少要有%1<span class="variable">$s</span>个特殊字符</span><br><span class="line">INSUFFICIENT_UPPERCASE=至少要有%1<span class="variable">$s</span>个大写字母</span><br></pre></td></tr></table></figure>

<p>创建实体对象类<br><strong>User.java</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> top.yekongle.registration.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.persistence.Entity;</span><br><span class="line"><span class="keyword">import</span> javax.persistence.GeneratedValue;</span><br><span class="line"><span class="keyword">import</span> javax.persistence.Id;</span><br><span class="line"><span class="keyword">import</span> javax.persistence.Transient;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> lombok.NoArgsConstructor;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment">* <span class="doctag">@Description</span>: 用户实体</span></span><br><span class="line"><span class="comment">* <span class="doctag">@Author</span>: Yekongle </span></span><br><span class="line"><span class="comment">* <span class="doctag">@Date</span>: 2020年5月5日</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Entity</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">	<span class="meta">@Id</span></span><br><span class="line">	<span class="meta">@GeneratedValue</span></span><br><span class="line">	<span class="keyword">private</span> Long id;</span><br><span class="line">	<span class="keyword">private</span> String email;</span><br><span class="line">	<span class="keyword">private</span> String password;</span><br><span class="line">	</span><br><span class="line">	<span class="meta">@Transient</span></span><br><span class="line">	<span class="keyword">private</span> List&lt;String&gt; roles;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>用户数据操作接口<br><strong>UserRepository.java</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> top.yekongle.registration.repository;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.data.jpa.repository.JpaRepository;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> top.yekongle.registration.entity.User;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment">* <span class="doctag">@Description</span>: 用户操作接口</span></span><br><span class="line"><span class="comment">* <span class="doctag">@Author</span>: Yekongle </span></span><br><span class="line"><span class="comment">* <span class="doctag">@Date</span>: 2020年5月5日</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserRepository</span> <span class="keyword">extends</span> <span class="title class_">JpaRepository</span>&lt;User, Long&gt; &#123;</span><br><span class="line">	User <span class="title function_">findByEmail</span><span class="params">(String email)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>业务处理接口<br><strong>UserService.java</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> top.yekongle.registration.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> top.yekongle.registration.dto.UserDTO;</span><br><span class="line"><span class="keyword">import</span> top.yekongle.registration.entity.User;</span><br><span class="line"><span class="keyword">import</span> top.yekongle.registration.exception.UserAlreadyExistException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment">* <span class="doctag">@Description</span>: 用户业务处理接口</span></span><br><span class="line"><span class="comment">* <span class="doctag">@Author</span>: Yekongle </span></span><br><span class="line"><span class="comment">* <span class="doctag">@Date</span>: 2020年5月5日</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserService</span> &#123;</span><br><span class="line">	User <span class="title function_">registerNewUserAccount</span><span class="params">(UserDTO userDTO)</span> <span class="keyword">throws</span> UserAlreadyExistException;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>用户业务处理实现类<br><strong>UserServiceImpl.java</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> top.yekongle.registration.service.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.transaction.Transactional;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> top.yekongle.registration.dto.UserDTO;</span><br><span class="line"><span class="keyword">import</span> top.yekongle.registration.entity.User;</span><br><span class="line"><span class="keyword">import</span> top.yekongle.registration.exception.UserAlreadyExistException;</span><br><span class="line"><span class="keyword">import</span> top.yekongle.registration.repository.UserRepository;</span><br><span class="line"><span class="keyword">import</span> top.yekongle.registration.service.UserService;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment">* <span class="doctag">@Description</span>: 用户业务处理实现</span></span><br><span class="line"><span class="comment">* <span class="doctag">@Author</span>: Yekongle </span></span><br><span class="line"><span class="comment">* <span class="doctag">@Date</span>: 2020年5月5日</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">UserService</span> &#123;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Autowired</span></span><br><span class="line">	<span class="keyword">private</span> UserRepository userRepository;</span><br><span class="line">	</span><br><span class="line">	<span class="meta">@Transactional</span></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="keyword">public</span> User <span class="title function_">registerNewUserAccount</span><span class="params">(UserDTO userDTO)</span> <span class="keyword">throws</span> UserAlreadyExistException &#123;</span><br><span class="line">		<span class="keyword">if</span> (emailExists(userDTO.getEmail())) &#123;   </span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">UserAlreadyExistException</span>(<span class="string">&quot;该邮箱已被注册:&quot;</span> + userDTO.getEmail());</span><br><span class="line">        &#125;</span><br><span class="line">		</span><br><span class="line">		<span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>(); </span><br><span class="line">		user.setEmail(userDTO.getEmail());</span><br><span class="line">		user.setRoles(Arrays.asList(<span class="string">&quot;ROLE_USER&quot;</span>));</span><br><span class="line">		</span><br><span class="line">		<span class="keyword">return</span> userRepository.save(user);</span><br><span class="line">	&#125; </span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> <span class="type">boolean</span> <span class="title function_">emailExists</span><span class="params">(String email)</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> userRepository.findByEmail(email) != <span class="literal">null</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>注册时如果该用户已经注册则抛出一个自定义异常：<br><strong>UserAlreadyExistException.java</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> top.yekongle.registration.exception;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment">* <span class="doctag">@Description</span>: 自定义用户已存在异常</span></span><br><span class="line"><span class="comment">* <span class="doctag">@Author</span>: Yekongle </span></span><br><span class="line"><span class="comment">* <span class="doctag">@Date</span>: 2020年5月5日</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserAlreadyExistException</span> <span class="keyword">extends</span> <span class="title class_">RuntimeException</span> &#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">long</span> <span class="variable">serialVersionUID</span> <span class="operator">=</span> <span class="number">1L</span>;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">public</span> <span class="title function_">UserAlreadyExistException</span><span class="params">(String message)</span> &#123;</span><br><span class="line">		<span class="built_in">super</span>(message);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<p>注册请求处理<br><strong>RegistrationController.java</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> top.yekongle.registration.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.validation.Valid;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ui.Model;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PostMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ResponseBody;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> top.yekongle.registration.dto.UserDTO;</span><br><span class="line"><span class="keyword">import</span> top.yekongle.registration.entity.User;</span><br><span class="line"><span class="keyword">import</span> top.yekongle.registration.service.UserService;</span><br><span class="line"><span class="keyword">import</span> top.yekongle.registration.util.GenericResponse;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/user&quot;)</span></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RegistrationController</span> &#123;</span><br><span class="line">    <span class="meta">@Autowired</span> UserService userService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/registration&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">registration</span><span class="params">(Model model)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;registration&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostMapping(&quot;/registration&quot;)</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="keyword">public</span> GenericResponse <span class="title function_">registerUserAccount</span><span class="params">(<span class="meta">@Valid</span> UserDTO userDTO)</span> &#123;</span><br><span class="line">        <span class="type">User</span> <span class="variable">registered</span> <span class="operator">=</span> userService.registerNewUserAccount(userDTO);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">GenericResponse</span>(<span class="string">&quot;success&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>自定义结果返回<br><strong>GenericResponse.java</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> top.yekongle.registration.util;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.stream.Collectors;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.validation.FieldError;</span><br><span class="line"><span class="keyword">import</span> org.springframework.validation.ObjectError;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment">* <span class="doctag">@Description</span>: 结果返回实体</span></span><br><span class="line"><span class="comment">* <span class="doctag">@Author</span>: Yekongle </span></span><br><span class="line"><span class="comment">* <span class="doctag">@Date</span>: 2020年5月9日</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">GenericResponse</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String message;</span><br><span class="line">    <span class="keyword">private</span> String error;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">GenericResponse</span><span class="params">(<span class="keyword">final</span> String message)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>();</span><br><span class="line">        <span class="built_in">this</span>.message = message;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">GenericResponse</span><span class="params">(<span class="keyword">final</span> String message, <span class="keyword">final</span> String error)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>();</span><br><span class="line">        <span class="built_in">this</span>.message = message;</span><br><span class="line">        <span class="built_in">this</span>.error = error;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">GenericResponse</span><span class="params">(List&lt;ObjectError&gt; allErrors, String error)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.error = error;</span><br><span class="line">        <span class="type">String</span> <span class="variable">temp</span> <span class="operator">=</span> allErrors.stream().map(e -&gt; &#123;</span><br><span class="line">            <span class="keyword">if</span> (e <span class="keyword">instanceof</span> FieldError) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="string">&quot;&#123;\&quot;field\&quot;:\&quot;&quot;</span> + ((FieldError) e).getField() + <span class="string">&quot;\&quot;,\&quot;defaultMessage\&quot;:\&quot;&quot;</span> + e.getDefaultMessage() + <span class="string">&quot;\&quot;&#125;&quot;</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="string">&quot;&#123;\&quot;object\&quot;:\&quot;&quot;</span> + e.getObjectName() + <span class="string">&quot;\&quot;,\&quot;defaultMessage\&quot;:\&quot;&quot;</span> + e.getDefaultMessage() + <span class="string">&quot;\&quot;&#125;&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;).collect(Collectors.joining(<span class="string">&quot;,&quot;</span>));</span><br><span class="line">        <span class="built_in">this</span>.message = <span class="string">&quot;[&quot;</span> + temp + <span class="string">&quot;]&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getMessage</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> message;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setMessage</span><span class="params">(<span class="keyword">final</span> String message)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.message = message;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getError</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> error;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setError</span><span class="params">(<span class="keyword">final</span> String error)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.error = error;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>自定义一个全局异常处理：<br><strong>RestExceptionHandler.java</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> top.yekongle.registration.exception;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.MessageSource;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.HttpHeaders;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.HttpStatus;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.ResponseEntity;</span><br><span class="line"><span class="keyword">import</span> org.springframework.validation.BindException;</span><br><span class="line"><span class="keyword">import</span> org.springframework.validation.BindingResult;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.MethodArgumentNotValidException;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ControllerAdvice;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ExceptionHandler;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.context.request.WebRequest;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.mvc.method.annotation.ResponseEntityExceptionHandler;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> top.yekongle.registration.util.GenericResponse;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment">* <span class="doctag">@Description</span>: 全局异常处理</span></span><br><span class="line"><span class="comment">* <span class="doctag">@Author</span>: Yekongle </span></span><br><span class="line"><span class="comment">* <span class="doctag">@Date</span>: 2020年5月8日</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@ControllerAdvice</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RestExceptionHandler</span> <span class="keyword">extends</span> <span class="title class_">ResponseEntityExceptionHandler</span> &#123;</span><br><span class="line">	</span><br><span class="line">    <span class="comment">// 400</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> ResponseEntity&lt;Object&gt; <span class="title function_">handleBindException</span><span class="params">(<span class="keyword">final</span> BindException ex, <span class="keyword">final</span> HttpHeaders headers, <span class="keyword">final</span> HttpStatus status, <span class="keyword">final</span> WebRequest request)</span> &#123;</span><br><span class="line">        logger.error(<span class="string">&quot;400 Status Code&quot;</span>, ex);</span><br><span class="line">        <span class="keyword">final</span> <span class="type">BindingResult</span> <span class="variable">result</span> <span class="operator">=</span> ex.getBindingResult();</span><br><span class="line">        <span class="keyword">final</span> <span class="type">GenericResponse</span> <span class="variable">bodyOfResponse</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">GenericResponse</span>(result.getAllErrors(), <span class="string">&quot;Invalid&quot;</span> + result.getObjectName());</span><br><span class="line">        <span class="keyword">return</span> handleExceptionInternal(ex, bodyOfResponse, <span class="keyword">new</span> <span class="title class_">HttpHeaders</span>(), HttpStatus.BAD_REQUEST, request);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> ResponseEntity&lt;Object&gt; <span class="title function_">handleMethodArgumentNotValid</span><span class="params">(<span class="keyword">final</span> MethodArgumentNotValidException ex, <span class="keyword">final</span> HttpHeaders headers, <span class="keyword">final</span> HttpStatus status, <span class="keyword">final</span> WebRequest request)</span> &#123;</span><br><span class="line">        logger.error(<span class="string">&quot;400 Status Code&quot;</span>, ex);</span><br><span class="line">        <span class="keyword">final</span> <span class="type">BindingResult</span> <span class="variable">result</span> <span class="operator">=</span> ex.getBindingResult();</span><br><span class="line">        <span class="keyword">final</span> <span class="type">GenericResponse</span> <span class="variable">bodyOfResponse</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">GenericResponse</span>(result.getAllErrors(), <span class="string">&quot;Invalid&quot;</span> + result.getObjectName());</span><br><span class="line">        <span class="keyword">return</span> handleExceptionInternal(ex, bodyOfResponse, <span class="keyword">new</span> <span class="title class_">HttpHeaders</span>(), HttpStatus.BAD_REQUEST, request);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 409</span></span><br><span class="line">    <span class="meta">@ExceptionHandler(UserAlreadyExistException.class)</span></span><br><span class="line">    <span class="keyword">public</span> ResponseEntity&lt;Object&gt; <span class="title function_">handleUserAlreadyExist</span><span class="params">(<span class="keyword">final</span> UserAlreadyExistException ex, <span class="keyword">final</span> WebRequest request)</span> &#123;</span><br><span class="line">        logger.error(<span class="string">&quot;409 Status Code&quot;</span>, ex);</span><br><span class="line">        <span class="keyword">final</span> <span class="type">GenericResponse</span> <span class="variable">bodyOfResponse</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">GenericResponse</span>(ex.getMessage(), <span class="string">&quot;UserAlreadyExist&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> handleExceptionInternal(ex, bodyOfResponse, <span class="keyword">new</span> <span class="title class_">HttpHeaders</span>(), HttpStatus.CONFLICT, request);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<p>前端注册页面<br><strong>registration.html</strong></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns:th</span>=<span class="string">&quot;http://www.thymeleaf.org&quot;</span>&gt;</span><span class="comment">&lt;!-- Thymeleaf的命名空间，将静态页面转换为动态的视图 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">content</span>=<span class="string">&quot;text/html;charset=UTF-8&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/css/bootstrap.min.css&#125;&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">		<span class="selector-class">.middle</span> &#123;</span></span><br><span class="line"><span class="language-css">			<span class="attribute">float</span>: none;</span></span><br><span class="line"><span class="language-css">			<span class="attribute">display</span>: inline-block;</span></span><br><span class="line"><span class="language-css">			<span class="attribute">vertical-align</span>: middle;</span></span><br><span class="line"><span class="language-css">		&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">h2</span>&gt;</span>注册<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;/&quot;</span> <span class="attr">method</span>=<span class="string">&quot;POST&quot;</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row&quot;</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group col-md-6 vertical-middle-sm&quot;</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;email&quot;</span>&gt;</span>邮箱<span class="tag">&lt;/<span class="name">label</span>&gt;</span> </span><br><span class="line">				    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;email&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">id</span>=<span class="string">&quot;email&quot;</span> <span class="attr">name</span>=<span class="string">&quot;email&quot;</span> <span class="attr">aria-describedby</span>=<span class="string">&quot;emailHelp&quot;</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">small</span> <span class="attr">id</span>=<span class="string">&quot;emailHelp&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-text text-muted&quot;</span>&gt;</span>我们绝不会与其他任何人共享您的电子邮件<span class="tag">&lt;/<span class="name">small</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">	           <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;emailError&quot;</span> <span class="attr">class</span>=<span class="string">&quot;alert alert-danger middle col-xs-4&quot;</span> <span class="attr">style</span>=<span class="string">&quot;display:none;margin-top:10px;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">div</span>&gt;</span>		</span><br><span class="line">		 </span><br><span class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row&quot;</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group col-md-6&quot;</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;password&quot;</span>&gt;</span>密码<span class="tag">&lt;/<span class="name">label</span>&gt;</span> </span><br><span class="line">					<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">id</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span>&gt;</span>	</span><br><span class="line">				<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;passwordError&quot;</span> <span class="attr">class</span>=<span class="string">&quot;alert alert-danger middle col-xs-4&quot;</span> <span class="attr">style</span>=<span class="string">&quot;display:none;margin-top:10px;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row&quot;</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group col-md-6&quot;</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;matchingPassword&quot;</span>&gt;</span>确认密码<span class="tag">&lt;/<span class="name">label</span>&gt;</span> </span><br><span class="line">					<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">id</span>=<span class="string">&quot;matchingPassword&quot;</span> <span class="attr">name</span>=<span class="string">&quot;matchingPassword&quot;</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;globalError&quot;</span> <span class="attr">class</span>=<span class="string">&quot;alert alert-danger middle col-xs-4&quot;</span> <span class="attr">style</span>=<span class="string">&quot;display:none;margin-top:10px;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-primary&quot;</span>&gt;</span>提交<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">script</span> <span class="attr">th:src</span>=<span class="string">&quot;@&#123;/js/jquery-3.5.1.min.js&#125;&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">script</span> <span class="attr">th:src</span>=<span class="string">&quot;@&#123;/js/bootstrap.min.js&#125;&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">script</span> <span class="attr">th:inline</span>=<span class="string">&quot;javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">		<span class="keyword">var</span> serverContext = [[@&#123;/&#125;]];</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">		$(<span class="variable language_">document</span>).<span class="title function_">ready</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">	 		$(<span class="string">&#x27;form&#x27;</span>).<span class="title function_">submit</span>(<span class="keyword">function</span>(<span class="params">event</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">				<span class="title function_">register</span>(event);</span></span><br><span class="line"><span class="language-javascript">			&#125;);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">			<span class="keyword">function</span> <span class="title function_">register</span>(<span class="params">event</span>) &#123; </span></span><br><span class="line"><span class="language-javascript">				event.<span class="title function_">preventDefault</span>();</span></span><br><span class="line"><span class="language-javascript">				$(<span class="string">&quot;.alert&quot;</span>).<span class="title function_">html</span>(<span class="string">&quot;&quot;</span>).<span class="title function_">hide</span>();</span></span><br><span class="line"><span class="language-javascript">				</span></span><br><span class="line"><span class="language-javascript">				<span class="keyword">var</span> formData= $(<span class="string">&#x27;form&#x27;</span>).<span class="title function_">serialize</span>();</span></span><br><span class="line"><span class="language-javascript">				$.<span class="title function_">post</span>(serverContext + <span class="string">&quot;user/registration&quot;</span>, formData ,<span class="keyword">function</span>(<span class="params">data</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">					<span class="keyword">if</span>(data.<span class="property">message</span> == <span class="string">&quot;success&quot;</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">						<span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">href</span> = serverContext + <span class="string">&quot;successRegister.html&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">					&#125;	</span></span><br><span class="line"><span class="language-javascript">				&#125;)</span></span><br><span class="line"><span class="language-javascript">				.<span class="title function_">fail</span>(<span class="keyword">function</span>(<span class="params">data</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">					<span class="keyword">if</span>(data.<span class="property">responseJSON</span>.<span class="property">error</span> == <span class="string">&quot;UserAlreadyExist&quot;</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">			            $(<span class="string">&quot;#emailError&quot;</span>).<span class="title function_">show</span>().<span class="title function_">html</span>(data.<span class="property">responseJSON</span>.<span class="property">message</span>);</span></span><br><span class="line"><span class="language-javascript">			        &#125;</span></span><br><span class="line"><span class="language-javascript">					<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="language-javascript">						<span class="keyword">var</span> errors = $.<span class="title function_">parseJSON</span>(data.<span class="property">responseJSON</span>.<span class="property">message</span>);</span></span><br><span class="line"><span class="language-javascript">						$.<span class="title function_">each</span>( errors, <span class="keyword">function</span>(<span class="params"> index,item </span>)&#123;</span></span><br><span class="line"><span class="language-javascript">							<span class="keyword">if</span> (item.<span class="property">field</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">								$(<span class="string">&quot;#&quot;</span>+item.<span class="property">field</span>+<span class="string">&quot;Error&quot;</span>).<span class="title function_">show</span>().<span class="title function_">append</span>(item.<span class="property">defaultMessage</span>+<span class="string">&quot;&lt;br/&gt;&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">							&#125;</span></span><br><span class="line"><span class="language-javascript">							<span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="language-javascript">								$(<span class="string">&quot;#globalError&quot;</span>).<span class="title function_">show</span>().<span class="title function_">append</span>(item.<span class="property">defaultMessage</span>+<span class="string">&quot;&lt;br/&gt;&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">							&#125;</span></span><br><span class="line"><span class="language-javascript">						&#125;);</span></span><br><span class="line"><span class="language-javascript">					&#125;</span></span><br><span class="line"><span class="language-javascript">				&#125;);</span></span><br><span class="line"><span class="language-javascript">			&#125;</span></span><br><span class="line"><span class="language-javascript">		&#125;);</span></span><br><span class="line"><span class="language-javascript">	</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>注册成功展示页面<br><strong>successRegister.html</strong></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns:th</span>=<span class="string">&quot;http://www.thymeleaf.org&quot;</span>&gt;</span><span class="comment">&lt;!-- Thymeleaf的命名空间，将静态页面转换为动态的视图 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">content</span>=<span class="string">&quot;text/html;charset=UTF-8&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/css/bootstrap.min.css&#125;&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;alert alert-success&quot;</span> <span class="attr">role</span>=<span class="string">&quot;alert&quot;</span>&gt;</span></span><br><span class="line">	   <span class="tag">&lt;<span class="name">p</span>&gt;</span>注册成功!<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/login&#125;&quot;</span> &gt;</span>立即登录<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">th:src</span>=<span class="string">&quot;@&#123;/js/jquery-3.5.1.min.js&#125;&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">th:src</span>=<span class="string">&quot;@&#123;/js/bootstrap.min.js&#125;&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="运行演示"><a href="#运行演示" class="headerlink" title="运行演示"></a>运行演示</h3><p>启动项目<br>访问 <a href="http://localhost:8080/user/registration">http://localhost:8080/user/registration</a></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/backend/spring_boot/registration/2.png"></p>
<p><strong>提交空白信息</strong><br><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/backend/spring_boot/registration/3.png"></p>
<p><strong>输入密码 123456</strong></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/backend/spring_boot/registration/4.png"></p>
<p><strong>密码框输入: A123456!</strong><br><strong>确认密码框输入: 123456</strong><br><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/backend/spring_boot/registration/5.png"></p>
<p><strong>正确输入账号密码提交</strong></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/backend/spring_boot/registration/6.png"></p>
<p>项目已上传至 Github: <a href="https://github.com/yekongle/springboot-code-samples/tree/master/springboot-registraion-sample">https://github.com/yekongle/springboot-code-samples/tree/master/springboot-registraion-sample</a> , 希望对小伙伴们有帮助哦。</p>
<p>参考链接：</p>
<ul>
<li><a href="https://v4.bootcss.com/docs/getting-started/introduction/">https://v4.bootcss.com/docs/getting-started/introduction/</a></li>
<li><a href="https://github.com/Baeldung/spring-security-registration">https://github.com/Baeldung/spring-security-registration</a></li>
</ul>
]]></content>
      <categories>
        <category>Spring Boot</category>
      </categories>
      <tags>
        <tag>SpringBoot</tag>
        <tag>Registration</tag>
      </tags>
  </entry>
  <entry>
    <title>Spring Boot 默认日志使用</title>
    <url>/2020/05/04/sprinboot-logging/</url>
    <content><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>日志框架有很多种，但常用的日志框架是这三种： Log4j，Log4j2，Logback，简单介绍下它们的关系：</p>
<ol>
<li>Log4j 是 作者 Ceki 最早在 1999 年发布的，在2015 年宣布终止。</li>
<li>Log4j 被 Apache 收入门下后，它的作者后来又开发了 sl4j(sl4j 是日志的抽象层，提供了简单统一的接口) 和 Logback（在 log4j 基础上进行了改进）</li>
<li>Apache 后在又在 logback 基础上进行改进，在 2014 年推出了 log4j2</li>
</ol>
<p>Log4j，Log4j2，Logback 这 3 种日志框架都对 sl4j 提供了实现支持， 关于它们之间的性能对比，可以参考这篇文章：<a href="https://bbs.huaweicloud.com/blogs/103530%EF%BC%8C">https://bbs.huaweicloud.com/blogs/103530，</a> 这里就不展开赘述了。</p>
<span id="more"></span>
<h3 id="Spring-Boot-默认日志"><a href="#Spring-Boot-默认日志" class="headerlink" title="Spring Boot 默认日志"></a>Spring Boot 默认日志</h3><p>Spring Boot 的日志支持依赖是 ==spring-boot-starter-logging==，默认使用slf4j+logback的方式来记录日志。</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-logging<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2.5.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>启动项目,  在控制台中可看到 spring boot 默认打印出的启动日志，不过默认的打印级别为 INFO</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/backend/spring_boot/logging/1.png"></p>
<h3 id="默认日志级别"><a href="#默认日志级别" class="headerlink" title="默认日志级别"></a>默认日志级别</h3><p>Logback 支持 TRACE, DEBUG, INFO, WARN, ERROR 日志级别，优先级关系为 TRACE &lt; DEBUG &lt; INFO &lt; WARN &lt; ERROR , 我们可以在 application 配置文件中更改打印日志级别</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Log level config</span></span><br><span class="line">logging.level.root=DEBUG</span><br></pre></td></tr></table></figure>

<p>在测试方法中打印一下级别：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> top.yekongle.logging;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.junit.jupiter.api.Test;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.test.context.SpringBootTest;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">SpringbootLoggingSampleApplicationTests</span> &#123;</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">Logger</span> <span class="variable">logger</span> <span class="operator">=</span> LoggerFactory.getLogger(SpringbootLoggingSampleApplicationTests.class);</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Test</span></span><br><span class="line">	<span class="keyword">void</span> <span class="title function_">contextLoads</span><span class="params">()</span> &#123;</span><br><span class="line">		logger.debug(<span class="string">&quot;debug日志&quot;</span>);</span><br><span class="line"></span><br><span class="line">		logger.info(<span class="string">&quot;info日志&quot;</span>);</span><br><span class="line"></span><br><span class="line">		logger.warn(<span class="string">&quot;warn日志&quot;</span>);</span><br><span class="line"></span><br><span class="line">		logger.error(<span class="string">&quot;error日志&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/backend/spring_boot/logging/2.png"></p>
<p>还可以指定包的日志级别</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">logging.level.org.springframework=INFO</span><br></pre></td></tr></table></figure>

<h3 id="日志格式"><a href="#日志格式" class="headerlink" title="日志格式"></a>日志格式</h3><p>使用属性 logging.pattern.console 和 logging.pattern.file 可以分别自定义控制台日志和文件日志的格式</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#控制台显示日志的格式</span></span><br><span class="line">logging.pattern.console=%d&#123;yyyy-MM-<span class="built_in">dd</span> HH:mm:ss&#125; [%thread] %-5level %logger&#123;5&#125;- %msg%n</span><br><span class="line"></span><br><span class="line"><span class="comment">#文件显示日志的格式</span></span><br><span class="line">logging.pattern.file=%d&#123;yyyy-MM-<span class="built_in">dd</span> HH:mm&#125; [%thread] %-5level %logger- %msg%n</span><br></pre></td></tr></table></figure>

<p>再次运行测试方法，可见日志打印格式已经变为自定义的格式</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/backend/spring_boot/logging/3.png"></p>
<p>上面用的一些标签含义如下：</p>
<ul>
<li>%d： 日期实践</li>
<li>%thread： 线程名</li>
<li>%-5level：级别从左显示5个字符宽度 </li>
<li>%logger{5}：表示logger名字最长5个字符，否则按照句点分割。 </li>
<li>%msg：日志消息</li>
<li>%n：换行</li>
</ul>
<h3 id="保存日志"><a href="#保存日志" class="headerlink" title="保存日志"></a>保存日志</h3><p>logging.path 可以指定日志保存目录，但不能指定输出的文件名，且默认名为spring.log</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">logging.path=F:/logs/</span><br><span class="line">logging.pattern.file=%d&#123;yyyy-MM-dd HH:mm&#125; [%thread] %-5level %logger- %msg%n</span><br></pre></td></tr></table></figure>

<p><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/backend/spring_boot/logging/4.png"></p>
<p>logging.file.name 可以指定目录和输出文件名</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">logging.file.name=F:/logs/info.log</span><br><span class="line">logging.pattern.file=%d&#123;yyyy-MM-<span class="built_in">dd</span> HH:mm&#125; [%thread] %-5level %logger- %msg%n</span><br></pre></td></tr></table></figure>
<p><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/backend/spring_boot/logging/5.png"></p>
<p>其他一些相关属性：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 当文件超过 10Mb 时，归档压缩</span></span><br><span class="line">logging.file.max-size=10Mb</span><br><span class="line"><span class="comment"># 日志文件最多保存3天</span></span><br><span class="line">logging.file.max-history=3</span><br><span class="line"><span class="comment"># 用于滚动的日志文件名的模式</span></span><br><span class="line">logging.pattern.rolling-file-name=<span class="variable">$&#123;LOG_FILE&#125;</span>.%d&#123;yyyy-MM-<span class="built_in">dd</span>&#125;.%i.gz</span><br></pre></td></tr></table></figure>

<p>项目已上传至 Github: <a href="https://github.com/yekongle/springboot-code-samples/tree/master/springboot-logging-sample">https://github.com/yekongle/springboot-code-samples/tree/master/springboot-logging-sample</a> , 希望对小伙伴们有帮助哦。</p>
]]></content>
      <categories>
        <category>Spring Boot</category>
      </categories>
      <tags>
        <tag>SpringBoot</tag>
        <tag>Logging</tag>
      </tags>
  </entry>
  <entry>
    <title>Spring Boot2 实战系列之RESTful Web Service</title>
    <url>/2020/05/09/springboot-restful-sample/</url>
    <content><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>关于 REST 概念的阐述，是 Roy Fielding 大神在他的 <a href="https://www.ics.uci.edu/~fielding/pubs/dissertation/top.htm">博士论文 </a> 中提出的，有兴趣的小伙伴可以去看一下，Restful web service是指遵守了 REST 风格的web服务， 可以看下阮一峰老师的 <a href="http://www.ruanyifeng.com/blog/2011/09/restful.html">RESTful API 最佳实践</a>。但要记住的是 REST 是一种设计风格，它背后的理念是使用 HTTP 动词 GET，POST, PUT, DELETE 来对应服务的 CURD 操作，并且使用 JSON 来请求数据和接收数据。</p>
<p>在设计符合 REST 理念的服务接口时，可以参考以下指导方针：</p>
<ul>
<li>使用 HTTP 动词（GET, POST, PUT, DELETE）围绕服务展开操作</li>
<li>使用 URI 来传达意图</li>
<li>请求和响应使用 JSON</li>
<li>使用 HTTP 状态码来传达结果</li>
</ul>
<p>下面使用一个对员工进行增删改查的例子来实践 RESTful 设计。</p>
<span id="more"></span>
<h3 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h3><p>项目结构图如下：<br><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/backend/spring_boot/restful/1.png"></p>
<p>pom 依赖文件如下：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">	<span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2.5.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>top.yekongle<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springboot-restful-sample<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">name</span>&gt;</span>springboot-restful-sample<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">description</span>&gt;</span>RESTful project for Spring Boot<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-jpa<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="comment">&lt;!--In-Memory Database--&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.h2database<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>h2<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.junit.vintage<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit-vintage-engine<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>


<h3 id="代码编写"><a href="#代码编写" class="headerlink" title="代码编写"></a>代码编写</h3><p>Employee.java, 员工实体类</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yekongle.rest.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.persistence.Entity;</span><br><span class="line"><span class="keyword">import</span> javax.persistence.GeneratedValue;</span><br><span class="line"><span class="keyword">import</span> javax.persistence.Id;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 持久化实体类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Data</span>: lombok 注解，自动生成 getter, setter方法，重写equals,hash,toString方法</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Entity</span>: 表明该类是持久化实体类(映射到对应table)</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Id</span>: 指定 table id</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@GeneratedValue</span>: 默认采用自增长策略</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: Yekongle</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span>: Apr 7, 2020</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@Entity</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Employee</span> &#123;</span><br><span class="line">	<span class="meta">@Id</span></span><br><span class="line">	<span class="meta">@GeneratedValue</span></span><br><span class="line">	<span class="keyword">private</span> Long id;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> String name;</span><br><span class="line">	<span class="keyword">private</span> String role;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="title function_">Employee</span><span class="params">()</span> &#123;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="title function_">Employee</span><span class="params">(String name, String role)</span> &#123;</span><br><span class="line">		<span class="built_in">this</span>.name = name;</span><br><span class="line">		<span class="built_in">this</span>.role = role;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>EmployeeNotFoundException.java, 自定义 Exception，找不到员工时抛出该 Exception</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> top.yekongle.restful.exception;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 自定义employee exception</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: Yekongle</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span>: Apr 7, 2020</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">EmployeeNotFoundException</span> <span class="keyword">extends</span> <span class="title class_">RuntimeException</span> &#123;</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">long</span> <span class="variable">serialVersionUID</span> <span class="operator">=</span> <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="title function_">EmployeeNotFoundException</span><span class="params">(Long id)</span> &#123;</span><br><span class="line">		<span class="built_in">super</span>(<span class="string">&quot;Could not find employee &quot;</span> + id);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>EmployeeRepository.java, 员工数据操作接口</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> top.yekongle.restful.repository;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.data.jpa.repository.JpaRepository;</span><br><span class="line"><span class="keyword">import</span> top.yekongle.restful.entity.Employee;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment">* <span class="doctag">@Description</span>: 数据操作接口，继承JpaRepository</span></span><br><span class="line"><span class="comment">* <span class="doctag">@Author</span>: Yekongle </span></span><br><span class="line"><span class="comment">* <span class="doctag">@Date</span>: Apr 7, 2020</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">EmployeeRepository</span> <span class="keyword">extends</span> <span class="title class_">JpaRepository</span>&lt;Employee, Long&gt;&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>GlobalExceptonConfig.java, 全局 Exception 配置</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> top.yekongle.restful.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.http.HttpStatus;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ControllerAdvice;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ExceptionHandler;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ResponseBody;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ResponseStatus;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> top.yekongle.restful.exception.EmployeeNotFoundException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 全局异常配置</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: Yekongle</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span>: Apr 7, 2020</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@ControllerAdvice</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">GlobalExceptonConfig</span> &#123;</span><br><span class="line">	</span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@ResponseBody</span> 方法返回结果直接写入到 http reponse中</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@ExceptionHandler</span> 捕捉指定的exception</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@ResponseStatus</span> 指定response的http status：2xx/4xx/5xx</span></span><br><span class="line"><span class="comment">	 * */</span></span><br><span class="line">	<span class="meta">@ResponseBody</span></span><br><span class="line">	<span class="meta">@ExceptionHandler(EmployeeNotFoundException.class)</span></span><br><span class="line">	<span class="meta">@ResponseStatus(HttpStatus.NOT_FOUND)</span></span><br><span class="line">	<span class="keyword">public</span> String <span class="title function_">employeeNotFoundHandler</span><span class="params">(EmployeeNotFoundException ex)</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> ex.getMessage();</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="meta">@ResponseBody</span></span><br><span class="line">	<span class="meta">@ExceptionHandler(Exception.class)</span></span><br><span class="line">	<span class="meta">@ResponseStatus(HttpStatus.INTERNAL_SERVER_ERROR)</span></span><br><span class="line">	<span class="keyword">public</span> String <span class="title function_">systemErrorHandler</span><span class="params">(Exception ex)</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> ex.getMessage();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>DatabaseConfig.java, 数据库配置，插入两条初始化数据</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> top.yekongle.restful.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.CommandLineRunner;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> top.yekongle.restful.entity.Employee;</span><br><span class="line"><span class="keyword">import</span> top.yekongle.restful.repository.EmployeeRepository;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment">* <span class="doctag">@Description</span>: 数据库配置</span></span><br><span class="line"><span class="comment">* <span class="doctag">@Configuration</span>: 表明这个是配置类</span></span><br><span class="line"><span class="comment">* <span class="doctag">@Sl</span>4j: lombok注解，自动生成Logger</span></span><br><span class="line"><span class="comment">* <span class="doctag">@Author</span>: Yekongle </span></span><br><span class="line"><span class="comment">* <span class="doctag">@Date</span>: Apr 7, 2020</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DatabaseConfig</span> &#123;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 应用上文下加载完后SpringBoot会执行所有注册到Spring中的CommandLineRunner</span></span><br><span class="line"><span class="comment">	 * */</span></span><br><span class="line">	<span class="meta">@Bean</span></span><br><span class="line">	<span class="keyword">public</span> CommandLineRunner <span class="title function_">initDatabase</span><span class="params">(EmployeeRepository repository)</span> &#123;</span><br><span class="line">		<span class="comment">// 执行CommandLineRunner的回调函数, 往数据库插入初始数据</span></span><br><span class="line">		<span class="keyword">return</span> args -&gt; &#123;</span><br><span class="line">		     log.info(<span class="string">&quot;Preloading &quot;</span> + repository.save(<span class="keyword">new</span> <span class="title class_">Employee</span>(<span class="string">&quot;张三&quot;</span>, <span class="string">&quot;初级程序员&quot;</span>)));</span><br><span class="line">		     log.info(<span class="string">&quot;Preloading &quot;</span> + repository.save(<span class="keyword">new</span> <span class="title class_">Employee</span>(<span class="string">&quot;李四&quot;</span>, <span class="string">&quot;高级程序员&quot;</span>)));</span><br><span class="line">		&#125;;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>EmployeeController.java，表现层，处理请求 API</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> top.yekongle.restful.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.HttpStatus;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.ResponseEntity;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.DeleteMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PathVariable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PostMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PutMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestBody;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"><span class="keyword">import</span> top.yekongle.restful.entity.Employee;</span><br><span class="line"><span class="keyword">import</span> top.yekongle.restful.exception.EmployeeNotFoundException;</span><br><span class="line"><span class="keyword">import</span> top.yekongle.restful.repository.EmployeeRepository;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 员工controller类, </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: Yekongle</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span>: Apr 7, 2020</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// @RestController 注解会使每个方法返回值直接写入到response body中，而不是去渲染模板</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">EmployeeController</span> &#123;</span><br><span class="line">	<span class="meta">@Autowired</span></span><br><span class="line">	EmployeeRepository repository;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查找所有员工</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="meta">@GetMapping(&quot;/employees&quot;)</span></span><br><span class="line">	<span class="keyword">public</span> ResponseEntity&lt;?&gt; all() &#123;</span><br><span class="line">		List&lt;Employee&gt; employeeList = repository.findAll();</span><br><span class="line">		<span class="keyword">return</span> ResponseEntity.ok(employeeList);</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 新建员工</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="meta">@PostMapping(&quot;/employees&quot;)</span></span><br><span class="line">	<span class="keyword">public</span> ResponseEntity&lt;?&gt; newEmployee(<span class="meta">@RequestBody</span> Employee newEmployee) &#123;</span><br><span class="line">		repository.save(newEmployee);</span><br><span class="line">		<span class="keyword">return</span> ResponseEntity.status(HttpStatus.CREATED).body(newEmployee);</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据id查找员工</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@PathVariable</span> 将参数与请求路径模板绑定起来，&#123;id&#125;的值就是参数id的值</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="meta">@GetMapping(&quot;/employees/&#123;id&#125;&quot;)</span></span><br><span class="line">	<span class="keyword">public</span> ResponseEntity&lt;?&gt; one(<span class="meta">@PathVariable</span> Long id) &#123;</span><br><span class="line">		<span class="comment">// 根据id查找员工，找不到抛出一个自定义 exception</span></span><br><span class="line">		<span class="type">Employee</span> <span class="variable">employee</span> <span class="operator">=</span> repository.findById(id).orElseThrow(() -&gt; <span class="keyword">new</span> <span class="title class_">EmployeeNotFoundException</span>(id));</span><br><span class="line">		<span class="keyword">return</span> ResponseEntity.ok(employee);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 更新员工信息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@PathVariable</span> 将参数与请求路径模板绑定起来，&#123;id&#125;的值就是参数id的值</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="meta">@PutMapping(&quot;/employees/&#123;id&#125;&quot;)</span></span><br><span class="line">	<span class="keyword">public</span> ResponseEntity&lt;?&gt; replaceEmployee(<span class="meta">@RequestBody</span> Employee newEmployee, <span class="meta">@PathVariable</span> Long id) &#123;</span><br><span class="line">		<span class="comment">// 根据id查找员工，找到就update信息再保存，找不到就直接新建一个员工</span></span><br><span class="line">		repository.findById(id)</span><br><span class="line">			.map(employee -&gt; &#123;</span><br><span class="line">				employee.setName(newEmployee.getName());</span><br><span class="line">				employee.setRole(newEmployee.getRole());</span><br><span class="line">				<span class="keyword">return</span> repository.save(employee);</span><br><span class="line">			&#125;)</span><br><span class="line">			.orElseGet(() -&gt; &#123;</span><br><span class="line">				newEmployee.setId(id);</span><br><span class="line">				<span class="keyword">return</span> repository.save(newEmployee);</span><br><span class="line">			&#125;);</span><br><span class="line">		</span><br><span class="line">		<span class="keyword">return</span> ResponseEntity.noContent().build();</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 删除员工</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@PathVariable</span> 将参数与请求路径模板绑定起来，&#123;id&#125;的值就是参数id的值</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="meta">@DeleteMapping(&quot;/employees/&#123;id&#125;&quot;)</span></span><br><span class="line">	<span class="keyword">public</span> ResponseEntity&lt;?&gt; deleteEmployee(<span class="meta">@PathVariable</span> Long id) &#123;</span><br><span class="line">		repository.deleteById(id);</span><br><span class="line">		<span class="keyword">return</span> ResponseEntity.noContent().build();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="运行测试"><a href="#运行测试" class="headerlink" title="运行测试"></a>运行测试</h3><p>启动项目，查看控制台日志可看到两条初始化数据插入Database<br><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/backend/spring_boot/restful/2.png"></p>
<p>使用 Postman 对接口进行测试</p>
<p><strong>查询所有员工</strong>：<a href="http://localhost:8080/employees">http://localhost:8080/employees</a><br><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/backend/spring_boot/restful/3.png"></p>
<p><strong>查询某个员工</strong>：<a href="http://localhost:8080/employees/1">http://localhost:8080/employees/1</a><br><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/backend/spring_boot/restful/4.png"></p>
<p><strong>查询某个不存在的员工</strong>：<a href="http://localhost:8080/employees/3">http://localhost:8080/employees/3</a><br><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/backend/spring_boot/restful/5.png"></p>
<p><strong>将 id 为 1 的员工名字改为赵六</strong>：<a href="http://localhost:8080/employees/1">http://localhost:8080/employees/1</a><br><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/backend/spring_boot/restful/6.png"></p>
<p><strong>新增员工</strong>：<a href="http://localhost:8080/employees">http://localhost:8080/employees</a><br><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/backend/spring_boot/restful/7.png"></p>
<p>再查看所有员工，可见新增了王五的记录<br><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/backend/spring_boot/restful/8.png"></p>
<p><strong>删除员工</strong>：<a href="http://localhost:8080/employees/3">http://localhost:8080/employees/3</a><br><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/backend/spring_boot/restful/9.png"></p>
<p>项目已上传至 Github: <a href="https://github.com/yekongle/springboot-code-samples/tree/master/springboot-restful-sample">https://github.com/yekongle/springboot-code-samples/tree/master/springboot-restful-sample</a> , 希望对小伙伴们有帮助哦。</p>
]]></content>
      <categories>
        <category>Spring Boot</category>
      </categories>
      <tags>
        <tag>SpringBoot</tag>
        <tag>RESTful</tag>
      </tags>
  </entry>
  <entry>
    <title>Spring Boot2 实战系列之使用 RestTemplate</title>
    <url>/2020/05/02/springboot-resttemplate-sample/</url>
    <content><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>在另一篇博文 <a href="https://blog.csdn.net/qq_23483671/article/details/105474968">Spring Boot2 实战系列之RESTful Web Service</a> 中我们构建了一个 restful 风格的项目，并用 postman 来围绕 HTTP 动词 GET，POST，PUT，DELETE 对员工信息展开 CURD 操作。那么在实际项目中，如果我们想调用别人提供的 resultful api 来请求网络资源应该怎样做呢，很多人会想到用 httpclient，但是使用 httpclient 代码比较复杂，冗余代码多，相比之下，Spring 框架提供的 RestTemplate 类可用于在应用中调用 REST 服务, 它提供了许多比较简便的访问远程 HTTP 服务的方法，从而提高了客户端的开发效率。</p>
<p>RestTemplate 类是为调用REST服务而设计的，它的主要方法与 HTTP 协议方法紧密相连， 比如它有 headForHeaders()、getForObject()、postForObject()、put()和delete()等方法。</p>
<p>下面通过一个页面操作例子来演示 RestTemplate 的使用。</p>
<p><strong>注意</strong>：在启动该项目前，先启动另一篇博文中构建的 RESTful service 项目。</p>
<span id="more"></span>
<h3 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h3><p>项目结构图如下：<br><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/backend/spring_boot/rest_template/1.png"></p>
<p>pom 依赖文件如下：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">	<span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2.5.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>top.yekongle<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springboot-restclient-sample<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">name</span>&gt;</span>springboot-restclient-sample<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">description</span>&gt;</span>Rest client project for Spring Boot<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-thymeleaf<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.junit.vintage<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit-vintage-engine<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="代码编写"><a href="#代码编写" class="headerlink" title="代码编写"></a>代码编写</h3><p><strong>application.properties</strong>, 全局配置</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 容器配置</span></span><br><span class="line">server.port=8090</span><br><span class="line"></span><br><span class="line"><span class="comment"># Thymeleaf 配置</span></span><br><span class="line"><span class="comment"># 模板文件位置</span></span><br><span class="line">spring.thymeleaf.prefix=classpath:/templates/</span><br><span class="line"><span class="comment"># 文件后缀</span></span><br><span class="line">spring.thymeleaf.suffix=.html</span><br><span class="line">spring.thymeleaf.mode=HTML</span><br><span class="line"><span class="comment"># 编码</span></span><br><span class="line">spring.thymeleaf.encoding=UTF-8</span><br><span class="line"><span class="comment"># 关闭缓存</span></span><br><span class="line">spring.thymeleaf.cache=<span class="literal">false</span></span><br></pre></td></tr></table></figure>

<p><strong>RestConfig.java</strong>, RestTemplate 配置，加入到 spring bean中</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> top.yekongle.restclient.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.time.Duration;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.web.client.RestTemplateBuilder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.client.RestTemplate;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RestConfig</span> &#123;</span><br><span class="line">	</span><br><span class="line">	<span class="meta">@Bean</span></span><br><span class="line">	<span class="keyword">public</span> RestTemplate <span class="title function_">restTemplate</span><span class="params">(RestTemplateBuilder builder)</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> builder</span><br><span class="line">				.setConnectTimeout(Duration.ofMillis(<span class="number">3000</span>))</span><br><span class="line">	            .setReadTimeout(Duration.ofMillis(<span class="number">5000</span>))</span><br><span class="line">	            .build();</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<p><strong>Employee.java</strong>, 员工实体类</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> top.yekongle.restclient.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.support.ServletUriComponentsBuilder;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Employee</span> &#123;</span><br><span class="line">	<span class="keyword">private</span> Long id;</span><br><span class="line">	<span class="keyword">private</span> String name;</span><br><span class="line">	<span class="keyword">private</span> String role;</span><br><span class="line">	<span class="keyword">private</span> String uri;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 构建资源定位符</span></span><br><span class="line">	<span class="keyword">public</span> String <span class="title function_">getUri</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> ServletUriComponentsBuilder.fromCurrentRequest().path(<span class="string">&quot;/&#123;id&#125;&quot;</span>).buildAndExpand(<span class="built_in">this</span>.getId()).toUri().toString();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>EmployeeController.java</strong>, 控制器，对员工信息进行 CURD 操作</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> top.yekongle.restclient.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.HttpStatus;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.MediaType;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.ResponseEntity;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ui.Model;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.DeleteMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PathVariable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PostMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PutMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestBody;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ResponseBody;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.client.RestTemplate;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> top.yekongle.restclient.entity.Employee;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">EmployeeController</span> &#123;</span><br><span class="line">	</span><br><span class="line">	<span class="meta">@Autowired</span></span><br><span class="line">	<span class="keyword">private</span> RestTemplate restTemplate;</span><br><span class="line">	</span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 通过 RestTemplate 获取员工列表</span></span><br><span class="line"><span class="comment">	 * */</span></span><br><span class="line">	<span class="meta">@GetMapping(&quot;/employees&quot;)</span></span><br><span class="line">	<span class="keyword">public</span> String <span class="title function_">employees</span><span class="params">(Model model)</span> &#123;</span><br><span class="line">		log.info(<span class="string">&quot;Get mapping&quot;</span>);</span><br><span class="line">		<span class="keyword">final</span> <span class="type">String</span> <span class="variable">uri</span> <span class="operator">=</span> <span class="string">&quot;http://localhost:8080/employees&quot;</span>;</span><br><span class="line">		Employee[] employees = restTemplate.getForObject(uri, Employee[].class);</span><br><span class="line">		List&lt;Employee&gt; employeeList = Arrays.asList(employees);</span><br><span class="line">		log.info(<span class="string">&quot;employeeList:&#123;&#125;&quot;</span>, employeeList.toString());</span><br><span class="line">		</span><br><span class="line">		model.addAttribute(<span class="string">&quot;title&quot;</span>, <span class="string">&quot;员工列表&quot;</span>);</span><br><span class="line">		model.addAttribute(<span class="string">&quot;employees&quot;</span>, employeeList);</span><br><span class="line">		model.addAttribute(<span class="string">&quot;addEmployee&quot;</span>, <span class="string">&quot;新增员工&quot;</span>);</span><br><span class="line">		</span><br><span class="line">		<span class="keyword">return</span> <span class="string">&quot;index&quot;</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 通过 RestTemplate 删除员工信息</span></span><br><span class="line"><span class="comment">	 * */</span></span><br><span class="line">	<span class="meta">@RequestMapping(value = &quot;/employees/&#123;id&#125;&quot;)</span></span><br><span class="line">	<span class="keyword">public</span> String <span class="title function_">deleteEmployee</span><span class="params">(<span class="meta">@PathVariable</span> Long id)</span> &#123;</span><br><span class="line">		<span class="keyword">final</span> <span class="type">String</span> <span class="variable">uri</span> <span class="operator">=</span> <span class="string">&quot;http://localhost:8080/employees/&#123;id&#125;&quot;</span>;</span><br><span class="line">		Map&lt;String, String&gt; params = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;String, String&gt;();</span><br><span class="line">		params.put(<span class="string">&quot;id&quot;</span>, String.valueOf(id));</span><br><span class="line">		restTemplate.delete(uri, params);</span><br><span class="line">		<span class="keyword">return</span> <span class="string">&quot;redirect:/employees&quot;</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 通过 RestTemplate 新建员工信息</span></span><br><span class="line"><span class="comment">	 * */</span></span><br><span class="line">	<span class="meta">@PostMapping(value = &quot;/employees&quot;)</span></span><br><span class="line">	<span class="keyword">public</span>  ResponseEntity&lt;?&gt;  newEmployee(<span class="meta">@RequestBody</span> Employee newEmployee) &#123;</span><br><span class="line">		log.info(<span class="string">&quot;Post mapping&quot;</span>);</span><br><span class="line">		log.info(<span class="string">&quot;New employee:&#123;&#125;&quot;</span>, newEmployee.toString());</span><br><span class="line">		<span class="keyword">final</span> <span class="type">String</span> <span class="variable">uri</span> <span class="operator">=</span> <span class="string">&quot;http://localhost:8080/employees&quot;</span>;</span><br><span class="line">		restTemplate.postForObject(uri, newEmployee, Employee.class);</span><br><span class="line">		</span><br><span class="line">		<span class="keyword">return</span> ResponseEntity.ok().build();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 通过 RestTemplate 更新员工信息</span></span><br><span class="line"><span class="comment">	 * */</span></span><br><span class="line">	<span class="meta">@PutMapping(value = &quot;/employees/&#123;id&#125;&quot;)</span></span><br><span class="line">	<span class="keyword">public</span> ResponseEntity&lt;?&gt; updateEmployee(<span class="meta">@RequestBody</span> Employee updatedEmployee, <span class="meta">@PathVariable</span> Long id) &#123;</span><br><span class="line">		log.info(<span class="string">&quot;Put mapping&quot;</span>);</span><br><span class="line">		<span class="keyword">final</span> <span class="type">String</span> <span class="variable">uri</span> <span class="operator">=</span> <span class="string">&quot;http://localhost:8080/employees/&#123;id&#125;&quot;</span>;</span><br><span class="line">		Map&lt;String, String&gt; params = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;String, String&gt;();</span><br><span class="line">		params.put(<span class="string">&quot;id&quot;</span>, String.valueOf(id));</span><br><span class="line">		restTemplate.put(uri, updatedEmployee, params);</span><br><span class="line">		</span><br><span class="line">		<span class="keyword">return</span> ResponseEntity.ok().build();</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>index.html</strong>, 员工信息操作页面</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns:th</span>=<span class="string">&quot;http://www.thymeleaf.org&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- Thymeleaf的命名空间，将静态页面转换为动态的视图 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">content</span>=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;bootstrap/css/bootstrap.min.css&#125;&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;panel panel-primary&quot;</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;panel-heading&quot;</span>&gt;</span></span><br><span class="line">				<span class="comment">&lt;!-- 需要动态处理的元素使用 th: 为前缀，通过 $&#123;&#125; 访问 model中的属性--&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">h3</span> <span class="attr">class</span>=<span class="string">&quot;panel-title&quot;</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;title&#125;&quot;</span>&gt;</span>title<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;panel-body&quot;</span>&gt;</span></span><br><span class="line">				<span class="comment">&lt;!--数据判断--&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">div</span> <span class="attr">th:if</span>=<span class="string">&quot;$&#123;not #lists.isEmpty(employees)&#125;&quot;</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">table</span> <span class="attr">class</span>=<span class="string">&quot;table table-bordered table-hover&quot;</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">								<span class="tag">&lt;<span class="name">th</span>&gt;</span>ID<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">								<span class="tag">&lt;<span class="name">th</span>&gt;</span>姓名<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">								<span class="tag">&lt;<span class="name">th</span>&gt;</span>职位<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">								<span class="tag">&lt;<span class="name">th</span>&gt;</span>操作<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">							<span class="comment">&lt;!--数据迭代--&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">tr</span> <span class="attr">th:each</span>=<span class="string">&quot;employee: $&#123;employees&#125;&quot;</span>&gt;</span></span><br><span class="line">								<span class="tag">&lt;<span class="name">td</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;employee.id&#125;&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;tdclick(this)&quot;</span>&gt;</span>ID<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">								<span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">&quot;name&quot;</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;employee.name&#125;&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;tdclick(this)&quot;</span>&gt;</span>Name<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">								<span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">&quot;role&quot;</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;employee.role&#125;&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;tdclick(this)&quot;</span>&gt;</span>Role<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">								<span class="tag">&lt;<span class="name">td</span>&gt;</span> <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span> =<span class="string">&quot;update&quot;</span>  <span class="attr">th:url</span>=<span class="string">&quot;$&#123;employee.uri&#125;&quot;</span>&gt;</span>更改<span class="tag">&lt;/<span class="name">a</span>&gt;</span> | <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span> =<span class="string">&quot;delete&quot;</span>  <span class="attr">th:href</span>=<span class="string">&quot;$&#123;employee.uri&#125;&quot;</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;panel panel-primary&quot;</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;panel-heading&quot;</span>&gt;</span></span><br><span class="line">				<span class="comment">&lt;!-- 需要动态处理的元素使用 th: 为前缀，通过 $&#123;&#125; 访问 model中的属性--&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">h3</span> <span class="attr">class</span>=<span class="string">&quot;panel-title&quot;</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;addEmployee&#125;&quot;</span>&gt;</span>addEmployee<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;panel-body&quot;</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row&quot;</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group col-md-6&quot;</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;name&quot;</span>&gt;</span>姓名<span class="tag">&lt;/<span class="name">label</span>&gt;</span> <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span></span></span><br><span class="line"><span class="tag">								<span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">id</span>=<span class="string">&quot;name&quot;</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row&quot;</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group col-md-6&quot;</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;role&quot;</span>&gt;</span>职位<span class="tag">&lt;/<span class="name">label</span>&gt;</span> <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span></span></span><br><span class="line"><span class="tag">								<span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">id</span>=<span class="string">&quot;role&quot;</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row&quot;</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group col-md-6&quot;</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span> =<span class="string">&quot;submit&quot;</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-primary&quot;</span>&gt;</span>新增<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">	<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">th:src</span>=<span class="string">&quot;@&#123;jquery.min.js&#125;&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">th:src</span>=<span class="string">&quot;@&#123;bootstrap/js/bootstrap.min.js&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span> </span><br><span class="line"></span><br><span class="line">	<span class="comment">&lt;!--在 javascript 中访问model属性--&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">script</span> <span class="attr">th:inline</span>=<span class="string">&quot;javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> title = [[$&#123;title&#125;]];</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(title);</span></span><br><span class="line"><span class="language-javascript">        </span></span><br><span class="line"><span class="language-javascript">        $(<span class="string">&quot;#submit&quot;</span>).<span class="title function_">on</span>(<span class="string">&quot;click&quot;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;click&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">var</span> name =  $(<span class="string">&quot;#name&quot;</span>).<span class="title function_">val</span>();</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">var</span> role = $(<span class="string">&quot;#role&quot;</span>).<span class="title function_">val</span>();</span></span><br><span class="line"><span class="language-javascript">            </span></span><br><span class="line"><span class="language-javascript">            $.<span class="title function_">ajax</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">url</span>: <span class="string">&quot;/employees&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                type : <span class="string">&quot;POST&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">contentType</span>: <span class="string">&quot;application/json;charset=utf-8&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">data</span>: <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(&#123;<span class="string">&#x27;name&#x27;</span>: name, <span class="string">&#x27;role&#x27;</span>: role&#125;),</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">success</span>: <span class="keyword">function</span> (<span class="params">data</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                	$.<span class="title function_">ajax</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">url</span>: <span class="string">&quot;/employees&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">type</span>: <span class="string">&quot;GET&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">success</span>: <span class="keyword">function</span> (<span class="params">data</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                        	location.<span class="title function_">reload</span>();</span></span><br><span class="line"><span class="language-javascript">                        &#125;</span></span><br><span class="line"><span class="language-javascript">                	&#125;);</span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">error</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;error&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;);</span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript">        </span></span><br><span class="line"><span class="language-javascript">        $(<span class="string">&quot;a.update&quot;</span>).<span class="title function_">each</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">			$(<span class="variable language_">this</span>).<span class="title function_">on</span>(<span class="string">&quot;click&quot;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">	        	<span class="keyword">var</span> updateUrl = $(<span class="variable language_">this</span>).<span class="title function_">attr</span>(<span class="string">&quot;url&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">	            <span class="keyword">var</span> name = $(<span class="variable language_">this</span>).<span class="title function_">parent</span>().<span class="title function_">siblings</span>(<span class="string">&quot;.name&quot;</span>).<span class="title function_">html</span>();</span></span><br><span class="line"><span class="language-javascript">	            <span class="keyword">var</span> role = $(<span class="variable language_">this</span>).<span class="title function_">parent</span>().<span class="title function_">siblings</span>(<span class="string">&quot;.role&quot;</span>).<span class="title function_">html</span>();</span></span><br><span class="line"><span class="language-javascript">				$.<span class="title function_">ajax</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">	                <span class="attr">url</span>: updateUrl,</span></span><br><span class="line"><span class="language-javascript">	                <span class="attr">type</span>: <span class="string">&quot;PUT&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">	                <span class="attr">contentType</span>: <span class="string">&quot;application/json;charset=utf-8&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">	                <span class="attr">data</span>: <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(&#123;<span class="string">&#x27;name&#x27;</span>: name, <span class="string">&#x27;role&#x27;</span>: role&#125;),</span></span><br><span class="line"><span class="language-javascript">	                <span class="attr">success</span>: <span class="keyword">function</span> (<span class="params">data</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">	                	<span class="title function_">alert</span>(<span class="string">&quot;Update success!&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">	                	$.<span class="title function_">ajax</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">	                        <span class="attr">url</span>: <span class="string">&quot;/employees&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">	                        type : <span class="string">&quot;GET&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">	                        <span class="attr">success</span>: <span class="keyword">function</span> (<span class="params">data</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">	                        	location.<span class="title function_">reload</span>();</span></span><br><span class="line"><span class="language-javascript">	                        &#125;</span></span><br><span class="line"><span class="language-javascript">	                	&#125;);</span></span><br><span class="line"><span class="language-javascript">	                &#125;</span></span><br><span class="line"><span class="language-javascript">				&#125;);</span></span><br><span class="line"><span class="language-javascript">      	  	&#125;);</span></span><br><span class="line"><span class="language-javascript">        &#125;);  </span></span><br><span class="line"><span class="language-javascript">        </span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">function</span> <span class="title function_">tdclick</span>(<span class="params">tdobject</span>) &#123; </span></span><br><span class="line"><span class="language-javascript">        	 <span class="keyword">var</span> td=$(tdobject); </span></span><br><span class="line"><span class="language-javascript">        	 td.<span class="title function_">attr</span>(<span class="string">&quot;onclick&quot;</span>, <span class="string">&quot;&quot;</span>); </span></span><br><span class="line"><span class="language-javascript">        	 <span class="comment">//1,取出当前td中的文本内容保存起来 </span></span></span><br><span class="line"><span class="language-javascript">        	 <span class="keyword">var</span> text=td.<span class="title function_">text</span>(); </span></span><br><span class="line"><span class="language-javascript">        	 <span class="comment">//2,清空td里面的内容 </span></span></span><br><span class="line"><span class="language-javascript">        	 td.<span class="title function_">html</span>(<span class="string">&quot;&quot;</span>); <span class="comment">//也可以用td.empty(); </span></span></span><br><span class="line"><span class="language-javascript">        	 <span class="comment">//3，建立一个文本框，也就是input的元素节点 </span></span></span><br><span class="line"><span class="language-javascript">        	 <span class="keyword">var</span> input=$(<span class="string">&quot;&lt;input&gt;&quot;</span>); </span></span><br><span class="line"><span class="language-javascript">        	 <span class="comment">//4，设置文本框的值是保存起来的文本内容 </span></span></span><br><span class="line"><span class="language-javascript">        	 input.<span class="title function_">attr</span>(<span class="string">&quot;value&quot;</span>, text); </span></span><br><span class="line"><span class="language-javascript">        	 input.<span class="title function_">bind</span>(<span class="string">&quot;blur&quot;</span>,<span class="keyword">function</span>(<span class="params"></span>)&#123; </span></span><br><span class="line"><span class="language-javascript">        	  <span class="keyword">var</span> inputnode=$(<span class="variable language_">this</span>); </span></span><br><span class="line"><span class="language-javascript">        	  <span class="keyword">var</span> inputtext=inputnode.<span class="title function_">val</span>(); </span></span><br><span class="line"><span class="language-javascript">        	  <span class="keyword">var</span> tdNode=inputnode.<span class="title function_">parent</span>(); </span></span><br><span class="line"><span class="language-javascript">        	  tdNode.<span class="title function_">html</span>(inputtext); </span></span><br><span class="line"><span class="language-javascript">        	  tdNode.<span class="title function_">click</span>(tdclick); </span></span><br><span class="line"><span class="language-javascript">        	  td.<span class="title function_">attr</span>(<span class="string">&quot;onclick&quot;</span>, <span class="string">&quot;tdclick(this)&quot;</span>); </span></span><br><span class="line"><span class="language-javascript">        	 &#125;); </span></span><br><span class="line"><span class="language-javascript">        	 </span></span><br><span class="line"><span class="language-javascript">        	 input.<span class="title function_">keyup</span>(<span class="keyword">function</span>(<span class="params">event</span>)&#123; </span></span><br><span class="line"><span class="language-javascript">        	  <span class="keyword">var</span> myEvent =event||<span class="variable language_">window</span>.<span class="property">event</span>; </span></span><br><span class="line"><span class="language-javascript">        	  <span class="keyword">var</span> kcode=myEvent.<span class="property">keyCode</span>; </span></span><br><span class="line"><span class="language-javascript">        	  <span class="keyword">if</span>(kcode==<span class="number">13</span>)&#123; </span></span><br><span class="line"><span class="language-javascript">        	   <span class="keyword">var</span> inputnode=$(<span class="variable language_">this</span>); </span></span><br><span class="line"><span class="language-javascript">        	   <span class="keyword">var</span> inputtext=inputnode.<span class="title function_">val</span>(); </span></span><br><span class="line"><span class="language-javascript">        	   <span class="keyword">var</span> tdNode=inputnode.<span class="title function_">parent</span>(); </span></span><br><span class="line"><span class="language-javascript">        	   tdNode.<span class="title function_">html</span>(inputtext); </span></span><br><span class="line"><span class="language-javascript">        	   tdNode.<span class="title function_">click</span>(tdclick); </span></span><br><span class="line"><span class="language-javascript">        	  &#125; </span></span><br><span class="line"><span class="language-javascript">        	 &#125;); </span></span><br><span class="line"><span class="language-javascript">        	  </span></span><br><span class="line"><span class="language-javascript">        	 <span class="comment">//5，将文本框加入到td中 </span></span></span><br><span class="line"><span class="language-javascript">        	 td.<span class="title function_">append</span>(input); </span></span><br><span class="line"><span class="language-javascript">        	 <span class="keyword">var</span> t =input.<span class="title function_">val</span>(); </span></span><br><span class="line"><span class="language-javascript">        	 input.<span class="title function_">val</span>(<span class="string">&quot;&quot;</span>).<span class="title function_">focus</span>().<span class="title function_">val</span>(t); </span></span><br><span class="line"><span class="language-javascript">        	  </span></span><br><span class="line"><span class="language-javascript">        	 <span class="comment">//6,清除点击事件 </span></span></span><br><span class="line"><span class="language-javascript">        	 td.<span class="title function_">unbind</span>(<span class="string">&quot;click&quot;</span>); </span></span><br><span class="line"><span class="language-javascript">        	&#125;</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="运行演示"><a href="#运行演示" class="headerlink" title="运行演示"></a>运行演示</h3><p>首先启动 Restful service 项目，默认在 8080 端口<br>然后启动 Restful client 项目，在 8090 端口<br><strong>访问 <a href="http://localhost:8090/employees%EF%BC%8C">http://localhost:8090/employees，</a> 获取员工信息列表</strong></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/backend/spring_boot/rest_template/2.png"></p>
<p><strong>双击员工信息字段进行更改，然后点击右侧 “更改”</strong><br><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/backend/spring_boot/rest_template/3.png"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/backend/spring_boot/rest_template/4.png"></p>
<p><strong>新增员工信息</strong><br><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/backend/spring_boot/rest_template/5.png"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/backend/spring_boot/rest_template/6.png"></p>
<p><strong>删除员工信息</strong><br><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/backend/spring_boot/rest_template/7.png"></p>
<p>项目已上传至 Github: <a href="https://github.com/yekongle/springboot-code-samples/tree/master/springboot-restclient-sample">https://github.com/yekongle/springboot-code-samples/tree/master/springboot-restclient-sample</a> , 希望对小伙伴们有帮助哦。</p>
<p>参考链接：<br><a href="https://www.cnblogs.com/f-anything/p/10084215.html">https://www.cnblogs.com/f-anything/p/10084215.html</a></p>
]]></content>
      <categories>
        <category>Spring Boot</category>
      </categories>
      <tags>
        <tag>SpringBoot</tag>
        <tag>RestTemplate</tag>
      </tags>
  </entry>
  <entry>
    <title>Spring Boot2 实战系列之使用Thymeleaf模板引擎</title>
    <url>/2020/05/02/springboot-thymeleaf-sample/</url>
    <content><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>Thymeleaf 是一个 xml, xhtml,html5 的模板引擎，Spring Boot 官方推荐使用 Thymeleaf 引擎，因为它对 Spring MVC 提供了完美的支持。我们知道以前的 Spring MVC web应用在视图层常使用 JSP，但 springboot 使用的是内嵌的 servlet 容器，而内嵌的 Tomcat 和 Jetty 不支持以 jar 形式运行 JPS，Undertow也不支持 JPS，所以在SpringBoot 中我们完全可以使用 Thymeleaf来代替 JSP。</p>
<p>在 Spring Boot 中使用 Thymeleaf 非常方便，它已经通过 org.springframework.boot.autoconfigure.thymeleaf 包对 Thymeleaf 进行了自动配置, 如下图所示</p>
<span id="more"></span>

<p><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/backend/spring_boot/thymeleaf/1.png"></p>
<p>我们只需要引入它的依赖即可</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-thymeleaf<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>下面通过一个例子来说明 Thymeleaf 的一些用法，更多详情请看 Thymeleaf 官网：<a href="https://www.thymeleaf.org/">https://www.thymeleaf.org/</a></p>
<h3 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h3><p>项目结构图如下：</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/backend/spring_boot/thymeleaf/2.png"></p>
<p>pom 依赖文件如下：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">	<span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2.5.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>top.yekongle<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springboot-thymeleaf-sample<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">name</span>&gt;</span>springboot-thymeleaf-sample<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">description</span>&gt;</span>Thymeleaf sample for Spring Boot<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-thymeleaf<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.junit.vintage<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit-vintage-engine<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="代码编写"><a href="#代码编写" class="headerlink" title="代码编写"></a>代码编写</h3><p><strong>application.properties</strong>, 全局配置文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Thymeleaf 配置</span></span><br><span class="line"><span class="comment"># 模板文件位置</span></span><br><span class="line">spring.thymeleaf.prefix=classpath:/templates/</span><br><span class="line"><span class="comment"># 文件后缀</span></span><br><span class="line">spring.thymeleaf.suffix=.html</span><br><span class="line">spring.thymeleaf.mode=HTML5</span><br><span class="line"><span class="comment"># 编码</span></span><br><span class="line">spring.thymeleaf.encoding=UTF-8</span><br><span class="line"><span class="comment"># 关闭缓存</span></span><br><span class="line">spring.thymeleaf.cache=<span class="literal">false</span></span><br></pre></td></tr></table></figure>


<p><strong>Product.java</strong>, 商品属性</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> top.yekongle.thymeleaf.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.AllArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Product</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String category;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">double</span> price;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>PageController.java</strong>, 将商品信息返回给页面</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> top.yekongle.thymeleaf.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ui.Model;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> top.yekongle.thymeleaf.entity.Product;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PageController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">index</span><span class="params">(Model model)</span> &#123;</span><br><span class="line">        List&lt;Product&gt; productList = <span class="built_in">this</span>.getProductList();</span><br><span class="line">        model.addAttribute(<span class="string">&quot;products&quot;</span>, productList);</span><br><span class="line">        model.addAttribute(<span class="string">&quot;title&quot;</span>, <span class="string">&quot;商品列表&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;index&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    List&lt;Product&gt; <span class="title function_">getProductList</span><span class="params">()</span> &#123;</span><br><span class="line">        List&lt;Product&gt; productList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        <span class="type">Product</span> <span class="variable">product1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Product</span>(<span class="string">&quot;手机&quot;</span>, <span class="string">&quot;小米10&quot;</span>, <span class="number">3499</span>);</span><br><span class="line">        <span class="type">Product</span> <span class="variable">product2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Product</span>(<span class="string">&quot;手机&quot;</span>, <span class="string">&quot;华为P40&quot;</span>, <span class="number">4188</span>);</span><br><span class="line">        <span class="type">Product</span> <span class="variable">product3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Product</span>(<span class="string">&quot;手机&quot;</span>, <span class="string">&quot;一加8&quot;</span>, <span class="number">3999</span>);</span><br><span class="line">        productList.add(product1);</span><br><span class="line">        productList.add(product2);</span><br><span class="line">        productList.add(product3);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> productList;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>index.html</strong>，商品展示页面</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns:th</span>=<span class="string">&quot;http://www.thymeleaf.org&quot;</span>&gt;</span><span class="comment">&lt;!-- Thymeleaf的命名空间，将静态页面转换为动态的视图 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">content</span>=<span class="string">&quot;text/html;charset=UTF-8&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;bootstrap/css/bootstrap.min.css&#125;&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;panel panel-primary&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;panel-heading&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 需要动态处理的元素使用 th: 为前缀，通过 $&#123;&#125; 访问 model中的属性--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h3</span> <span class="attr">class</span>=<span class="string">&quot;panel-title&quot;</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;title&#125;&quot;</span>&gt;</span>title<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;panel-body&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--数据判断--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">th:if</span>=<span class="string">&quot;$&#123;not #lists.isEmpty(products)&#125;&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">table</span> <span class="attr">class</span>=<span class="string">&quot;table table-bordered table-hover&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">th</span>&gt;</span>Category<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">th</span>&gt;</span>Name<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">th</span>&gt;</span>Price<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">                        <span class="comment">&lt;!--数据迭代--&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">tr</span> <span class="attr">th:each</span>=<span class="string">&quot;product: $&#123;products&#125;&quot;</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">td</span> <span class="attr">th:texts</span>=<span class="string">&quot;$&#123;product.category&#125;&quot;</span>&gt;</span>Category<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">td</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;product.name&#125;&quot;</span>&gt;</span>name<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">td</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;#numbers.formatDecimal(product.price, 1, 2)&#125;&quot;</span>&gt;</span>0.99<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">th:src</span>=<span class="string">&quot;@&#123;jquery.min.js&#125;&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">th:src</span>=<span class="string">&quot;@&#123;bootstrap/js/bootstrap.min.js&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--在 javascript 中访问model属性, 使用 [[$&#123;&#125;]] 来获得实际的值--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">th:inline</span>=<span class="string">&quot;javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  	<span class="keyword">var</span> title = [[$&#123;title&#125;]];</span></span><br><span class="line"><span class="language-javascript">  	<span class="variable language_">console</span>.<span class="title function_">log</span>(title);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="运行演示"><a href="#运行演示" class="headerlink" title="运行演示"></a>运行演示</h3><p>启动项目<br>访问 <a href="http://localhost:8080/">http://localhost:8080/</a>, 商品信息都展示了出来，控制台也打印出了属性 title</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/backend/spring_boot/thymeleaf/3.png"></p>
<p>项目已上传至 Github: <a href="https://github.com/yekongle/springboot-code-samples/tree/master/springboot-thymeleaf-sample">https://github.com/yekongle/springboot-code-samples/tree/master/springboot-thymeleaf-sample</a> , 希望对小伙伴们有帮助哦。</p>
]]></content>
      <categories>
        <category>Spring Boot</category>
      </categories>
      <tags>
        <tag>SpringBoot</tag>
        <tag>Thymeleaf</tag>
      </tags>
  </entry>
  <entry>
    <title>Spring Boot2 实战系列之使用 Spring Security 实现登录</title>
    <url>/2020/05/23/springboot-security-login-sample/</url>
    <content><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>在之前的一篇博文 <a href="https://blog.csdn.net/qq_23483671/article/details/105607780">Spring Boot2 实战系列之语言国际化</a> 中利用了 BootStrap 官网的一个登录页面实现了语言国际化，这次在此之上进行改进，增加 Spring Security 的功能，使其能对登录用户进行认证。</p>
<p>Spring Boot 已经为 spring security 进行了自动配置，只需要引入以下依赖即可：</p>
<span id="more"></span>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">	&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">	&lt;artifactId&gt;spring-boot-starter-security&lt;/artifactId&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure>

<p>在这次这个例子中主要演示了用户登录，用户不同权限的展示和退出登录的功能。</p>
<h3 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h3><p>项目结构图如下：<br><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/backend/spring_boot/security_login/1.png"></p>
<p>pom 依赖文件如下：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">	<span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2.5.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>top.yekongle<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springboot-security-login-sample<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">name</span>&gt;</span>springboot-security-login-sample<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">description</span>&gt;</span>Security login sample for Spring Boot<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-security<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.thymeleaf.extras<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>thymeleaf-extras-springsecurity5<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-thymeleaf<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.junit.vintage<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit-vintage-engine<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.security<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-security-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>


<h3 id="代码编写"><a href="#代码编写" class="headerlink" title="代码编写"></a>代码编写</h3><p><strong>application.properties</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 国际化i18n配置，(包名.基础名)</span></span><br><span class="line">spring.messages.basename=i18n.login</span><br><span class="line">spring.messages.encoding=UTF-8</span><br><span class="line"></span><br><span class="line"><span class="comment"># Thymeleaf 配置</span></span><br><span class="line">spring.thymeleaf.prefix=classpath:/templates/</span><br><span class="line">spring.thymeleaf.suffix=.html</span><br><span class="line"><span class="comment"># 禁止缓存</span></span><br><span class="line">spring.thymeleaf.cache=<span class="literal">false</span></span><br></pre></td></tr></table></figure>

<p>Web 安全配置，使用了基于内存的用户认证，初始化了3个用户，有 USER 和 ADMIN 两种权限，不用在前面加 “ROLE_”, spring boot 会自动加上<br><strong>WebSecurityConfig.java</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> top.yekongle.security.login.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.HttpMethod;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.annotation.web.builders.HttpSecurity;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.crypto.password.PasswordEncoder;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment">* <span class="doctag">@Description</span>: </span></span><br><span class="line"><span class="comment">* <span class="doctag">@Author</span>: Yekongle </span></span><br><span class="line"><span class="comment">* <span class="doctag">@Date</span>: 2020年5月17日</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WebSecurityConfig</span> <span class="keyword">extends</span> <span class="title class_">WebSecurityConfigurerAdapter</span> &#123;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> PasswordEncoder <span class="title function_">passwordEncoder</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">BCryptPasswordEncoder</span>();</span><br><span class="line">    &#125;</span><br><span class="line">	</span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">configure</span><span class="params">(AuthenticationManagerBuilder auth)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">		auth.inMemoryAuthentication()</span><br><span class="line">			.withUser(<span class="string">&quot;Jack&quot;</span>).password(<span class="string">&quot;$2a$10$jxi3LTkdNRPMv0Cb6ag9kO/7xYUnkN.9aTKoSag8u3Ep8pBe2rMMm&quot;</span>).roles(<span class="string">&quot;USER&quot;</span>)</span><br><span class="line">			.and()</span><br><span class="line">			.withUser(<span class="string">&quot;David&quot;</span>).password(<span class="string">&quot;$2a$10$jxi3LTkdNRPMv0Cb6ag9kO/7xYUnkN.9aTKoSag8u3Ep8pBe2rMMm&quot;</span>).roles(<span class="string">&quot;USER&quot;</span>)</span><br><span class="line">			.and()</span><br><span class="line">			.withUser(<span class="string">&quot;Kevin&quot;</span>).password(<span class="string">&quot;$2a$10$jxi3LTkdNRPMv0Cb6ag9kO/7xYUnkN.9aTKoSag8u3Ep8pBe2rMMm&quot;</span>).roles(<span class="string">&quot;ADMIN&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">configure</span><span class="params">(HttpSecurity http)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">		http</span><br><span class="line">			.csrf().disable()</span><br><span class="line">			.authorizeRequests()</span><br><span class="line">			.antMatchers(<span class="string">&quot;/css/**&quot;</span>, <span class="string">&quot;/js/**&quot;</span>, <span class="string">&quot;/fonts/**&quot;</span>, <span class="string">&quot;/img/**&quot;</span>).permitAll()</span><br><span class="line">			.antMatchers(HttpMethod.OPTIONS, <span class="string">&quot;/**&quot;</span>).permitAll()</span><br><span class="line">			.antMatchers(<span class="string">&quot;/admin/**&quot;</span>).hasRole(<span class="string">&quot;ADMIN&quot;</span>)</span><br><span class="line">			.antMatchers(<span class="string">&quot;/login*&quot;</span>, <span class="string">&quot;/logout*&quot;</span>).permitAll()</span><br><span class="line">			.anyRequest().authenticated()</span><br><span class="line">			.and()</span><br><span class="line">			.formLogin()</span><br><span class="line">			.loginPage(<span class="string">&quot;/login&quot;</span>)</span><br><span class="line">			.defaultSuccessUrl(<span class="string">&quot;/home.html&quot;</span>)</span><br><span class="line">			.failureUrl(<span class="string">&quot;/login?error=true&quot;</span>).permitAll()</span><br><span class="line">			.and()</span><br><span class="line">			.logout()</span><br><span class="line">			.deleteCookies(<span class="string">&quot;JSESSIONID&quot;</span>)</span><br><span class="line">			.logoutSuccessUrl(<span class="string">&quot;/logout.html?logSucc=true&quot;</span>).permitAll();</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="comment">/*</span></span><br><span class="line"><span class="comment">	 * public static void main(String[] args) &#123; System.out.println(new</span></span><br><span class="line"><span class="comment">	 * BCryptPasswordEncoder().encode(&quot;A123456!&quot;)); &#125;</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>WebMvcConfig.java</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> top.yekongle.security.login.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Locale;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.LocaleResolver;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.InterceptorRegistry;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.ViewControllerRegistry;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.WebMvcConfigurer;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.i18n.CookieLocaleResolver;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.i18n.LocaleChangeInterceptor;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment">* <span class="doctag">@Description</span>: I18n config</span></span><br><span class="line"><span class="comment">* <span class="doctag">@Author</span>: Yekongle </span></span><br><span class="line"><span class="comment">* <span class="doctag">@Date</span>: Mar 22, 2020</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WebMvcConfig</span> <span class="keyword">implements</span> <span class="title class_">WebMvcConfigurer</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addViewControllers</span><span class="params">(ViewControllerRegistry registry)</span> &#123;</span><br><span class="line">        <span class="comment">//设置对&quot;/&quot;的请求映射到login</span></span><br><span class="line">        <span class="comment">//如果没有逻辑业务，没有必要用控制器方法对请求进行映射</span></span><br><span class="line">    	registry.addViewController(<span class="string">&quot;/&quot;</span>).setViewName(<span class="string">&quot;forward:/login&quot;</span>);</span><br><span class="line">        registry.addViewController(<span class="string">&quot;/admin&quot;</span>).setViewName(<span class="string">&quot;dashboard&quot;</span>);</span><br><span class="line">        registry.addViewController(<span class="string">&quot;/logout.html&quot;</span>);</span><br><span class="line">        registry.addViewController(<span class="string">&quot;/home.html&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * 配置拦截器获取URL中的 lang 参数 (?lang=zh_CN）</span></span><br><span class="line"><span class="comment">     * */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addInterceptors</span><span class="params">(<span class="keyword">final</span> InterceptorRegistry registry)</span> &#123;</span><br><span class="line">        <span class="keyword">final</span> <span class="type">LocaleChangeInterceptor</span> <span class="variable">localeChangeInterceptor</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">LocaleChangeInterceptor</span>();</span><br><span class="line">        localeChangeInterceptor.setParamName(<span class="string">&quot;lang&quot;</span>);</span><br><span class="line">        registry.addInterceptor(localeChangeInterceptor);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * 注册我们自定义的区域解析器，</span></span><br><span class="line"><span class="comment">     * 一旦将区域解析器注册到Spring容器中</span></span><br><span class="line"><span class="comment">     * 则SpingBoot默认提供的区域解析器将不会自动注册</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> LocaleResolver <span class="title function_">localeResolver</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">final</span> <span class="type">CookieLocaleResolver</span> <span class="variable">cookieLocaleResolver</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CookieLocaleResolver</span>();</span><br><span class="line">        cookieLocaleResolver.setDefaultLocale(Locale.CHINESE);</span><br><span class="line">        <span class="keyword">return</span> cookieLocaleResolver;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>登录控制跳转<br><strong>LoginController.java</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> top.yekongle.security.login.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.security.authentication.AnonymousAuthenticationToken;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.Authentication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.context.SecurityContextHolder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment">* <span class="doctag">@Description</span>: </span></span><br><span class="line"><span class="comment">* <span class="doctag">@Author</span>: Yekongle </span></span><br><span class="line"><span class="comment">* <span class="doctag">@Date</span>: 2020年5月17日</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LoginController</span> &#123;</span><br><span class="line">	<span class="meta">@GetMapping(&quot;/login&quot;)</span></span><br><span class="line">	<span class="keyword">public</span> String <span class="title function_">login</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="type">Authentication</span> <span class="variable">auth</span> <span class="operator">=</span> SecurityContextHolder.getContext().getAuthentication();</span><br><span class="line">		<span class="keyword">if</span> (auth <span class="keyword">instanceof</span> AnonymousAuthenticationToken) &#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="string">&quot;login&quot;</span>;</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="string">&quot;home&quot;</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>登录页面<br><strong>login.html</strong></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span> <span class="attr">xmlns:th</span>=<span class="string">&quot;http://www.thymeleaf.org&quot;</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span> <span class="attr">content</span>=<span class="string">&quot;text/html; charset=UTF-8&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1, shrink-to-fit=no&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;description&quot;</span> <span class="attr">content</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;author&quot;</span> <span class="attr">content</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">title</span>&gt;</span>Signin Template for Bootstrap<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- Bootstrap core CSS --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;/css/bootstrap.min.css&quot;</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/css/bootstrap.min.css&#125;&quot;</span>  <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- Custom styles for this template --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;/css/signin.css&quot;</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/css/signin.css&#125;&quot;</span>  <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">	<span class="tag">&lt;<span class="name">body</span> <span class="attr">class</span>=<span class="string">&quot;text-center&quot;</span>&gt;</span></span><br><span class="line">	   </span><br><span class="line">		<span class="tag">&lt;<span class="name">form</span> <span class="attr">class</span>=<span class="string">&quot;form-signin&quot;</span> <span class="attr">action</span>=<span class="string">&quot;login&quot;</span> <span class="attr">method</span>=<span class="string">&#x27;POST&#x27;</span>&gt;</span></span><br><span class="line">		    <span class="tag">&lt;<span class="name">div</span> <span class="attr">th:if</span>=<span class="string">&quot;$&#123;param.error != null&#125;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;alert alert-danger&quot;</span> &gt;</span>[[#&#123;login.error&#125;]]<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">img</span> <span class="attr">class</span>=<span class="string">&quot;mb-4&quot;</span> <span class="attr">src</span>=<span class="string">&quot;/img/bootstrap-solid.svg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> <span class="attr">width</span>=<span class="string">&quot;72&quot;</span> <span class="attr">height</span>=<span class="string">&quot;72&quot;</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">&quot;h3 mb-3 font-weight-normal&quot;</span> <span class="attr">th:text</span>=<span class="string">&quot;#&#123;login.tip&#125;&quot;</span>&gt;</span>Please sign in<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">&quot;sr-only&quot;</span>&gt;</span>Username<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">th:placeholder</span>=<span class="string">&quot;#&#123;login.username&#125;&quot;</span> <span class="attr">required</span>=<span class="string">&quot;&quot;</span> <span class="attr">autofocus</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">&quot;sr-only&quot;</span>&gt;</span>Password<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">th:placeholder</span>=<span class="string">&quot;#&#123;login.password&#125;&quot;</span> <span class="attr">required</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;checkbox mb-3&quot;</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">label</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">value</span>=<span class="string">&quot;remember&quot;</span>&gt;</span>  [[#&#123;login.remember&#125;]]</span><br><span class="line">        <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-lg btn-primary btn-block&quot;</span> <span class="attr">th:text</span>=<span class="string">&quot;#&#123;login.btn&#125;&quot;</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span>&gt;</span>Sign in<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;mt-5 mb-3 text-muted&quot;</span>&gt;</span>© 2017-2020<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-sm&quot;</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/login(lang=&#x27;zh_CN&#x27;)&#125;&quot;</span>&gt;</span>中文<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-sm&quot;</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/login(lang=&#x27;en_US&#x27;)&#125;&quot;</span>&gt;</span>English<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">		</span><br><span class="line">		</span><br><span class="line">	    <span class="tag">&lt;<span class="name">script</span> <span class="attr">th:src</span>=<span class="string">&quot;@&#123;/js/jquery-3.5.1.min.js&#125;&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">	    <span class="tag">&lt;<span class="name">script</span> <span class="attr">th:src</span>=<span class="string">&quot;@&#123;/js/bootstrap.min.js&#125;&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>主页，注意下面这一句，只有拥有 “ADMIN” 角色的用户才能看到</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">sec:authorize</span>=<span class="string">&quot;hasAuthority(&#x27;ROLE_ADMIN&#x27;)&quot;</span>  <span class="attr">class</span>=<span class="string">&quot;btn btn-outline-success my-2 my-sm-0&quot;</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/admin&#125;&quot;</span>&gt;</span>Console<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>home.html</strong></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- saved from url=(0046)https://v4.bootcss.com/docs/examples/carousel/ --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">head</span>&gt;</span><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span> <span class="attr">content</span>=<span class="string">&quot;text/html; charset=UTF-8&quot;</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1, shrink-to-fit=no&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;description&quot;</span> <span class="attr">content</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;author&quot;</span> <span class="attr">content</span>=<span class="string">&quot;Mark Otto, Jacob Thornton, and Bootstrap contributors&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;generator&quot;</span> <span class="attr">content</span>=<span class="string">&quot;Jekyll v3.8.6&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Carousel Template · Bootstrap<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;canonical&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://v4.bootcss.com/docs/examples/carousel/&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- Bootstrap core CSS --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;/css/bootstrap.min.css&quot;</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/css/bootstrap.min.css&#125;&quot;</span>  <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;theme-color&quot;</span> <span class="attr">content</span>=<span class="string">&quot;#563d7c&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.bd-placeholder-img</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">font-size</span>: <span class="number">1.125rem</span>;</span></span><br><span class="line"><span class="language-css">        text-anchor: middle;</span></span><br><span class="line"><span class="language-css">        -webkit-user-select: none;</span></span><br><span class="line"><span class="language-css">        -moz-user-select: none;</span></span><br><span class="line"><span class="language-css">        -ms-user-select: none;</span></span><br><span class="line"><span class="language-css">        user-select: none;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">      <span class="keyword">@media</span> (<span class="attribute">min-width</span>: <span class="number">768px</span>) &#123;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.bd-placeholder-img-lg</span> &#123;</span></span><br><span class="line"><span class="language-css">          <span class="attribute">font-size</span>: <span class="number">3.5rem</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Custom styles for this template --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/css/carousel.css&#125;&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">header</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">nav</span> <span class="attr">class</span>=<span class="string">&quot;navbar navbar-expand-md navbar-dark fixed-top bg-dark&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;navbar-brand&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://v4.bootcss.com/docs/examples/carousel/#&quot;</span>&gt;</span>Carousel<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;navbar-toggler&quot;</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">data-toggle</span>=<span class="string">&quot;collapse&quot;</span> <span class="attr">data-target</span>=<span class="string">&quot;#navbarCollapse&quot;</span> <span class="attr">aria-controls</span>=<span class="string">&quot;navbarCollapse&quot;</span> <span class="attr">aria-expanded</span>=<span class="string">&quot;false&quot;</span> <span class="attr">aria-label</span>=<span class="string">&quot;Toggle navigation&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;navbar-toggler-icon&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;collapse navbar-collapse&quot;</span> <span class="attr">id</span>=<span class="string">&quot;navbarCollapse&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;navbar-nav mr-auto&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;nav-item active&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;nav-link&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://v4.bootcss.com/docs/examples/carousel/#&quot;</span>&gt;</span>Home <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;sr-only&quot;</span>&gt;</span>(current)<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;nav-item&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;nav-link&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://v4.bootcss.com/docs/examples/carousel/#&quot;</span>&gt;</span>Link<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;nav-item&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;nav-link disabled&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://v4.bootcss.com/docs/examples/carousel/#&quot;</span> <span class="attr">tabindex</span>=<span class="string">&quot;-1&quot;</span> <span class="attr">aria-disabled</span>=<span class="string">&quot;true&quot;</span>&gt;</span>Disabled<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">form</span> <span class="attr">class</span>=<span class="string">&quot;form-inline mt-2 mt-md-0&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">&quot;form-control mr-sm-2&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;Search&quot;</span> <span class="attr">aria-label</span>=<span class="string">&quot;Search&quot;</span>&gt;</span></span><br><span class="line">		</span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-outline-success my-2 my-sm-0&quot;</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span>&gt;</span>Search<span class="tag">&lt;/<span class="name">button</span>&gt;</span>&amp;nbsp</span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">sec:authorize</span>=<span class="string">&quot;hasAuthority(&#x27;ROLE_ADMIN&#x27;)&quot;</span>  <span class="attr">class</span>=<span class="string">&quot;btn btn-outline-success my-2 my-sm-0&quot;</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/admin&#125;&quot;</span>&gt;</span>Console<span class="tag">&lt;/<span class="name">a</span>&gt;</span>&amp;nbsp</span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-outline-success my-2 my-sm-0&quot;</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/logout&#125;&quot;</span>&gt;</span>Sign out<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">main</span> <span class="attr">role</span>=<span class="string">&quot;main&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;myCarousel&quot;</span> <span class="attr">class</span>=<span class="string">&quot;carousel slide&quot;</span> <span class="attr">data-ride</span>=<span class="string">&quot;carousel&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ol</span> <span class="attr">class</span>=<span class="string">&quot;carousel-indicators&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span> <span class="attr">data-target</span>=<span class="string">&quot;#myCarousel&quot;</span> <span class="attr">data-slide-to</span>=<span class="string">&quot;0&quot;</span> <span class="attr">class</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span> <span class="attr">data-target</span>=<span class="string">&quot;#myCarousel&quot;</span> <span class="attr">data-slide-to</span>=<span class="string">&quot;1&quot;</span> <span class="attr">class</span>=<span class="string">&quot;active&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span> <span class="attr">data-target</span>=<span class="string">&quot;#myCarousel&quot;</span> <span class="attr">data-slide-to</span>=<span class="string">&quot;2&quot;</span> <span class="attr">class</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;carousel-inner&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;carousel-item&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">svg</span> <span class="attr">class</span>=<span class="string">&quot;bd-placeholder-img&quot;</span> <span class="attr">width</span>=<span class="string">&quot;100%&quot;</span> <span class="attr">height</span>=<span class="string">&quot;100%&quot;</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/2000/svg&quot;</span> <span class="attr">preserveAspectRatio</span>=<span class="string">&quot;xMidYMid slice&quot;</span> <span class="attr">focusable</span>=<span class="string">&quot;false&quot;</span> <span class="attr">role</span>=<span class="string">&quot;img&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">rect</span> <span class="attr">width</span>=<span class="string">&quot;100%&quot;</span> <span class="attr">height</span>=<span class="string">&quot;100%&quot;</span> <span class="attr">fill</span>=<span class="string">&quot;#777&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">rect</span>&gt;</span><span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;carousel-caption text-left&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Example headline.<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span>Cras justo odio, dapibus ac facilisis in, egestas eget quam. Donec id elit non mi porta gravida at eget metus. Nullam id dolor id nibh ultricies vehicula ut id elit.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-lg btn-primary&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://v4.bootcss.com/docs/examples/carousel/#&quot;</span> <span class="attr">role</span>=<span class="string">&quot;button&quot;</span>&gt;</span>Sign up today<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;carousel-item active&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">svg</span> <span class="attr">class</span>=<span class="string">&quot;bd-placeholder-img&quot;</span> <span class="attr">width</span>=<span class="string">&quot;100%&quot;</span> <span class="attr">height</span>=<span class="string">&quot;100%&quot;</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/2000/svg&quot;</span> <span class="attr">preserveAspectRatio</span>=<span class="string">&quot;xMidYMid slice&quot;</span> <span class="attr">focusable</span>=<span class="string">&quot;false&quot;</span> <span class="attr">role</span>=<span class="string">&quot;img&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">rect</span> <span class="attr">width</span>=<span class="string">&quot;100%&quot;</span> <span class="attr">height</span>=<span class="string">&quot;100%&quot;</span> <span class="attr">fill</span>=<span class="string">&quot;#777&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">rect</span>&gt;</span><span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;carousel-caption&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Another example headline.<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span>Cras justo odio, dapibus ac facilisis in, egestas eget quam. Donec id elit non mi porta gravida at eget metus. Nullam id dolor id nibh ultricies vehicula ut id elit.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-lg btn-primary&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://v4.bootcss.com/docs/examples/carousel/#&quot;</span> <span class="attr">role</span>=<span class="string">&quot;button&quot;</span>&gt;</span>Learn more<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;carousel-item&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">svg</span> <span class="attr">class</span>=<span class="string">&quot;bd-placeholder-img&quot;</span> <span class="attr">width</span>=<span class="string">&quot;100%&quot;</span> <span class="attr">height</span>=<span class="string">&quot;100%&quot;</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/2000/svg&quot;</span> <span class="attr">preserveAspectRatio</span>=<span class="string">&quot;xMidYMid slice&quot;</span> <span class="attr">focusable</span>=<span class="string">&quot;false&quot;</span> <span class="attr">role</span>=<span class="string">&quot;img&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">rect</span> <span class="attr">width</span>=<span class="string">&quot;100%&quot;</span> <span class="attr">height</span>=<span class="string">&quot;100%&quot;</span> <span class="attr">fill</span>=<span class="string">&quot;#777&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">rect</span>&gt;</span><span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;carousel-caption text-right&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h1</span>&gt;</span>One more for good measure.<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span>Cras justo odio, dapibus ac facilisis in, egestas eget quam. Donec id elit non mi porta gravida at eget metus. Nullam id dolor id nibh ultricies vehicula ut id elit.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-lg btn-primary&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://v4.bootcss.com/docs/examples/carousel/#&quot;</span> <span class="attr">role</span>=<span class="string">&quot;button&quot;</span>&gt;</span>Browse gallery<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;carousel-control-prev&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://v4.bootcss.com/docs/examples/carousel/#myCarousel&quot;</span> <span class="attr">role</span>=<span class="string">&quot;button&quot;</span> <span class="attr">data-slide</span>=<span class="string">&quot;prev&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;carousel-control-prev-icon&quot;</span> <span class="attr">aria-hidden</span>=<span class="string">&quot;true&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;sr-only&quot;</span>&gt;</span>Previous<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;carousel-control-next&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://v4.bootcss.com/docs/examples/carousel/#myCarousel&quot;</span> <span class="attr">role</span>=<span class="string">&quot;button&quot;</span> <span class="attr">data-slide</span>=<span class="string">&quot;next&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;carousel-control-next-icon&quot;</span> <span class="attr">aria-hidden</span>=<span class="string">&quot;true&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;sr-only&quot;</span>&gt;</span>Next<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- Marketing messaging and featurettes</span></span><br><span class="line"><span class="comment">  ================================================== --&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- Wrap the rest of the page in another container to center all the content. --&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container marketing&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- Three columns of text below the carousel --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-lg-4&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">svg</span> <span class="attr">class</span>=<span class="string">&quot;bd-placeholder-img rounded-circle&quot;</span> <span class="attr">width</span>=<span class="string">&quot;140&quot;</span> <span class="attr">height</span>=<span class="string">&quot;140&quot;</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/2000/svg&quot;</span> <span class="attr">preserveAspectRatio</span>=<span class="string">&quot;xMidYMid slice&quot;</span> <span class="attr">focusable</span>=<span class="string">&quot;false&quot;</span> <span class="attr">role</span>=<span class="string">&quot;img&quot;</span> <span class="attr">aria-label</span>=<span class="string">&quot;Placeholder: 140x140&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">title</span>&gt;</span>Placeholder<span class="tag">&lt;/<span class="name">title</span>&gt;</span><span class="tag">&lt;<span class="name">rect</span> <span class="attr">width</span>=<span class="string">&quot;100%&quot;</span> <span class="attr">height</span>=<span class="string">&quot;100%&quot;</span> <span class="attr">fill</span>=<span class="string">&quot;#777&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">rect</span>&gt;</span><span class="tag">&lt;<span class="name">text</span> <span class="attr">x</span>=<span class="string">&quot;50%&quot;</span> <span class="attr">y</span>=<span class="string">&quot;50%&quot;</span> <span class="attr">fill</span>=<span class="string">&quot;#777&quot;</span> <span class="attr">dy</span>=<span class="string">&quot;.3em&quot;</span>&gt;</span>140x140<span class="tag">&lt;/<span class="name">text</span>&gt;</span><span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>Heading<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>Donec sed odio dui. Etiam porta sem malesuada magna mollis euismod. Nullam id dolor id nibh ultricies vehicula ut id elit. Morbi leo risus, porta ac consectetur ac, vestibulum at eros. Praesent commodo cursus magna.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-secondary&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://v4.bootcss.com/docs/examples/carousel/#&quot;</span> <span class="attr">role</span>=<span class="string">&quot;button&quot;</span>&gt;</span>View details »<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="comment">&lt;!-- /.col-lg-4 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-lg-4&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">svg</span> <span class="attr">class</span>=<span class="string">&quot;bd-placeholder-img rounded-circle&quot;</span> <span class="attr">width</span>=<span class="string">&quot;140&quot;</span> <span class="attr">height</span>=<span class="string">&quot;140&quot;</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/2000/svg&quot;</span> <span class="attr">preserveAspectRatio</span>=<span class="string">&quot;xMidYMid slice&quot;</span> <span class="attr">focusable</span>=<span class="string">&quot;false&quot;</span> <span class="attr">role</span>=<span class="string">&quot;img&quot;</span> <span class="attr">aria-label</span>=<span class="string">&quot;Placeholder: 140x140&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">title</span>&gt;</span>Placeholder<span class="tag">&lt;/<span class="name">title</span>&gt;</span><span class="tag">&lt;<span class="name">rect</span> <span class="attr">width</span>=<span class="string">&quot;100%&quot;</span> <span class="attr">height</span>=<span class="string">&quot;100%&quot;</span> <span class="attr">fill</span>=<span class="string">&quot;#777&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">rect</span>&gt;</span><span class="tag">&lt;<span class="name">text</span> <span class="attr">x</span>=<span class="string">&quot;50%&quot;</span> <span class="attr">y</span>=<span class="string">&quot;50%&quot;</span> <span class="attr">fill</span>=<span class="string">&quot;#777&quot;</span> <span class="attr">dy</span>=<span class="string">&quot;.3em&quot;</span>&gt;</span>140x140<span class="tag">&lt;/<span class="name">text</span>&gt;</span><span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>Heading<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit. Cras mattis consectetur purus sit amet fermentum. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-secondary&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://v4.bootcss.com/docs/examples/carousel/#&quot;</span> <span class="attr">role</span>=<span class="string">&quot;button&quot;</span>&gt;</span>View details »<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="comment">&lt;!-- /.col-lg-4 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-lg-4&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">svg</span> <span class="attr">class</span>=<span class="string">&quot;bd-placeholder-img rounded-circle&quot;</span> <span class="attr">width</span>=<span class="string">&quot;140&quot;</span> <span class="attr">height</span>=<span class="string">&quot;140&quot;</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/2000/svg&quot;</span> <span class="attr">preserveAspectRatio</span>=<span class="string">&quot;xMidYMid slice&quot;</span> <span class="attr">focusable</span>=<span class="string">&quot;false&quot;</span> <span class="attr">role</span>=<span class="string">&quot;img&quot;</span> <span class="attr">aria-label</span>=<span class="string">&quot;Placeholder: 140x140&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">title</span>&gt;</span>Placeholder<span class="tag">&lt;/<span class="name">title</span>&gt;</span><span class="tag">&lt;<span class="name">rect</span> <span class="attr">width</span>=<span class="string">&quot;100%&quot;</span> <span class="attr">height</span>=<span class="string">&quot;100%&quot;</span> <span class="attr">fill</span>=<span class="string">&quot;#777&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">rect</span>&gt;</span><span class="tag">&lt;<span class="name">text</span> <span class="attr">x</span>=<span class="string">&quot;50%&quot;</span> <span class="attr">y</span>=<span class="string">&quot;50%&quot;</span> <span class="attr">fill</span>=<span class="string">&quot;#777&quot;</span> <span class="attr">dy</span>=<span class="string">&quot;.3em&quot;</span>&gt;</span>140x140<span class="tag">&lt;/<span class="name">text</span>&gt;</span><span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>Heading<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>Donec sed odio dui. Cras justo odio, dapibus ac facilisis in, egestas eget quam. Vestibulum id ligula porta felis euismod semper. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-secondary&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://v4.bootcss.com/docs/examples/carousel/#&quot;</span> <span class="attr">role</span>=<span class="string">&quot;button&quot;</span>&gt;</span>View details »<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="comment">&lt;!-- /.col-lg-4 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="comment">&lt;!-- /.row --&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- START THE FEATURETTES --&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span> <span class="attr">class</span>=<span class="string">&quot;featurette-divider&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row featurette&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-7&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span> <span class="attr">class</span>=<span class="string">&quot;featurette-heading&quot;</span>&gt;</span>First featurette heading. <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;text-muted&quot;</span>&gt;</span>It’ll blow your mind.<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;lead&quot;</span>&gt;</span>Donec ullamcorper nulla non metus auctor fringilla. Vestibulum id ligula porta felis euismod semper. Praesent commodo cursus magna, vel scelerisque nisl consectetur. Fusce dapibus, tellus ac cursus commodo.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-5&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">svg</span> <span class="attr">class</span>=<span class="string">&quot;bd-placeholder-img bd-placeholder-img-lg featurette-image img-fluid mx-auto&quot;</span> <span class="attr">width</span>=<span class="string">&quot;500&quot;</span> <span class="attr">height</span>=<span class="string">&quot;500&quot;</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/2000/svg&quot;</span> <span class="attr">preserveAspectRatio</span>=<span class="string">&quot;xMidYMid slice&quot;</span> <span class="attr">focusable</span>=<span class="string">&quot;false&quot;</span> <span class="attr">role</span>=<span class="string">&quot;img&quot;</span> <span class="attr">aria-label</span>=<span class="string">&quot;Placeholder: 500x500&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">title</span>&gt;</span>Placeholder<span class="tag">&lt;/<span class="name">title</span>&gt;</span><span class="tag">&lt;<span class="name">rect</span> <span class="attr">width</span>=<span class="string">&quot;100%&quot;</span> <span class="attr">height</span>=<span class="string">&quot;100%&quot;</span> <span class="attr">fill</span>=<span class="string">&quot;#eee&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">rect</span>&gt;</span><span class="tag">&lt;<span class="name">text</span> <span class="attr">x</span>=<span class="string">&quot;50%&quot;</span> <span class="attr">y</span>=<span class="string">&quot;50%&quot;</span> <span class="attr">fill</span>=<span class="string">&quot;#aaa&quot;</span> <span class="attr">dy</span>=<span class="string">&quot;.3em&quot;</span>&gt;</span>500x500<span class="tag">&lt;/<span class="name">text</span>&gt;</span><span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span> <span class="attr">class</span>=<span class="string">&quot;featurette-divider&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row featurette&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-7 order-md-2&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span> <span class="attr">class</span>=<span class="string">&quot;featurette-heading&quot;</span>&gt;</span>Oh yeah, it’s that good. <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;text-muted&quot;</span>&gt;</span>See for yourself.<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;lead&quot;</span>&gt;</span>Donec ullamcorper nulla non metus auctor fringilla. Vestibulum id ligula porta felis euismod semper. Praesent commodo cursus magna, vel scelerisque nisl consectetur. Fusce dapibus, tellus ac cursus commodo.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-5 order-md-1&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">svg</span> <span class="attr">class</span>=<span class="string">&quot;bd-placeholder-img bd-placeholder-img-lg featurette-image img-fluid mx-auto&quot;</span> <span class="attr">width</span>=<span class="string">&quot;500&quot;</span> <span class="attr">height</span>=<span class="string">&quot;500&quot;</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/2000/svg&quot;</span> <span class="attr">preserveAspectRatio</span>=<span class="string">&quot;xMidYMid slice&quot;</span> <span class="attr">focusable</span>=<span class="string">&quot;false&quot;</span> <span class="attr">role</span>=<span class="string">&quot;img&quot;</span> <span class="attr">aria-label</span>=<span class="string">&quot;Placeholder: 500x500&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">title</span>&gt;</span>Placeholder<span class="tag">&lt;/<span class="name">title</span>&gt;</span><span class="tag">&lt;<span class="name">rect</span> <span class="attr">width</span>=<span class="string">&quot;100%&quot;</span> <span class="attr">height</span>=<span class="string">&quot;100%&quot;</span> <span class="attr">fill</span>=<span class="string">&quot;#eee&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">rect</span>&gt;</span><span class="tag">&lt;<span class="name">text</span> <span class="attr">x</span>=<span class="string">&quot;50%&quot;</span> <span class="attr">y</span>=<span class="string">&quot;50%&quot;</span> <span class="attr">fill</span>=<span class="string">&quot;#aaa&quot;</span> <span class="attr">dy</span>=<span class="string">&quot;.3em&quot;</span>&gt;</span>500x500<span class="tag">&lt;/<span class="name">text</span>&gt;</span><span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span> <span class="attr">class</span>=<span class="string">&quot;featurette-divider&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row featurette&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-7&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span> <span class="attr">class</span>=<span class="string">&quot;featurette-heading&quot;</span>&gt;</span>And lastly, this one. <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;text-muted&quot;</span>&gt;</span>Checkmate.<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;lead&quot;</span>&gt;</span>Donec ullamcorper nulla non metus auctor fringilla. Vestibulum id ligula porta felis euismod semper. Praesent commodo cursus magna, vel scelerisque nisl consectetur. Fusce dapibus, tellus ac cursus commodo.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-5&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">svg</span> <span class="attr">class</span>=<span class="string">&quot;bd-placeholder-img bd-placeholder-img-lg featurette-image img-fluid mx-auto&quot;</span> <span class="attr">width</span>=<span class="string">&quot;500&quot;</span> <span class="attr">height</span>=<span class="string">&quot;500&quot;</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/2000/svg&quot;</span> <span class="attr">preserveAspectRatio</span>=<span class="string">&quot;xMidYMid slice&quot;</span> <span class="attr">focusable</span>=<span class="string">&quot;false&quot;</span> <span class="attr">role</span>=<span class="string">&quot;img&quot;</span> <span class="attr">aria-label</span>=<span class="string">&quot;Placeholder: 500x500&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">title</span>&gt;</span>Placeholder<span class="tag">&lt;/<span class="name">title</span>&gt;</span><span class="tag">&lt;<span class="name">rect</span> <span class="attr">width</span>=<span class="string">&quot;100%&quot;</span> <span class="attr">height</span>=<span class="string">&quot;100%&quot;</span> <span class="attr">fill</span>=<span class="string">&quot;#eee&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">rect</span>&gt;</span><span class="tag">&lt;<span class="name">text</span> <span class="attr">x</span>=<span class="string">&quot;50%&quot;</span> <span class="attr">y</span>=<span class="string">&quot;50%&quot;</span> <span class="attr">fill</span>=<span class="string">&quot;#aaa&quot;</span> <span class="attr">dy</span>=<span class="string">&quot;.3em&quot;</span>&gt;</span>500x500<span class="tag">&lt;/<span class="name">text</span>&gt;</span><span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span> <span class="attr">class</span>=<span class="string">&quot;featurette-divider&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- /END THE FEATURETTES --&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="comment">&lt;!-- /.container --&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- FOOTER --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">footer</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;float-right&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://v4.bootcss.com/docs/examples/carousel/#&quot;</span>&gt;</span>Back to top<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>© 2017-2020 Company, Inc. · <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://v4.bootcss.com/docs/examples/carousel/#&quot;</span>&gt;</span>Privacy<span class="tag">&lt;/<span class="name">a</span>&gt;</span> · <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://v4.bootcss.com/docs/examples/carousel/#&quot;</span>&gt;</span>Terms<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">main</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;./Dashboard_Bootstrap_files/jquery.slim.min.js&quot;</span> <span class="attr">th:src</span>=<span class="string">&quot;@&#123;/js/jquery.slim.min.js&#125;&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"><span class="variable language_">window</span>.<span class="property">jQuery</span> || <span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">&#x27;&lt;script src=&quot;/docs/assets/js/vendor/jquery.slim.min.js&quot;&gt;&lt;\/script&gt;&#x27;</span>)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;./Dashboard_Bootstrap_files/bootstrap.bundle.min.js&quot;</span> <span class="attr">th:src</span>=<span class="string">&quot;@&#123;/js/bootstrap.bundle.min.js&#125;&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>控制台面板<br><strong>dashboard.html</strong></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- saved from url=(0047)https://v4.bootcss.com/docs/examples/dashboard/ --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">head</span>&gt;</span><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span> <span class="attr">content</span>=<span class="string">&quot;text/html; charset=UTF-8&quot;</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1, shrink-to-fit=no&quot;</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- Bootstrap core CSS --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;/css/bootstrap.min.css&quot;</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/css/bootstrap.min.css&#125;&quot;</span>  <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.bd-placeholder-img</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">font-size</span>: <span class="number">1.125rem</span>;</span></span><br><span class="line"><span class="language-css">        text-anchor: middle;</span></span><br><span class="line"><span class="language-css">        -webkit-user-select: none;</span></span><br><span class="line"><span class="language-css">        -moz-user-select: none;</span></span><br><span class="line"><span class="language-css">        -ms-user-select: none;</span></span><br><span class="line"><span class="language-css">        user-select: none;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">      <span class="keyword">@media</span> (<span class="attribute">min-width</span>: <span class="number">768px</span>) &#123;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.bd-placeholder-img-lg</span> &#123;</span></span><br><span class="line"><span class="language-css">          <span class="attribute">font-size</span>: <span class="number">3.5rem</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Custom styles for this template --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;/css/bootstrap.min.css&quot;</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/css/dashboard.css&#125;&quot;</span>  <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"><span class="comment">/* Chart.js */</span></span></span><br><span class="line"><span class="language-css"><span class="keyword">@-webkit-keyframes</span> chartjs-render-animation&#123;<span class="selector-tag">from</span>&#123;<span class="attribute">opacity</span>:<span class="number">0.99</span>&#125;<span class="selector-tag">to</span>&#123;<span class="attribute">opacity</span>:<span class="number">1</span>&#125;&#125;<span class="keyword">@keyframes</span> chartjs-render-animation&#123;<span class="selector-tag">from</span>&#123;<span class="attribute">opacity</span>:<span class="number">0.99</span>&#125;<span class="selector-tag">to</span>&#123;<span class="attribute">opacity</span>:<span class="number">1</span>&#125;&#125;<span class="selector-class">.chartjs-render-monitor</span>&#123;-webkit-<span class="attribute">animation</span>:chartjs-render-animation <span class="number">0.001s</span>;<span class="attribute">animation</span>:chartjs-render-animation <span class="number">0.001s</span>;&#125;</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">nav</span> <span class="attr">class</span>=<span class="string">&quot;navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;navbar-brand col-sm-3 col-md-2 mr-0&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://v4.bootcss.com/docs/examples/dashboard/#&quot;</span>&gt;</span>Company name<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">&quot;form-control form-control-dark w-100&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;Search&quot;</span> <span class="attr">aria-label</span>=<span class="string">&quot;Search&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;navbar-nav px-3&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;nav-item text-nowrap&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;nav-link&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://v4.bootcss.com/docs/examples/dashboard/#&quot;</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/logout&#125;&quot;</span>&gt;</span>Sign out<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container-fluid&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">nav</span> <span class="attr">class</span>=<span class="string">&quot;col-md-2 d-none d-md-block bg-light sidebar&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;sidebar-sticky&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;nav flex-column&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;nav-item&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;nav-link active&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://v4.bootcss.com/docs/examples/dashboard/#&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">svg</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/2000/svg&quot;</span> <span class="attr">width</span>=<span class="string">&quot;24&quot;</span> <span class="attr">height</span>=<span class="string">&quot;24&quot;</span> <span class="attr">viewBox</span>=<span class="string">&quot;0 0 24 24&quot;</span> <span class="attr">fill</span>=<span class="string">&quot;none&quot;</span> <span class="attr">stroke</span>=<span class="string">&quot;currentColor&quot;</span> <span class="attr">stroke-width</span>=<span class="string">&quot;2&quot;</span> <span class="attr">stroke-linecap</span>=<span class="string">&quot;round&quot;</span> <span class="attr">stroke-linejoin</span>=<span class="string">&quot;round&quot;</span> <span class="attr">class</span>=<span class="string">&quot;feather feather-home&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">&quot;M3 9l9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">path</span>&gt;</span><span class="tag">&lt;<span class="name">polyline</span> <span class="attr">points</span>=<span class="string">&quot;9 22 9 12 15 12 15 22&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">polyline</span>&gt;</span><span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span><br><span class="line">              Dashboard <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;sr-only&quot;</span>&gt;</span>(current)<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;nav-item&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;nav-link&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://v4.bootcss.com/docs/examples/dashboard/#&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">svg</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/2000/svg&quot;</span> <span class="attr">width</span>=<span class="string">&quot;24&quot;</span> <span class="attr">height</span>=<span class="string">&quot;24&quot;</span> <span class="attr">viewBox</span>=<span class="string">&quot;0 0 24 24&quot;</span> <span class="attr">fill</span>=<span class="string">&quot;none&quot;</span> <span class="attr">stroke</span>=<span class="string">&quot;currentColor&quot;</span> <span class="attr">stroke-width</span>=<span class="string">&quot;2&quot;</span> <span class="attr">stroke-linecap</span>=<span class="string">&quot;round&quot;</span> <span class="attr">stroke-linejoin</span>=<span class="string">&quot;round&quot;</span> <span class="attr">class</span>=<span class="string">&quot;feather feather-file&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">&quot;M13 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V9z&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">path</span>&gt;</span><span class="tag">&lt;<span class="name">polyline</span> <span class="attr">points</span>=<span class="string">&quot;13 2 13 9 20 9&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">polyline</span>&gt;</span><span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span><br><span class="line">              Orders</span><br><span class="line">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;nav-item&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;nav-link&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://v4.bootcss.com/docs/examples/dashboard/#&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">svg</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/2000/svg&quot;</span> <span class="attr">width</span>=<span class="string">&quot;24&quot;</span> <span class="attr">height</span>=<span class="string">&quot;24&quot;</span> <span class="attr">viewBox</span>=<span class="string">&quot;0 0 24 24&quot;</span> <span class="attr">fill</span>=<span class="string">&quot;none&quot;</span> <span class="attr">stroke</span>=<span class="string">&quot;currentColor&quot;</span> <span class="attr">stroke-width</span>=<span class="string">&quot;2&quot;</span> <span class="attr">stroke-linecap</span>=<span class="string">&quot;round&quot;</span> <span class="attr">stroke-linejoin</span>=<span class="string">&quot;round&quot;</span> <span class="attr">class</span>=<span class="string">&quot;feather feather-shopping-cart&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">circle</span> <span class="attr">cx</span>=<span class="string">&quot;9&quot;</span> <span class="attr">cy</span>=<span class="string">&quot;21&quot;</span> <span class="attr">r</span>=<span class="string">&quot;1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">circle</span>&gt;</span><span class="tag">&lt;<span class="name">circle</span> <span class="attr">cx</span>=<span class="string">&quot;20&quot;</span> <span class="attr">cy</span>=<span class="string">&quot;21&quot;</span> <span class="attr">r</span>=<span class="string">&quot;1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">circle</span>&gt;</span><span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">&quot;M1 1h4l2.68 13.39a2 2 0 0 0 2 1.61h9.72a2 2 0 0 0 2-1.61L23 6H6&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">path</span>&gt;</span><span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span><br><span class="line">              Products</span><br><span class="line">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;nav-item&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;nav-link&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://v4.bootcss.com/docs/examples/dashboard/#&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">svg</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/2000/svg&quot;</span> <span class="attr">width</span>=<span class="string">&quot;24&quot;</span> <span class="attr">height</span>=<span class="string">&quot;24&quot;</span> <span class="attr">viewBox</span>=<span class="string">&quot;0 0 24 24&quot;</span> <span class="attr">fill</span>=<span class="string">&quot;none&quot;</span> <span class="attr">stroke</span>=<span class="string">&quot;currentColor&quot;</span> <span class="attr">stroke-width</span>=<span class="string">&quot;2&quot;</span> <span class="attr">stroke-linecap</span>=<span class="string">&quot;round&quot;</span> <span class="attr">stroke-linejoin</span>=<span class="string">&quot;round&quot;</span> <span class="attr">class</span>=<span class="string">&quot;feather feather-users&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">&quot;M17 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">path</span>&gt;</span><span class="tag">&lt;<span class="name">circle</span> <span class="attr">cx</span>=<span class="string">&quot;9&quot;</span> <span class="attr">cy</span>=<span class="string">&quot;7&quot;</span> <span class="attr">r</span>=<span class="string">&quot;4&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">circle</span>&gt;</span><span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">&quot;M23 21v-2a4 4 0 0 0-3-3.87&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">path</span>&gt;</span><span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">&quot;M16 3.13a4 4 0 0 1 0 7.75&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">path</span>&gt;</span><span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span><br><span class="line">              Customers</span><br><span class="line">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;nav-item&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;nav-link&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://v4.bootcss.com/docs/examples/dashboard/#&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">svg</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/2000/svg&quot;</span> <span class="attr">width</span>=<span class="string">&quot;24&quot;</span> <span class="attr">height</span>=<span class="string">&quot;24&quot;</span> <span class="attr">viewBox</span>=<span class="string">&quot;0 0 24 24&quot;</span> <span class="attr">fill</span>=<span class="string">&quot;none&quot;</span> <span class="attr">stroke</span>=<span class="string">&quot;currentColor&quot;</span> <span class="attr">stroke-width</span>=<span class="string">&quot;2&quot;</span> <span class="attr">stroke-linecap</span>=<span class="string">&quot;round&quot;</span> <span class="attr">stroke-linejoin</span>=<span class="string">&quot;round&quot;</span> <span class="attr">class</span>=<span class="string">&quot;feather feather-bar-chart-2&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">line</span> <span class="attr">x1</span>=<span class="string">&quot;18&quot;</span> <span class="attr">y1</span>=<span class="string">&quot;20&quot;</span> <span class="attr">x2</span>=<span class="string">&quot;18&quot;</span> <span class="attr">y2</span>=<span class="string">&quot;10&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">line</span>&gt;</span><span class="tag">&lt;<span class="name">line</span> <span class="attr">x1</span>=<span class="string">&quot;12&quot;</span> <span class="attr">y1</span>=<span class="string">&quot;20&quot;</span> <span class="attr">x2</span>=<span class="string">&quot;12&quot;</span> <span class="attr">y2</span>=<span class="string">&quot;4&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">line</span>&gt;</span><span class="tag">&lt;<span class="name">line</span> <span class="attr">x1</span>=<span class="string">&quot;6&quot;</span> <span class="attr">y1</span>=<span class="string">&quot;20&quot;</span> <span class="attr">x2</span>=<span class="string">&quot;6&quot;</span> <span class="attr">y2</span>=<span class="string">&quot;14&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">line</span>&gt;</span><span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span><br><span class="line">              Reports</span><br><span class="line">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;nav-item&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;nav-link&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://v4.bootcss.com/docs/examples/dashboard/#&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">svg</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/2000/svg&quot;</span> <span class="attr">width</span>=<span class="string">&quot;24&quot;</span> <span class="attr">height</span>=<span class="string">&quot;24&quot;</span> <span class="attr">viewBox</span>=<span class="string">&quot;0 0 24 24&quot;</span> <span class="attr">fill</span>=<span class="string">&quot;none&quot;</span> <span class="attr">stroke</span>=<span class="string">&quot;currentColor&quot;</span> <span class="attr">stroke-width</span>=<span class="string">&quot;2&quot;</span> <span class="attr">stroke-linecap</span>=<span class="string">&quot;round&quot;</span> <span class="attr">stroke-linejoin</span>=<span class="string">&quot;round&quot;</span> <span class="attr">class</span>=<span class="string">&quot;feather feather-layers&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">polygon</span> <span class="attr">points</span>=<span class="string">&quot;12 2 2 7 12 12 22 7 12 2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">polygon</span>&gt;</span><span class="tag">&lt;<span class="name">polyline</span> <span class="attr">points</span>=<span class="string">&quot;2 17 12 22 22 17&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">polyline</span>&gt;</span><span class="tag">&lt;<span class="name">polyline</span> <span class="attr">points</span>=<span class="string">&quot;2 12 12 17 22 12&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">polyline</span>&gt;</span><span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span><br><span class="line">              Integrations</span><br><span class="line">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">h6</span> <span class="attr">class</span>=<span class="string">&quot;sidebar-heading d-flex justify-content-between align-items-center px-3 mt-4 mb-1 text-muted&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">span</span>&gt;</span>Saved reports<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;d-flex align-items-center text-muted&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://v4.bootcss.com/docs/examples/dashboard/#&quot;</span> <span class="attr">aria-label</span>=<span class="string">&quot;Add a new report&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">svg</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/2000/svg&quot;</span> <span class="attr">width</span>=<span class="string">&quot;24&quot;</span> <span class="attr">height</span>=<span class="string">&quot;24&quot;</span> <span class="attr">viewBox</span>=<span class="string">&quot;0 0 24 24&quot;</span> <span class="attr">fill</span>=<span class="string">&quot;none&quot;</span> <span class="attr">stroke</span>=<span class="string">&quot;currentColor&quot;</span> <span class="attr">stroke-width</span>=<span class="string">&quot;2&quot;</span> <span class="attr">stroke-linecap</span>=<span class="string">&quot;round&quot;</span> <span class="attr">stroke-linejoin</span>=<span class="string">&quot;round&quot;</span> <span class="attr">class</span>=<span class="string">&quot;feather feather-plus-circle&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">circle</span> <span class="attr">cx</span>=<span class="string">&quot;12&quot;</span> <span class="attr">cy</span>=<span class="string">&quot;12&quot;</span> <span class="attr">r</span>=<span class="string">&quot;10&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">circle</span>&gt;</span><span class="tag">&lt;<span class="name">line</span> <span class="attr">x1</span>=<span class="string">&quot;12&quot;</span> <span class="attr">y1</span>=<span class="string">&quot;8&quot;</span> <span class="attr">x2</span>=<span class="string">&quot;12&quot;</span> <span class="attr">y2</span>=<span class="string">&quot;16&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">line</span>&gt;</span><span class="tag">&lt;<span class="name">line</span> <span class="attr">x1</span>=<span class="string">&quot;8&quot;</span> <span class="attr">y1</span>=<span class="string">&quot;12&quot;</span> <span class="attr">x2</span>=<span class="string">&quot;16&quot;</span> <span class="attr">y2</span>=<span class="string">&quot;12&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">line</span>&gt;</span><span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">h6</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;nav flex-column mb-2&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;nav-item&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;nav-link&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://v4.bootcss.com/docs/examples/dashboard/#&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">svg</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/2000/svg&quot;</span> <span class="attr">width</span>=<span class="string">&quot;24&quot;</span> <span class="attr">height</span>=<span class="string">&quot;24&quot;</span> <span class="attr">viewBox</span>=<span class="string">&quot;0 0 24 24&quot;</span> <span class="attr">fill</span>=<span class="string">&quot;none&quot;</span> <span class="attr">stroke</span>=<span class="string">&quot;currentColor&quot;</span> <span class="attr">stroke-width</span>=<span class="string">&quot;2&quot;</span> <span class="attr">stroke-linecap</span>=<span class="string">&quot;round&quot;</span> <span class="attr">stroke-linejoin</span>=<span class="string">&quot;round&quot;</span> <span class="attr">class</span>=<span class="string">&quot;feather feather-file-text&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">&quot;M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">path</span>&gt;</span><span class="tag">&lt;<span class="name">polyline</span> <span class="attr">points</span>=<span class="string">&quot;14 2 14 8 20 8&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">polyline</span>&gt;</span><span class="tag">&lt;<span class="name">line</span> <span class="attr">x1</span>=<span class="string">&quot;16&quot;</span> <span class="attr">y1</span>=<span class="string">&quot;13&quot;</span> <span class="attr">x2</span>=<span class="string">&quot;8&quot;</span> <span class="attr">y2</span>=<span class="string">&quot;13&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">line</span>&gt;</span><span class="tag">&lt;<span class="name">line</span> <span class="attr">x1</span>=<span class="string">&quot;16&quot;</span> <span class="attr">y1</span>=<span class="string">&quot;17&quot;</span> <span class="attr">x2</span>=<span class="string">&quot;8&quot;</span> <span class="attr">y2</span>=<span class="string">&quot;17&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">line</span>&gt;</span><span class="tag">&lt;<span class="name">polyline</span> <span class="attr">points</span>=<span class="string">&quot;10 9 9 9 8 9&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">polyline</span>&gt;</span><span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span><br><span class="line">              Current month</span><br><span class="line">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;nav-item&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;nav-link&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://v4.bootcss.com/docs/examples/dashboard/#&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">svg</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/2000/svg&quot;</span> <span class="attr">width</span>=<span class="string">&quot;24&quot;</span> <span class="attr">height</span>=<span class="string">&quot;24&quot;</span> <span class="attr">viewBox</span>=<span class="string">&quot;0 0 24 24&quot;</span> <span class="attr">fill</span>=<span class="string">&quot;none&quot;</span> <span class="attr">stroke</span>=<span class="string">&quot;currentColor&quot;</span> <span class="attr">stroke-width</span>=<span class="string">&quot;2&quot;</span> <span class="attr">stroke-linecap</span>=<span class="string">&quot;round&quot;</span> <span class="attr">stroke-linejoin</span>=<span class="string">&quot;round&quot;</span> <span class="attr">class</span>=<span class="string">&quot;feather feather-file-text&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">&quot;M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">path</span>&gt;</span><span class="tag">&lt;<span class="name">polyline</span> <span class="attr">points</span>=<span class="string">&quot;14 2 14 8 20 8&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">polyline</span>&gt;</span><span class="tag">&lt;<span class="name">line</span> <span class="attr">x1</span>=<span class="string">&quot;16&quot;</span> <span class="attr">y1</span>=<span class="string">&quot;13&quot;</span> <span class="attr">x2</span>=<span class="string">&quot;8&quot;</span> <span class="attr">y2</span>=<span class="string">&quot;13&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">line</span>&gt;</span><span class="tag">&lt;<span class="name">line</span> <span class="attr">x1</span>=<span class="string">&quot;16&quot;</span> <span class="attr">y1</span>=<span class="string">&quot;17&quot;</span> <span class="attr">x2</span>=<span class="string">&quot;8&quot;</span> <span class="attr">y2</span>=<span class="string">&quot;17&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">line</span>&gt;</span><span class="tag">&lt;<span class="name">polyline</span> <span class="attr">points</span>=<span class="string">&quot;10 9 9 9 8 9&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">polyline</span>&gt;</span><span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span><br><span class="line">              Last quarter</span><br><span class="line">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;nav-item&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;nav-link&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://v4.bootcss.com/docs/examples/dashboard/#&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">svg</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/2000/svg&quot;</span> <span class="attr">width</span>=<span class="string">&quot;24&quot;</span> <span class="attr">height</span>=<span class="string">&quot;24&quot;</span> <span class="attr">viewBox</span>=<span class="string">&quot;0 0 24 24&quot;</span> <span class="attr">fill</span>=<span class="string">&quot;none&quot;</span> <span class="attr">stroke</span>=<span class="string">&quot;currentColor&quot;</span> <span class="attr">stroke-width</span>=<span class="string">&quot;2&quot;</span> <span class="attr">stroke-linecap</span>=<span class="string">&quot;round&quot;</span> <span class="attr">stroke-linejoin</span>=<span class="string">&quot;round&quot;</span> <span class="attr">class</span>=<span class="string">&quot;feather feather-file-text&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">&quot;M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">path</span>&gt;</span><span class="tag">&lt;<span class="name">polyline</span> <span class="attr">points</span>=<span class="string">&quot;14 2 14 8 20 8&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">polyline</span>&gt;</span><span class="tag">&lt;<span class="name">line</span> <span class="attr">x1</span>=<span class="string">&quot;16&quot;</span> <span class="attr">y1</span>=<span class="string">&quot;13&quot;</span> <span class="attr">x2</span>=<span class="string">&quot;8&quot;</span> <span class="attr">y2</span>=<span class="string">&quot;13&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">line</span>&gt;</span><span class="tag">&lt;<span class="name">line</span> <span class="attr">x1</span>=<span class="string">&quot;16&quot;</span> <span class="attr">y1</span>=<span class="string">&quot;17&quot;</span> <span class="attr">x2</span>=<span class="string">&quot;8&quot;</span> <span class="attr">y2</span>=<span class="string">&quot;17&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">line</span>&gt;</span><span class="tag">&lt;<span class="name">polyline</span> <span class="attr">points</span>=<span class="string">&quot;10 9 9 9 8 9&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">polyline</span>&gt;</span><span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span><br><span class="line">              Social engagement</span><br><span class="line">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;nav-item&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;nav-link&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://v4.bootcss.com/docs/examples/dashboard/#&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">svg</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/2000/svg&quot;</span> <span class="attr">width</span>=<span class="string">&quot;24&quot;</span> <span class="attr">height</span>=<span class="string">&quot;24&quot;</span> <span class="attr">viewBox</span>=<span class="string">&quot;0 0 24 24&quot;</span> <span class="attr">fill</span>=<span class="string">&quot;none&quot;</span> <span class="attr">stroke</span>=<span class="string">&quot;currentColor&quot;</span> <span class="attr">stroke-width</span>=<span class="string">&quot;2&quot;</span> <span class="attr">stroke-linecap</span>=<span class="string">&quot;round&quot;</span> <span class="attr">stroke-linejoin</span>=<span class="string">&quot;round&quot;</span> <span class="attr">class</span>=<span class="string">&quot;feather feather-file-text&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">&quot;M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">path</span>&gt;</span><span class="tag">&lt;<span class="name">polyline</span> <span class="attr">points</span>=<span class="string">&quot;14 2 14 8 20 8&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">polyline</span>&gt;</span><span class="tag">&lt;<span class="name">line</span> <span class="attr">x1</span>=<span class="string">&quot;16&quot;</span> <span class="attr">y1</span>=<span class="string">&quot;13&quot;</span> <span class="attr">x2</span>=<span class="string">&quot;8&quot;</span> <span class="attr">y2</span>=<span class="string">&quot;13&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">line</span>&gt;</span><span class="tag">&lt;<span class="name">line</span> <span class="attr">x1</span>=<span class="string">&quot;16&quot;</span> <span class="attr">y1</span>=<span class="string">&quot;17&quot;</span> <span class="attr">x2</span>=<span class="string">&quot;8&quot;</span> <span class="attr">y2</span>=<span class="string">&quot;17&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">line</span>&gt;</span><span class="tag">&lt;<span class="name">polyline</span> <span class="attr">points</span>=<span class="string">&quot;10 9 9 9 8 9&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">polyline</span>&gt;</span><span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span><br><span class="line">              Year-end sale</span><br><span class="line">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">main</span> <span class="attr">role</span>=<span class="string">&quot;main&quot;</span> <span class="attr">class</span>=<span class="string">&quot;col-md-9 ml-sm-auto col-lg-10 px-4&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;chartjs-size-monitor&quot;</span> <span class="attr">style</span>=<span class="string">&quot;position: absolute; left: 0px; top: 0px; right: 0px; bottom: 0px; overflow: hidden; pointer-events: none; visibility: hidden; z-index: -1;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;chartjs-size-monitor-expand&quot;</span> <span class="attr">style</span>=<span class="string">&quot;position:absolute;left:0;top:0;right:0;bottom:0;overflow:hidden;pointer-events:none;visibility:hidden;z-index:-1;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;position:absolute;width:1000000px;height:1000000px;left:0;top:0&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;chartjs-size-monitor-shrink&quot;</span> <span class="attr">style</span>=<span class="string">&quot;position:absolute;left:0;top:0;right:0;bottom:0;overflow:hidden;pointer-events:none;visibility:hidden;z-index:-1;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;position:absolute;width:200%;height:200%;left:0; top:0&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">&quot;h2&quot;</span>&gt;</span>Dashboard<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;btn-toolbar mb-2 mb-md-0&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;btn-group mr-2&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-sm btn-outline-secondary&quot;</span>&gt;</span>Share<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-sm btn-outline-secondary&quot;</span>&gt;</span>Export<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-sm btn-outline-secondary dropdown-toggle&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">svg</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/2000/svg&quot;</span> <span class="attr">width</span>=<span class="string">&quot;24&quot;</span> <span class="attr">height</span>=<span class="string">&quot;24&quot;</span> <span class="attr">viewBox</span>=<span class="string">&quot;0 0 24 24&quot;</span> <span class="attr">fill</span>=<span class="string">&quot;none&quot;</span> <span class="attr">stroke</span>=<span class="string">&quot;currentColor&quot;</span> <span class="attr">stroke-width</span>=<span class="string">&quot;2&quot;</span> <span class="attr">stroke-linecap</span>=<span class="string">&quot;round&quot;</span> <span class="attr">stroke-linejoin</span>=<span class="string">&quot;round&quot;</span> <span class="attr">class</span>=<span class="string">&quot;feather feather-calendar&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">rect</span> <span class="attr">x</span>=<span class="string">&quot;3&quot;</span> <span class="attr">y</span>=<span class="string">&quot;4&quot;</span> <span class="attr">width</span>=<span class="string">&quot;18&quot;</span> <span class="attr">height</span>=<span class="string">&quot;18&quot;</span> <span class="attr">rx</span>=<span class="string">&quot;2&quot;</span> <span class="attr">ry</span>=<span class="string">&quot;2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">rect</span>&gt;</span><span class="tag">&lt;<span class="name">line</span> <span class="attr">x1</span>=<span class="string">&quot;16&quot;</span> <span class="attr">y1</span>=<span class="string">&quot;2&quot;</span> <span class="attr">x2</span>=<span class="string">&quot;16&quot;</span> <span class="attr">y2</span>=<span class="string">&quot;6&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">line</span>&gt;</span><span class="tag">&lt;<span class="name">line</span> <span class="attr">x1</span>=<span class="string">&quot;8&quot;</span> <span class="attr">y1</span>=<span class="string">&quot;2&quot;</span> <span class="attr">x2</span>=<span class="string">&quot;8&quot;</span> <span class="attr">y2</span>=<span class="string">&quot;6&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">line</span>&gt;</span><span class="tag">&lt;<span class="name">line</span> <span class="attr">x1</span>=<span class="string">&quot;3&quot;</span> <span class="attr">y1</span>=<span class="string">&quot;10&quot;</span> <span class="attr">x2</span>=<span class="string">&quot;21&quot;</span> <span class="attr">y2</span>=<span class="string">&quot;10&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">line</span>&gt;</span><span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span><br><span class="line">            This week</span><br><span class="line">          <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">canvas</span> <span class="attr">class</span>=<span class="string">&quot;my-4 w-100 chartjs-render-monitor&quot;</span> <span class="attr">id</span>=<span class="string">&quot;myChart&quot;</span> <span class="attr">width</span>=<span class="string">&quot;2049&quot;</span> <span class="attr">height</span>=<span class="string">&quot;864&quot;</span> <span class="attr">style</span>=<span class="string">&quot;display: block; height: 576px; width: 1366px;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">h2</span>&gt;</span>Section title<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;table-responsive&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">table</span> <span class="attr">class</span>=<span class="string">&quot;table table-striped table-sm&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">th</span>&gt;</span>#<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">th</span>&gt;</span>Header<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">th</span>&gt;</span>Header<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">th</span>&gt;</span>Header<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">th</span>&gt;</span>Header<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span>1,001<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span>Lorem<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span>ipsum<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span>dolor<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span>sit<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span>1,002<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span>amet<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span>consectetur<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span>adipiscing<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span>elit<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span>1,003<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span>Integer<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span>nec<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span>odio<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span>Praesent<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span>1,003<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span>libero<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span>Sed<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span>cursus<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span>ante<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span>1,004<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span>dapibus<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span>diam<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span>Sed<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span>nisi<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span>1,005<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span>Nulla<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span>quis<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span>sem<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span>at<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span>1,006<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span>nibh<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span>elementum<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span>imperdiet<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span>Duis<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span>1,007<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span>sagittis<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span>ipsum<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span>Praesent<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span>mauris<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span>1,008<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span>Fusce<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span>nec<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span>tellus<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span>sed<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span>1,009<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span>augue<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span>semper<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span>porta<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span>Mauris<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span>1,010<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span>massa<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span>Vestibulum<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span>lacinia<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span>arcu<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span>1,011<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span>eget<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span>nulla<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span>Class<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span>aptent<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span>1,012<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span>taciti<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span>sociosqu<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span>ad<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span>litora<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span>1,013<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span>torquent<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span>per<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span>conubia<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span>nostra<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span>1,014<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span>per<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span>inceptos<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span>himenaeos<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span>Curabitur<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span>1,015<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span>sodales<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span>ligula<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span>in<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span>libero<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">main</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;./Dashboard_Bootstrap_files/jquery.slim.min.js&quot;</span> <span class="attr">th:src</span>=<span class="string">&quot;@&#123;/js/jquery.slim.min.js&#125;&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;./Dashboard_Bootstrap_files/bootstrap.bundle.min.js&quot;</span> <span class="attr">th:src</span>=<span class="string">&quot;@&#123;/js/bootstrap.bundle.min.js&#125;&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;./Dashboard_Bootstrap_files/feather.min.js&quot;</span> <span class="attr">th:src</span>=<span class="string">&quot;@&#123;/js/feather.min.js&#125;&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;./Dashboard_Bootstrap_files/Chart.min.js&quot;</span> <span class="attr">th:src</span>=<span class="string">&quot;@&#123;/js/Chart.min.js&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;./Dashboard_Bootstrap_files/dashboard.js&quot;</span> <span class="attr">th:src</span>=<span class="string">&quot;@&#123;/js/dashboard.js&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>logout.html</strong></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns:th</span>=<span class="string">&quot;http://www.thymeleaf.org&quot;</span>&gt;</span><span class="comment">&lt;!-- Thymeleaf的命名空间，将静态页面转换为动态的视图 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">content</span>=<span class="string">&quot;text/html;charset=UTF-8&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/css/bootstrap.min.css&#125;&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span> <span class="attr">id</span>=<span class="string">&quot;success&quot;</span> <span class="attr">class</span>=<span class="string">&quot;alert alert-info&quot;</span> <span class="attr">th:if</span>=<span class="string">&quot;$&#123;param.logSucc&#125;&quot;</span> &gt;</span>退出登录成功<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-primary&quot;</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/login&#125;&quot;</span> &gt;</span>登录<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="运行演示"><a href="#运行演示" class="headerlink" title="运行演示"></a>运行演示</h3><p>启动项目</p>
<p><strong>访问 <a href="http://localhost:8080/">http://localhost:8080/</a></strong><br><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/backend/spring_boot/security_login/2.png"></p>
<p><strong>普通用户登录，账号：Jack, 密码：A123456!</strong><br><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/backend/spring_boot/security_login/3.png"></p>
<p><strong>管理员登录，账号：Kevin, 密码：A123456!， 管理员登录成功后可以看到控制台</strong><br><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/backend/spring_boot/security_login/4.png"></p>
<p><strong>点击 Console 跳转到 dashborad</strong><br><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/backend/spring_boot/security_login/5.png"></p>
<p><strong>点击 Sign out 退出登录</strong><br><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/backend/spring_boot/security_login/6.png"></p>
<p>项目已上传至 Github: <a href="https://github.com/yekongle/springboot-code-samples/tree/master/springboot-security-login-sample">https://github.com/yekongle/springboot-code-samples/tree/master/springboot-security-login-sample</a> , 希望对小伙伴们有帮助哦。</p>
<p>参考链接：</p>
<ul>
<li><a href="https://v4.bootcss.com/docs/getting-started/introduction/">https://v4.bootcss.com/docs/getting-started/introduction/</a></li>
<li><a href="https://github.com/Baeldung/spring-security-registration">https://github.com/Baeldung/spring-security-registration</a></li>
</ul>
]]></content>
      <categories>
        <category>Spring Boot</category>
      </categories>
      <tags>
        <tag>SpringBoot</tag>
        <tag>SpringSecurity</tag>
      </tags>
  </entry>
  <entry>
    <title>Spring Boot2 实战系列之定时任务</title>
    <url>/2020/04/12/springboot-scheduled-sample/</url>
    <content><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>在系统中使用定时任务已经是一个比较常见的事情，比如需要定时发送邮件报告，生成系统日志，进行数据归档等。Spring3.0 起加入了任务调度功能 Schedule, 它不需要使用依赖其他 JAR 包，使用起来比较方便。</p>
<p>在 SpringBoot 中使用 scheduled，在项目启动类上添加注解 @EnableScheduling 来开启任务调度，然后在方法上使用注解 @Scheduled</p>
<span id="more"></span>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Scheduled(fixedRate = 5000)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">fixedRate</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">SimpleDateFormat</span> <span class="variable">dateFormat</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(<span class="string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>);</span><br><span class="line">    log.info(<span class="string">&quot;The time is now &#123;&#125;&quot;</span>, dateFormat.format(<span class="keyword">new</span> <span class="title class_">Date</span>()));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Scheduled(fixedDelay = 5000)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">fixedDelay</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">SimpleDateFormat</span> <span class="variable">dateFormat</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(<span class="string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>);</span><br><span class="line">    log.info(<span class="string">&quot;The time is now &#123;&#125;&quot;</span>, dateFormat.format(<span class="keyword">new</span> <span class="title class_">Date</span>()));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Scheduled(initialDelay = 5000, fixedDelay = 5000)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">initialDelay</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">SimpleDateFormat</span> <span class="variable">dateFormat</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(<span class="string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>);</span><br><span class="line">    log.info(<span class="string">&quot;The time is now &#123;&#125;&quot;</span>, dateFormat.format(<span class="keyword">new</span> <span class="title class_">Date</span>()));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Scheduled(cron = &quot;0/10 * * * * *&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">reportCurrentTime</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">SimpleDateFormat</span> <span class="variable">dateFormat</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(<span class="string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>);</span><br><span class="line">    log.info(<span class="string">&quot;The time is now &#123;&#125;&quot;</span>, dateFormat.format(<span class="keyword">new</span> <span class="title class_">Date</span>()));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>注意到这里有几个常用的 Scheduled 参数：</p>
<ul>
<li>fixedRate：每间隔多长时间调用一次该方法</li>
<li>fixedDelay: 上一次任务完成后，间隔多长时间调用该方法</li>
<li>initialDelay：首次任务启动延迟多长时间</li>
<li>cron: 按照指定的表达式实行更精细的任务调度</li>
</ul>
<p>Cron 每个域的含义为：{秒}  {分}  {时}  {日}  {月}  {周}，对应的范围如下：<br>域 | 范围 | 可用的特殊字符<br>—|—|—<br>秒 | 0-59 | , - * /<br>分 | 0-59 | , - * /<br>时 | 0-23 | , - * /<br>日 | 1-31 | , - * / ?<br>月 | 1-12 或 JAN-DEC | , - * /<br>周 | 0-7(0和7都是星期天) 或 SUN-SAT | , - * / ?</p>
<p>Cron 使用例子<br>cron 表达式 | 含义<br>—|—<br>0 0 * * * * | 每小时执行一次<br>*/10 * * * * * | 每10秒执行一次<br>0 0 8-10 * * * | 每天 8，9，10点执行一次<br>0 0 6,19 * * * | 每天上午6点和下午7点执行一次<br>0 0/30 8-10 * * * | 每天8:00, 8:30, 9:00, 9:30, 10:00, 10:30 执行一次<br>0 0 9-17 * * MON-FRI | 工作日上午9点到下午5点每小时执行一次<br>0 0 0 25 12 ? | 每个圣诞节的午夜触发一次</p>
<p>注意上面用到的特殊字符：**, - * / ?**，它们的含义是：</p>
<ul>
<li><strong>“,”</strong>: 表示枚举多个值</li>
<li>**”-“**：表示范围</li>
<li><strong>“*”</strong>: 匹配该域的任意值</li>
<li><strong>“/“</strong>: 表示从起始时间触发一次后每隔多长时间执行一次</li>
<li><strong>“?”</strong>: 只能在日和周域使用, 表示不明确的值，作用和 <strong>“*”</strong> 一样，匹配任意值<h3 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h3>项目结构图如下：<br><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/backend/spring_boot/scheduled/1.jpg"></li>
</ul>
<p>pom 依赖文件如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span><br><span class="line">&lt;project xmlns=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> xmlns:xsi=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span><br><span class="line">	xsi:schemaLocation=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span><br><span class="line">	&lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;</span><br><span class="line">	&lt;parent&gt;</span><br><span class="line">		&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">		&lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;</span><br><span class="line">		&lt;version&gt;2.2.5.RELEASE&lt;/version&gt;</span><br><span class="line">		&lt;relativePath/&gt; &lt;!-- lookup parent from repository --&gt;</span><br><span class="line">	&lt;/parent&gt;</span><br><span class="line">	&lt;groupId&gt;top.yekongle&lt;/groupId&gt;</span><br><span class="line">	&lt;artifactId&gt;springboot-scheduled-sample&lt;/artifactId&gt;</span><br><span class="line">	&lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;</span><br><span class="line">	&lt;name&gt;springboot-scheduled-sample&lt;/name&gt;</span><br><span class="line">	&lt;description&gt;Scheduled project <span class="keyword">for</span> Spring Boot&lt;/description&gt;</span><br><span class="line"></span><br><span class="line">	&lt;properties&gt;</span><br><span class="line">		&lt;java.version&gt;1.8&lt;/java.version&gt;</span><br><span class="line">	&lt;/properties&gt;</span><br><span class="line"></span><br><span class="line">	&lt;dependencies&gt;</span><br><span class="line">		&lt;dependency&gt;</span><br><span class="line">			&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">			&lt;artifactId&gt;spring-boot-starter&lt;/artifactId&gt;</span><br><span class="line">		&lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">		&lt;dependency&gt;</span><br><span class="line">			&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">			&lt;artifactId&gt;spring-boot-devtools&lt;/artifactId&gt;</span><br><span class="line">			&lt;scope&gt;runtime&lt;/scope&gt;</span><br><span class="line">			&lt;optional&gt;<span class="literal">true</span>&lt;/optional&gt;</span><br><span class="line">		&lt;/dependency&gt;</span><br><span class="line">		&lt;dependency&gt;</span><br><span class="line">			&lt;groupId&gt;org.projectlombok&lt;/groupId&gt;</span><br><span class="line">			&lt;artifactId&gt;lombok&lt;/artifactId&gt;</span><br><span class="line">			&lt;optional&gt;<span class="literal">true</span>&lt;/optional&gt;</span><br><span class="line">		&lt;/dependency&gt;</span><br><span class="line">		&lt;dependency&gt;</span><br><span class="line">			&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">			&lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt;</span><br><span class="line">			&lt;scope&gt;<span class="built_in">test</span>&lt;/scope&gt;</span><br><span class="line">			&lt;exclusions&gt;</span><br><span class="line">				&lt;exclusion&gt;</span><br><span class="line">					&lt;groupId&gt;org.junit.vintage&lt;/groupId&gt;</span><br><span class="line">					&lt;artifactId&gt;junit-vintage-engine&lt;/artifactId&gt;</span><br><span class="line">				&lt;/exclusion&gt;</span><br><span class="line">			&lt;/exclusions&gt;</span><br><span class="line">		&lt;/dependency&gt;</span><br><span class="line">	&lt;/dependencies&gt;</span><br><span class="line"></span><br><span class="line">	&lt;build&gt;</span><br><span class="line">		&lt;plugins&gt;</span><br><span class="line">			&lt;plugin&gt;</span><br><span class="line">				&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">				&lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;</span><br><span class="line">			&lt;/plugin&gt;</span><br><span class="line">		&lt;/plugins&gt;</span><br><span class="line">	&lt;/build&gt;</span><br><span class="line"></span><br><span class="line">&lt;/project&gt;</span><br></pre></td></tr></table></figure>

<h3 id="代码编写"><a href="#代码编写" class="headerlink" title="代码编写"></a>代码编写</h3><p>SpringbootScheduledSampleApplication.java, 项目启动类</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> top.yekongle.scheduled;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.scheduling.annotation.EnableScheduling;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@EnableScheduling</span> 开启任务调度</span></span><br><span class="line"><span class="comment"> * */</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableScheduling</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SpringbootScheduledSampleApplication</span> &#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">		SpringApplication.run(SpringbootScheduledSampleApplication.class, args);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>ScheduledJob.java, 任务调度类</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> top.yekongle.scheduled.job;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.scheduling.annotation.Scheduled;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ScheduledJob</span> &#123;</span><br><span class="line">	<span class="comment">// 时间格式化</span></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">SimpleDateFormat</span> <span class="variable">format</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(<span class="string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 每5秒执行一次，无论上次任务执行结束与否，参数单位是毫秒</span></span><br><span class="line">	<span class="meta">@Scheduled(fixedRate = 5000)</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">fixedRate</span><span class="params">()</span> &#123;</span><br><span class="line">		log.info(<span class="string">&quot;fixedRate&gt;&gt;&gt;：&#123;&#125;&quot;</span>, format.format(<span class="keyword">new</span> <span class="title class_">Date</span>()));</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 当上次任务执行结束后，间隔5秒再执行下次任务，参数单位是毫秒</span></span><br><span class="line">	<span class="meta">@Scheduled(fixedDelay = 5000)</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">fixedDelay</span><span class="params">()</span> &#123;</span><br><span class="line">		log.info(<span class="string">&quot;fixedDelay&gt;&gt;&gt;：&#123;&#125;&quot;</span>, format.format(<span class="keyword">new</span> <span class="title class_">Date</span>()));</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// initialDelay 表示首次任务启动的延迟时间，参数单位是毫秒</span></span><br><span class="line">	<span class="meta">@Scheduled(initialDelay = 5000, fixedDelay = 5000)</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">initialDelay</span><span class="params">()</span> &#123;</span><br><span class="line">		log.info(<span class="string">&quot;initialDelay&gt;&gt;&gt;：&#123;&#125;&quot;</span>, format.format(<span class="keyword">new</span> <span class="title class_">Date</span>()));</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 使用cron表达式，可以按照cron的逻辑执行代码, 实行更精细的任务调度</span></span><br><span class="line">	<span class="comment">// 每隔10秒执行一次</span></span><br><span class="line">	<span class="meta">@Scheduled(cron = &quot;0/10 * * * * *&quot;)</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">startJob</span><span class="params">()</span> &#123;</span><br><span class="line">		log.info(<span class="string">&quot;Cron job：&#123;&#125;&quot;</span>, format.format(<span class="keyword">new</span> <span class="title class_">Date</span>()));</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="运行测试"><a href="#运行测试" class="headerlink" title="运行测试"></a>运行测试</h3><p><img data-src="https://cdn.jsdelivr.net/gh/yekongle/PhotoManager@master/blog/images/backend/spring_boot/scheduled/2.jpg"></p>
<p>项目已上传至 Github: <a href="https://github.com/yekongle/springboot-code-samples/tree/master/springboot-scheduled-sample">https://github.com/yekongle/springboot-code-samples/tree/master/springboot-scheduled-sample</a> , 希望对小伙伴们有帮助哦。</p>
]]></content>
      <categories>
        <category>Spring Boot</category>
      </categories>
      <tags>
        <tag>SpringBoot</tag>
        <tag>Scheduled</tag>
      </tags>
  </entry>
</search>
